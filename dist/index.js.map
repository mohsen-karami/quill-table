{"version":3,"file":"index.js","sources":["../src/assets/const/event.js","../src/assets/const/name.js","../src/format/TableWrapperFormat.js","../src/utils/index.js","../src/module/TableToolTip.js","../src/assets/const/vars.js","../src/blot/contain.js","../src/format/TableCellInnerFormat.js","../src/format/TableCellFormat.js","../src/module/TableSelection.js","../src/module/TableOperationMenu.js","../src/format/TableRowFormat.js","../src/format/TableColFormat.js","../src/format/TableFormat.js","../src/format/TableBodyFormat.js","../src/format/TableColgroupFormat.js","../src/format/rewrite/List.js","../src/index.js"],"sourcesContent":["export const CREATE_TABLE = 'createTable';\r\n","export const blotName = {\r\n    contain: 'contain',\r\n    tableWrapper: 'tableWrapper',\r\n    table: 'table',\r\n    tableColGroup: 'colgroup',\r\n    tableCol: 'col',\r\n    tableBody: 'tbody',\r\n    tableRow: 'tr',\r\n    tableCell: 'td',\r\n    tableCellInner: 'tableCellInner',\r\n};\r\nexport const moduleName = {\r\n    table: 'table',\r\n};\r\nexport const toolName = {\r\n    table: 'table',\r\n};\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableWrapperFormat extends Container {\r\n    static create(value) {\r\n        const node = super.create();\r\n\r\n        node.dataset.tableId = value;\r\n\r\n        node.addEventListener(\r\n            'dragstart',\r\n            (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            },\r\n            true\r\n        );\r\n        // 不允许拖拽进 table\r\n        node.ondrop = (e) => {\r\n            e.preventDefault();\r\n        };\r\n        // 修改拖拽进入时的鼠标样式\r\n        node.ondragover = (e) => {\r\n            e.preventDefault();\r\n            e.dataTransfer.dropEffect = 'none';\r\n        };\r\n        return node;\r\n    }\r\n\r\n    get tableId() {\r\n        return this.domNode.dataset.tableId;\r\n    }\r\n\r\n    insertBefore(blot, ref) {\r\n        if (blot.statics.blotName == this.statics.blotName) {\r\n            // 合并\r\n            super.insertBefore(blot.children.head, ref);\r\n        } else if (this.statics.allowedChildren.find((child) => child.blotName === blot.statics.blotName)) {\r\n            // 允许子 blot\r\n            super.insertBefore(blot, ref);\r\n        } else {\r\n            // 非允许子 blot, ref 为 null 是插入头, 否则插入尾\r\n            if (ref) {\r\n                this.prev ? this.prev.insertBefore(blot, null) : this.parent.insertBefore(blot, this);\r\n            } else {\r\n                this.next ? this.next.insertBefore(blot, ref) : this.parent.appendChild(blot);\r\n            }\r\n        }\r\n    }\r\n\r\n    optimize() {\r\n        super.optimize();\r\n        let next = this.next;\r\n        if (\r\n            next != null &&\r\n            next.prev === this &&\r\n            next.statics.blotName === this.statics.blotName &&\r\n            next.domNode.tagName === this.domNode.tagName &&\r\n            next.domNode.dataset.tableId === this.domNode.dataset.tableId\r\n        ) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n\r\n    deleteAt(index, length) {\r\n        super.deleteAt(index, length);\r\n        // 删除 table 时隐藏当前 table 的 tooltip\r\n        document.querySelector(`.ql-table-tooltip[data-table-id=\"${this.tableId}\"]`)?.classList?.add('ql-hidden');\r\n    }\r\n}\r\nTableWrapperFormat.blotName = blotName.tableWrapper;\r\nTableWrapperFormat.tagName = 'p';\r\nTableWrapperFormat.className = 'ql-table-wrapper';\r\nTableWrapperFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport default TableWrapperFormat;\r\n","import { CREATE_TABLE } from '../assets/const';\r\n\r\nexport const randomId = () => Math.random().toString(36).slice(2);\r\n\r\nlet zindex = 8000;\r\nexport const dialog = ({ child, target = document.body, beforeClose = () => {} } = {}) => {\r\n    const appendTo = target;\r\n    const dialog = document.createElement('div');\r\n    dialog.classList.add('dialog');\r\n    dialog.style.zIndex = zindex;\r\n    const overlay = document.createElement('div');\r\n    overlay.classList.add('dialog_overlay');\r\n    dialog.appendChild(overlay);\r\n    if (child) {\r\n        const content = document.createElement('div');\r\n        content.classList.add('dialog_content');\r\n        content.appendChild(child);\r\n        overlay.appendChild(content);\r\n        content.onclick = (e) => {\r\n            e.stopPropagation();\r\n        };\r\n    }\r\n\r\n    const originOverflow = getComputedStyle(appendTo).overflow;\r\n    appendTo.style.overflow = 'hidden';\r\n\r\n    appendTo.appendChild(dialog);\r\n    const close = () => {\r\n        beforeClose();\r\n        dialog.remove();\r\n        appendTo.style.overflow = originOverflow;\r\n    };\r\n    dialog.onclick = close;\r\n    zindex += 1;\r\n\r\n    return { dialog, close };\r\n};\r\n\r\n/**\r\n * 创建一个带 label 的输入框\r\n *\r\n * @param {string} label - The label for the input item.\r\n * @param {object} options - The options for the input item.\r\n * @param {string} options.type - The type of the input.\r\n * @param {string} options.value - The initial value of the input.\r\n * @param {number} options.max - The maximum value allowed for the input.\r\n * @param {number} options.min - The minimum value allowed for the input.\r\n * @return {object} An object containing the input item, the input element, and an error tip function.\r\n */\r\nexport const createInputItem = (label, options) => {\r\n    options.type || (options.type = 'text');\r\n    options.value || (options.value = '');\r\n\r\n    const inputItem = document.createElement('div');\r\n    inputItem.classList.add('input_item');\r\n\r\n    if (label) {\r\n        const inputLabel = document.createElement('span');\r\n        inputLabel.classList.add('input_label');\r\n        inputLabel.innerText = label;\r\n        inputItem.appendChild(inputLabel);\r\n    }\r\n\r\n    const inputInput = document.createElement('div');\r\n    inputInput.classList.add('input_input');\r\n    const input = document.createElement('input');\r\n    for (const key in options) {\r\n        input.setAttribute(key, options[key]);\r\n    }\r\n    if (options.max || options.min) {\r\n        input.addEventListener('blur', () => {\r\n            if (options.max && options.max <= input.value) {\r\n                input.value = options.max;\r\n            }\r\n            if (options.min && options.min >= input.value) {\r\n                input.value = options.min;\r\n            }\r\n        });\r\n    }\r\n\r\n    inputInput.appendChild(input);\r\n    inputItem.appendChild(inputInput);\r\n\r\n    input.onfocus = () => {\r\n        inputInput.classList.add('focus');\r\n    };\r\n    input.onblur = () => {\r\n        inputInput.classList.remove('focus');\r\n    };\r\n\r\n    const errorTip = (msg) => {\r\n        if (inputInput.classList.contains('error')) {\r\n            inputInput.querySelector('.error_tip').innerText = msg;\r\n        } else {\r\n            const errorTip = document.createElement('span');\r\n            errorTip.classList.add('error_tip');\r\n            errorTip.innerText = msg;\r\n            inputInput.appendChild(errorTip);\r\n        }\r\n\r\n        inputInput.classList.add('error');\r\n\r\n        const removeError = () => {\r\n            inputInput.classList.remove('error');\r\n            errorTip.remove();\r\n        };\r\n        return { removeError };\r\n    };\r\n\r\n    return { item: inputItem, input, errorTip };\r\n};\r\n\r\n/**\r\n * 创建具有指定行数和列数的表格\r\n *\r\n * @param {number} row - The number of rows for the table (optional, default: 3)\r\n * @param {number} col - The number of columns for the table (optional, default: 3)\r\n * @return {Promise} A promise that resolves with an object containing the row and column values when the table creation is confirmed, or rejects if the dialog is closed without confirmation.\r\n */\r\nexport const showTableCreator = async (row = 3, col = 3) => {\r\n    const box = document.createElement('div');\r\n    box.classList.add('create_box');\r\n    const inputContent = document.createElement('div');\r\n    inputContent.classList.add('create_input_content');\r\n\r\n    const {\r\n        item: rowItem,\r\n        input: rowInput,\r\n        errorTip: rowErrorTip,\r\n    } = createInputItem('row', { type: 'number', value: row, max: 99 });\r\n    const {\r\n        item: colItem,\r\n        input: colInput,\r\n        errorTip: colErrorTip,\r\n    } = createInputItem('col', { type: 'number', value: col, max: 99 });\r\n\r\n    inputContent.appendChild(rowItem);\r\n    inputContent.appendChild(colItem);\r\n    box.appendChild(inputContent);\r\n\r\n    const control = document.createElement('div');\r\n    control.classList.add('create_control');\r\n\r\n    const confirmBtn = document.createElement('button');\r\n    confirmBtn.classList.add('create_control_btn', 'confirm');\r\n    confirmBtn.innerText = 'Confirm';\r\n\r\n    const cancelBtn = document.createElement('button');\r\n    cancelBtn.classList.add('create_control_btn', 'cancel');\r\n    cancelBtn.innerText = 'Cancel';\r\n\r\n    control.appendChild(confirmBtn);\r\n    control.appendChild(cancelBtn);\r\n    box.appendChild(control);\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const { close } = dialog({ child: box, beforeClose: reject });\r\n\r\n        confirmBtn.onclick = async () => {\r\n            const row = Number(rowInput.value);\r\n            const col = Number(colInput.value);\r\n\r\n            if (isNaN(row) || row <= 0) {\r\n                return rowErrorTip('Invalid number');\r\n            }\r\n            if (isNaN(col) || col <= 0) {\r\n                return colErrorTip('Invalid number');\r\n            }\r\n            resolve({ row, col });\r\n            close();\r\n        };\r\n        cancelBtn.onclick = () => {\r\n            close();\r\n        };\r\n    });\r\n};\r\n\r\n/**\r\n * 显示表格选择器\r\n */\r\nexport const showTableSelector = () => {\r\n    const selectDom = document.createElement('div');\r\n    selectDom.classList.add('create_select');\r\n\r\n    const selectBlock = document.createElement('div');\r\n    selectBlock.classList.add('create_select_block');\r\n\r\n    for (let r = 0; r < 8; r++) {\r\n        for (let c = 0; c < 8; c++) {\r\n            const selectItem = document.createElement('div');\r\n            selectItem.classList.add('create_select_block_item');\r\n            selectItem.dataset.row = r + 1;\r\n            selectItem.dataset.col = c + 1;\r\n            selectBlock.appendChild(selectItem);\r\n        }\r\n    }\r\n\r\n    const selectCustom = document.createElement('div');\r\n    selectCustom.classList.add('create_select_custom');\r\n    selectCustom.innerText = '自定义行列数';\r\n\r\n    selectDom.appendChild(selectBlock);\r\n    selectDom.appendChild(selectCustom);\r\n\r\n    const sendTableData = ({ row, col }) => {\r\n        selectDom.dispatchEvent(new CustomEvent(CREATE_TABLE, { detail: { row: Number(row), col: Number(col) } }));\r\n    };\r\n    const updateSelectBlockItems = () => {\r\n        const { row, col } = selectDom.dataset;\r\n        [].forEach.call(selectBlock.querySelectorAll('.active'), (item) => {\r\n            item.classList.remove('active');\r\n        });\r\n        if (!row || !col) return;\r\n        const childs = Array.from(selectBlock.children);\r\n        for (let i = 0; i < childs.length; i++) {\r\n            if (childs[i].dataset.row > row && childs[i].dataset.col > col) {\r\n                return;\r\n            }\r\n            if (childs[i].dataset.row <= row && childs[i].dataset.col <= col) {\r\n                childs[i].classList.add('active');\r\n            } else {\r\n                childs[i].classList.remove('active');\r\n            }\r\n        }\r\n    };\r\n    selectBlock.addEventListener('mousemove', (e) => {\r\n        const { row, col } = e.target.dataset;\r\n        if (!row || !col) return;\r\n        selectDom.dataset.row = row;\r\n        selectDom.dataset.col = col;\r\n        updateSelectBlockItems();\r\n    });\r\n    selectBlock.addEventListener('mouseleave', (e) => {\r\n        selectDom.removeAttribute('data-row');\r\n        selectDom.removeAttribute('data-col');\r\n        updateSelectBlockItems();\r\n    });\r\n    selectBlock.addEventListener('click', () => {\r\n        const { row, col } = selectDom.dataset;\r\n        if (!row || !col) return;\r\n        sendTableData({ row, col });\r\n    });\r\n\r\n    selectCustom.addEventListener('click', () => {\r\n        showTableCreator().then(({ row, col }) => {\r\n            sendTableData({ row, col });\r\n        });\r\n    });\r\n\r\n    return selectDom;\r\n};\r\n\r\nexport function css(domNode, rules) {\r\n    if (typeof rules === 'object') {\r\n        for (let prop in rules) {\r\n            domNode.style[prop] = rules[prop];\r\n        }\r\n    }\r\n}\r\n\r\nexport function getRelativeRect(targetRect, container) {\r\n    let containerRect = container.getBoundingClientRect();\r\n\r\n    return {\r\n        x: targetRect.x - containerRect.x - container.scrollLeft,\r\n        y: targetRect.y - containerRect.y - container.scrollTop,\r\n        x1: targetRect.x - containerRect.x - container.scrollLeft + targetRect.width,\r\n        y1: targetRect.y - containerRect.y - container.scrollTop + targetRect.height,\r\n        width: targetRect.width,\r\n        height: targetRect.height,\r\n    };\r\n}\r\n\r\nexport function computeBoundaryFromRects(startRect, endRect) {\r\n    let x = Math.min(startRect.x, endRect.x, startRect.x + startRect.width - 1, endRect.x + endRect.width - 1);\r\n    let x1 = Math.max(startRect.x, endRect.x, startRect.x + startRect.width - 1, endRect.x + endRect.width - 1);\r\n    let y = Math.min(startRect.y, endRect.y, startRect.y + startRect.height - 1, endRect.y + endRect.height - 1);\r\n    let y1 = Math.max(startRect.y, endRect.y, startRect.y + startRect.height - 1, endRect.y + endRect.height - 1);\r\n\r\n    let width = x1 - x;\r\n    let height = y1 - y;\r\n\r\n    return { x, x1, y, y1, width, height };\r\n}\r\n\r\nexport function isString(val) {\r\n    return typeof val === 'string';\r\n}\r\nexport function isFunction(val) {\r\n    return typeof val === 'function';\r\n}\r\nexport function isUndefined(val) {\r\n    return val === undefined;\r\n}\r\n","import Quill from 'quill';\r\nimport TableWrapperFormat from '../format/TableWrapperFormat';\r\nimport { css, getRelativeRect } from '../utils';\r\nimport { blotName, toolName, CELL_MIN_WIDTH, CELL_MIN_PRE } from '../assets/const';\r\nlet TIP_HEIGHT = 12;\r\n/*\r\n\toptions = {\r\n\t\ttipHeight: 12,\t// tooltip height\r\n\t\tdisableToolNames: [],\t// 表格内禁用项， toolbar 的 name\r\n\t}\r\n*/\r\nexport default class TableTooltip {\r\n    constructor(quill, options = {}) {\r\n        this.quill = quill;\r\n        this.options = options;\r\n        this.optionsMerge();\r\n\r\n        this.tableDisableToolHandlers = {};\r\n        this.tableWrapper = null;\r\n        this.table = null;\r\n        this.curTableId = '';\r\n        this.focusTableChange = false;\r\n        this.tableCols = [];\r\n        this.scrollHandler = [];\r\n\r\n        this.root = this.quill.addContainer('ql-table-tooltip');\r\n        this.root.style.height = TIP_HEIGHT + 'px';\r\n\r\n        const resizeObserver = new ResizeObserver((entries) => {\r\n            this.hide();\r\n            this.focusTableChange = true;\r\n            this.curTableId = '';\r\n        });\r\n        resizeObserver.observe(this.quill.root);\r\n\r\n        this.isMobile = 'ontouchstart' in window;\r\n        this.handledEvents = this.isMobile\r\n            ? { down: 'touchstart', move: 'touchmove', up: 'touchend' }\r\n            : { down: 'mousedown', move: 'mousemove', up: 'mouseup' };\r\n\r\n        this.hide();\r\n        this.listen();\r\n    }\r\n\r\n    optionsMerge() {\r\n        this.options?.tipHeight && (TIP_HEIGHT = this.options.tipHeight);\r\n        TableTooltip.disableToolNames = Array.from(\r\n            new Set([...TableTooltip.disableToolNames, ...(this.options?.disableToolNames || [])])\r\n        );\r\n    }\r\n\r\n    listen() {\r\n        this.quill.on(Quill.events.EDITOR_CHANGE, (eventName) => {\r\n            if (eventName === Quill.events.TEXT_CHANGE) {\r\n                return this.hide();\r\n            }\r\n            const range = this.quill.getSelection();\r\n            if (range == null) return;\r\n            const [tableWrapper] = this.quill.scroll.descendant(TableWrapperFormat, range.index);\r\n            if (tableWrapper !== null) {\r\n                // 此时在 table 内, 禁用部分功能\r\n                this.disableFromTable();\r\n\r\n                this.tableWrapper = tableWrapper;\r\n                this.table = tableWrapper.children.head;\r\n                // 找到 tbody\r\n                let tbody = tableWrapper.children.tail;\r\n                while (tbody && tbody.statics.blotName !== blotName.tableBody) {\r\n                    tbody = tbody.children?.tail;\r\n                }\r\n\r\n                const tableCols = tableWrapper.children.head?.children?.head;\r\n                if (tableCols.statics.blotName === blotName.tableColGroup && tableCols.children.length) {\r\n                    this.tableCols = tableCols.children.map((col) => col);\r\n                } else {\r\n                    this.tableCols = [];\r\n                }\r\n\r\n                let curTableId = tableWrapper.children.head.tableId;\r\n                if (this.curTableId !== curTableId) {\r\n                    this.clearScrollEvent();\r\n                    this.focusTableChange = true;\r\n                    // 表格滚动同步事件\r\n                    this.addScrollEvent(\r\n                        this.tableWrapper.domNode,\r\n                        this.scrollSync.bind(this, this.tableWrapper.domNode)\r\n                    );\r\n                }\r\n                this.curTableId = curTableId;\r\n\r\n                this.show();\r\n                this.position();\r\n                return;\r\n            }\r\n            this.hide();\r\n        });\r\n    }\r\n\r\n    disableFromTable() {\r\n        this.toggleDisableToolbarTools('add');\r\n\r\n        const toolbar = this.quill.getModule('toolbar');\r\n        // 防止重复触发覆盖保存事件\r\n        if (toolbar.disableByTable) return;\r\n        toolbar.disableByTable = true;\r\n\r\n        // 去除 toolbar 对应 module 的 handler 事件, 保存在 tableDisableToolHandlers\r\n        for (const toolName of TableTooltip.disableToolNames) {\r\n            this.tableDisableToolHandlers[toolName] = toolbar.handlers[toolName];\r\n            // 不要设置为 null\r\n            toolbar.handlers[toolName] = () => {};\r\n        }\r\n    }\r\n\r\n    enableFromTable() {\r\n        this.toggleDisableToolbarTools('remove');\r\n\r\n        const toolbar = this.quill.getModule('toolbar');\r\n        // 根据 tableDisableToolHandlers 恢复 handler\r\n        for (const toolName in this.tableDisableToolHandlers) {\r\n            toolbar.handlers[toolName] = this.tableDisableToolHandlers[toolName];\r\n        }\r\n        this.tableDisableToolHandlers = {};\r\n        toolbar.disableByTable = false;\r\n    }\r\n\r\n    /**\r\n     * Toggles the disable state of toolbar tools.\r\n     *\r\n     * @param {'add' | 'remove'} type - The type of toggle action to perform.\r\n     */\r\n    toggleDisableToolbarTools(type) {\r\n        const toolbar = this.quill.getModule('toolbar');\r\n        toolbar.controls.map(([name, btn]) => {\r\n            if (TableTooltip.disableToolNames.includes(name)) {\r\n                if (btn.tagName.toLowerCase() === 'select') {\r\n                    toolbar.container\r\n                        .querySelector(`.ql-picker.${btn.className}`)\r\n                        ?.classList[type]('ql-disabled-table');\r\n                } else {\r\n                    btn.classList[type]('ql-disabled-table');\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    scrollSync(dom, e) {\r\n        this.root.scrollLeft = dom.scrollLeft;\r\n    }\r\n\r\n    addScrollEvent(dom, handle) {\r\n        dom.addEventListener('scroll', handle);\r\n        this.scrollHandler.push([dom, handle]);\r\n    }\r\n\r\n    clearScrollEvent() {\r\n        for (let i = 0; i < this.scrollHandler.length; i++) {\r\n            const [dom, handle] = this.scrollHandler[i];\r\n            dom.removeEventListener('scroll', handle);\r\n        }\r\n        this.scrollHandler = [];\r\n    }\r\n\r\n    position = () => {\r\n        const rect = getRelativeRect(this.table.domNode.getBoundingClientRect(), this.quill.root);\r\n        const tableTop = this.table.domNode.offsetTop;\r\n        const rootScrollTop = this.quill.root.scrollTop;\r\n        css(this.root, {\r\n            top: `${tableTop - rootScrollTop - TIP_HEIGHT}px`,\r\n            left: rect.x + 'px', // table 距离 editor 的 padding\r\n        });\r\n    };\r\n\r\n    show() {\r\n        // 若没有 colgroup col 元素，不显示\r\n        if (!this.tableCols.length) {\r\n            return;\r\n        }\r\n\r\n        if (this.focusTableChange) {\r\n            const tableWrapperRect = this.tableWrapper.domNode.getBoundingClientRect();\r\n            // 加 tableId 用于 table 删除时隐藏 tooltip\r\n            this.root.dataset.tableId = this.tableWrapper.tableId;\r\n            this.root.innerHTML = [...this.tableCols]\r\n                .map((col) => {\r\n                    let width = col.width + (this.table.full ? '%' : 'px');\r\n                    if (!col.width) {\r\n                        width = col.domNode.getBoundingClientRect().width + 'px';\r\n                    }\r\n                    return `<div class=\"ql-table-col-header\" style=\"width: ${width}\">\r\n            \t\t\t<div class=\"ql-table-col-separator\" style=\"height: ${tableWrapperRect.height + TIP_HEIGHT - 3}px\"></div>\r\n            \t\t</div>`; // -3 为 border-width: 2, top: 1\r\n                })\r\n                .join('');\r\n\r\n            this.focusTableChange = false;\r\n            Object.assign(this.root.style, {\r\n                width: tableWrapperRect.width + 'px',\r\n            });\r\n\r\n            this.bindDrag();\r\n        }\r\n        setTimeout(() => {\r\n            this.scrollSync(this.tableWrapper.domNode);\r\n        }, 0);\r\n        this.root.classList.remove('ql-hidden');\r\n\r\n        const srcollHide = () => {\r\n            this.hide();\r\n            this.quill.root.removeEventListener('scroll', srcollHide);\r\n        };\r\n        this.quill.root.addEventListener('scroll', srcollHide);\r\n    }\r\n\r\n    hide() {\r\n        this.root.classList.add('ql-hidden');\r\n        this.enableFromTable();\r\n    }\r\n\r\n    bindDrag() {\r\n        let tipColBreak = null;\r\n        let curColIndex = -1;\r\n        let tableColHeads = Array.from(this.root.getElementsByClassName('ql-table-col-header'));\r\n        let tableColHeadSeparators = Array.from(this.root.getElementsByClassName('ql-table-col-separator'));\r\n        const appendTo = document.body;\r\n        // 设置每个 drag 下标对应 col 下标，最右会多一个 drag, 与 better-table 的类似\r\n        // 根据当前的 col left 配合 clientX 计算, 使保证最小宽度\r\n        const handleMousemove = (e) => {\r\n            // getBoundingClientRect 的 top/bottom/left/right, 这是根据视口距离\r\n            const rect = tableColHeads[curColIndex].getBoundingClientRect();\r\n            const tableWidth = this.table.domNode.getBoundingClientRect().width;\r\n            let resX = this.isMobile ? e.changedTouches[0].clientX : e.clientX;\r\n\r\n            if (this.table.full) {\r\n                // 拖拽的最大宽度是当前 col 宽度 + next col 宽度, 最后一个 col 最大宽度是当前宽度\r\n                const minWidth = (CELL_MIN_PRE / 100) * tableWidth;\r\n                const maxRange =\r\n                    resX > rect.right\r\n                        ? tableColHeads[curColIndex + 1]\r\n                            ? tableColHeads[curColIndex + 1].getBoundingClientRect().right - minWidth\r\n                            : rect.right - minWidth\r\n                        : Infinity;\r\n                const minRange = rect.x + minWidth;\r\n\r\n                resX = Math.min(Math.max(resX, minRange), maxRange);\r\n            } else {\r\n                if (resX - rect.x < CELL_MIN_WIDTH) {\r\n                    resX = rect.x + CELL_MIN_WIDTH;\r\n                }\r\n            }\r\n            resX = Math.floor(resX);\r\n            tipColBreak.style.left = resX + 'px';\r\n            tipColBreak.dataset.w = resX - rect.x;\r\n        };\r\n        const handleMouseup = (e) => {\r\n            let w = parseInt(tipColBreak.dataset.w);\r\n            // table full 时处理不同\r\n            if (this.table.full) {\r\n                // 在调整一个后把所有 col 都变成百分比\r\n                let pre = (w / this.table.domNode.getBoundingClientRect().width) * 100;\r\n                let oldWidthPre = this.tableCols[curColIndex].width;\r\n                if (pre < oldWidthPre) {\r\n                    // 缩小时若不是最后一个, 则把减少的量加在后面一个\r\n                    // 若是最后一个则把减少的量加在前面一个\r\n                    pre = Math.max(CELL_MIN_PRE, pre);\r\n                    const last = oldWidthPre - pre;\r\n                    if (this.tableCols[curColIndex + 1]) {\r\n                        this.tableCols[curColIndex + 1].width = `${this.tableCols[curColIndex + 1].width + last}%`;\r\n                    } else if (this.tableCols[curColIndex - 1]) {\r\n                        this.tableCols[curColIndex - 1].width = `${this.tableCols[curColIndex - 1].width + last}%`;\r\n                    } else {\r\n                        pre = 100;\r\n                    }\r\n                    this.tableCols[curColIndex].width = `${pre}%`;\r\n                } else {\r\n                    // 增大时若不是最后一个, 则与后面一个的宽度合并, 最大不能超过合并的宽度, 增加的量来自后面一个的减少量\r\n                    // 若是最后一个则不处理\r\n                    if (this.tableCols[curColIndex + 1]) {\r\n                        const totalWidthNextPre = oldWidthPre + this.tableCols[curColIndex + 1].width;\r\n                        pre = Math.min(totalWidthNextPre - CELL_MIN_PRE, pre);\r\n                        this.tableCols[curColIndex].width = `${pre}%`;\r\n                        this.tableCols[curColIndex + 1].width = `${totalWidthNextPre - pre}%`;\r\n                    }\r\n                }\r\n            } else {\r\n                this.table.domNode.style.width =\r\n                    parseFloat(this.table.domNode.style.width) -\r\n                    parseFloat(tableColHeads[curColIndex].style.width) +\r\n                    w +\r\n                    'px';\r\n                tableColHeads[curColIndex].style.width = `${w}px`;\r\n                this.tableCols[curColIndex].width = `${w}px`;\r\n            }\r\n            this.table.formatTableWidth();\r\n\r\n            appendTo.removeChild(tipColBreak);\r\n            tipColBreak = null;\r\n            curColIndex = -1;\r\n            document.removeEventListener(this.handledEvents.up, handleMouseup);\r\n            document.removeEventListener(this.handledEvents.move, handleMousemove);\r\n\r\n            const tableModule = this.quill.getModule(toolName.table);\r\n            tableModule.hideTableTools();\r\n        };\r\n        const handleMousedown = (i, e) => {\r\n            document.addEventListener(this.handledEvents.up, handleMouseup);\r\n            document.addEventListener(this.handledEvents.move, handleMousemove);\r\n            curColIndex = i;\r\n\r\n            const divDom = document.createElement('div');\r\n            divDom.classList.add('ql-table-drag-line');\r\n\r\n            const tableRect = this.tableWrapper.domNode.getBoundingClientRect();\r\n            css(divDom, {\r\n                top: `${tableRect.y - TIP_HEIGHT}px`,\r\n                left: `${this.isMobile ? e.changedTouches[0].clientX : e.clientX}px`,\r\n                height: `${tableRect.height + TIP_HEIGHT}px`,\r\n            });\r\n            appendTo.appendChild(divDom);\r\n\r\n            if (tipColBreak) appendTo.removeChild(tipColBreak);\r\n            tipColBreak = divDom;\r\n        };\r\n        tableColHeadSeparators.map((el, i) => {\r\n            el.addEventListener(this.handledEvents.down, handleMousedown.bind(this, i));\r\n            // 防止拖拽使触发 drag 导致可以使此元素被插入表格\r\n            el.addEventListener('dragstart', (e) => {\r\n                e.preventDefault();\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\n// 在 table 内时禁用的 tool 的 name\r\nTableTooltip.disableToolNames = [toolName.table];\r\n","// col 最小百分比宽度\r\nexport const CELL_MIN_PRE = 3;\r\n// col 最小 px 宽度\r\nexport const CELL_MIN_WIDTH = 26;\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass ContainBlot extends Container {\r\n    static create() {\r\n        const node = super.create();\r\n        return node;\r\n    }\r\n\r\n    insertBefore(blot, ref) {\r\n        if (blot.statics.blotName == this.statics.blotName) {\r\n            super.insertBefore(blot.children.head, ref);\r\n        } else {\r\n            super.insertBefore(blot, ref);\r\n        }\r\n    }\r\n\r\n    format(name, value) {\r\n        this.children.tail.format(name, value);\r\n    }\r\n\r\n    replace(target) {\r\n        if (target.statics.blotName !== this.statics.blotName) {\r\n            const item = Parchment.create(this.statics.defaultChild);\r\n            target.moveChildren(item);\r\n            this.appendChild(item);\r\n        }\r\n        if (target.parent == null) return;\r\n        super.replace(target);\r\n    }\r\n}\r\n\r\nContainBlot.blotName = blotName.contain;\r\nContainBlot.tagName = 'contain';\r\nContainBlot.scope = Parchment.Scope.BLOCK_BLOT;\r\nContainBlot.defaultChild = 'block';\r\n\r\nexport default ContainBlot;\r\n","import Quill from 'quill';\r\nimport ContainBlot from '../blot/contain';\r\nimport { blotName } from '../assets/const';\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableCellInnerFormat extends ContainBlot {\r\n    static create(value) {\r\n        const { tableId, rowId, colId, rowspan, colspan, style } = value;\r\n        const node = super.create();\r\n        node.dataset.tableId = tableId;\r\n        node.dataset.rowId = rowId;\r\n        node.dataset.colId = colId;\r\n        node.dataset.rowspan = rowspan || 1;\r\n        node.dataset.colspan = colspan || 1;\r\n        node._style = style;\r\n        return node;\r\n    }\r\n\r\n    // 仅 Block 存在 cache, 存在 cache 时不会获取最新 delta, cache 还会保存父级 format(bubbleFormats 函数), 需要清除以获取最新 delta\r\n    clearDeltaCache() {\r\n        this.children.forEach((child) => {\r\n            child.cache = {};\r\n        });\r\n    }\r\n\r\n    get rowId() {\r\n        return this.domNode.dataset.rowId;\r\n    }\r\n    get colId() {\r\n        return this.domNode.dataset.colId;\r\n    }\r\n    get rowspan() {\r\n        return Number(this.domNode.dataset.rowspan);\r\n    }\r\n    set rowspan(value) {\r\n        this.parent && (this.parent.rowspan = value);\r\n        this.domNode.dataset.rowspan = value;\r\n        this.clearDeltaCache();\r\n    }\r\n    get colspan() {\r\n        return Number(this.domNode.dataset.colspan);\r\n    }\r\n    set colspan(value) {\r\n        this.parent && (this.parent.colspan = value);\r\n        this.domNode.dataset.colspan = value;\r\n        this.clearDeltaCache();\r\n    }\r\n    set style(value) {\r\n        this.domNode._style = value;\r\n        this.parent.style = value;\r\n        this.clearDeltaCache();\r\n    }\r\n\r\n    replace(target) {\r\n        if (target.statics.blotName !== this.statics.blotName) {\r\n            const cloneTarget = target.clone();\r\n            target.moveChildren(cloneTarget);\r\n            this.appendChild(cloneTarget);\r\n            target.parent.insertBefore(this, target.next);\r\n            target.remove();\r\n        } else {\r\n            super.replace(target);\r\n        }\r\n    }\r\n\r\n    format(name, value) {\r\n        super.format(name, value);\r\n        this.clearDeltaCache();\r\n    }\r\n\r\n    formats() {\r\n        const { tableId, rowId, colId, rowspan, colspan } = this.domNode.dataset;\r\n        return {\r\n            [this.statics.blotName]: {\r\n                tableId,\r\n                rowId,\r\n                colId,\r\n                rowspan,\r\n                colspan,\r\n                style: this.domNode._style,\r\n            },\r\n        };\r\n    }\r\n\r\n    optimize() {\r\n        super.optimize();\r\n\r\n        const parent = this.parent;\r\n        // 父级非表格，则将当前 blot 放入表格中\r\n        const { tableId, colId, rowId, rowspan, colspan } = this.domNode.dataset;\r\n        if (parent != null && parent.statics.blotName != blotName.tableCell) {\r\n            const mark = Parchment.create('block');\r\n\r\n            this.parent.insertBefore(mark, this.next);\r\n            const tableWrapper = Parchment.create(blotName.tableWrapper, tableId);\r\n            const table = Parchment.create(blotName.table, tableId);\r\n            const tableBody = Parchment.create(blotName.tableBody);\r\n            const tr = Parchment.create(blotName.tableRow, rowId);\r\n            const td = Parchment.create(blotName.tableCell, {\r\n                tableId,\r\n                rowId,\r\n                colId,\r\n                rowspan,\r\n                colspan,\r\n                style: this.domNode._style,\r\n            });\r\n\r\n            td.appendChild(this);\r\n            tr.appendChild(td);\r\n            tableBody.appendChild(tr);\r\n            table.appendChild(tableBody);\r\n            tableWrapper.appendChild(table);\r\n\r\n            tableWrapper.replace(mark);\r\n        }\r\n\r\n        const next = this.next;\r\n        // cell 下有多个 cellInner 全部合并\r\n        if (next != null && next.prev === this && next.statics.blotName === this.statics.blotName) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n}\r\n\r\nTableCellInnerFormat.blotName = blotName.tableCellInner;\r\nTableCellInnerFormat.tagName = 'p';\r\nTableCellInnerFormat.className = 'ql-table-cell-inner';\r\n\r\nexport default TableCellInnerFormat;\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nimport TableCellInnerFormat from './TableCellInnerFormat';\r\nconst Parchment = Quill.import('parchment');\r\nconst Container = Quill.import('blots/container');\r\n\r\nclass TableCellFormat extends Container {\r\n    static create(value) {\r\n        const { rowId, colId, rowspan, colspan, style } = value;\r\n        const node = super.create();\r\n        node.dataset.rowId = rowId;\r\n        node.dataset.colId = colId;\r\n        node.setAttribute('rowspan', rowspan || 1);\r\n        node.setAttribute('colspan', colspan || 1);\r\n        node.setAttribute('style', style || '');\r\n        return node;\r\n    }\r\n\r\n    get rowId() {\r\n        return this.domNode.dataset.rowId;\r\n    }\r\n    get colId() {\r\n        return this.domNode.dataset.colId;\r\n    }\r\n    get rowspan() {\r\n        return Number(this.domNode.getAttribute('rowspan'));\r\n    }\r\n    set rowspan(value) {\r\n        this.domNode.setAttribute('rowspan', value);\r\n    }\r\n    get colspan() {\r\n        return Number(this.domNode.getAttribute('colspan'));\r\n    }\r\n    set colspan(value) {\r\n        this.domNode.setAttribute('colspan', value);\r\n    }\r\n    set style(value) {\r\n        this.domNode.setAttribute('style', value);\r\n    }\r\n\r\n    getCellInner() {\r\n        return this.descendants(TableCellInnerFormat)[0];\r\n    }\r\n\r\n    optimize() {\r\n        super.optimize();\r\n        const { colId, rowId } = this.domNode.dataset;\r\n        const next = this.next;\r\n        if (\r\n            next != null &&\r\n            next.prev === this &&\r\n            next.statics.blotName === this.statics.blotName &&\r\n            next.domNode.dataset.rowId === rowId &&\r\n            next.domNode.dataset.colId === colId\r\n        ) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n\r\n    deleteAt(index, length) {\r\n        if (index === 0 && length === this.length()) {\r\n            const cell = this.next || this.prev;\r\n            const cellInner = cell && cell.getCellInner();\r\n            if (cellInner) {\r\n                cellInner.colspan += this.colspan;\r\n            }\r\n            return this.remove();\r\n        }\r\n        this.children.forEachAt(index, length, function (child, offset, length) {\r\n            child.deleteAt(offset, length);\r\n        });\r\n    }\r\n}\r\n\r\nTableCellFormat.blotName = blotName.tableCell;\r\nTableCellFormat.tagName = 'td';\r\nTableCellFormat.className = 'ql-table-cell';\r\nTableCellFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport default TableCellFormat;\r\n","// 以 ql-better-table 的 table-selection.js 为修改基础\r\n\r\nimport Quill from 'quill';\r\nimport TableCellFormat from '../format/TableCellFormat';\r\nimport { css, getRelativeRect, computeBoundaryFromRects } from '../utils';\r\n\r\nlet PRIMARY_COLOR = '#0589f3';\r\nconst ERROR_LIMIT = 2;\r\n\r\n/*\r\n\toptions = {\r\n\t\tprimaryColor: Hex color code\r\n\t}\r\n*/\r\nexport default class TableSelection {\r\n    constructor(table, quill, options = {}) {\r\n        if (!table) return null;\r\n        this.table = table;\r\n        this.quill = quill;\r\n        this.options = options;\r\n        this.optionsMerge();\r\n\r\n        this.boundary = {};\r\n        // 选中的 cell\r\n        this.selectedTds = [];\r\n        this.dragging = false;\r\n        this.selectingHandler = this.mouseDownHandler.bind(this);\r\n        this.cellSelect = null; // selection 显示边框\r\n        this.scrollHandler = [];\r\n        this.helpLinesInitial();\r\n\r\n        const resizeObserver = new ResizeObserver((entries) => {\r\n            this.clearSelection();\r\n        });\r\n        resizeObserver.observe(this.quill.root);\r\n\r\n        this.quill.root.addEventListener('mousedown', this.selectingHandler, false);\r\n        this.closeHandler = this.clearSelection.bind(this);\r\n        this.quill.on(Quill.events.TEXT_CHANGE, this.closeHandler);\r\n    }\r\n\r\n    optionsMerge() {\r\n        this.options?.primaryColor && (PRIMARY_COLOR = this.options.primaryColor);\r\n    }\r\n\r\n    addScrollEvent(dom, handle) {\r\n        dom.addEventListener('scroll', handle);\r\n        this.scrollHandler.push([dom, handle]);\r\n    }\r\n\r\n    clearScrollEvent() {\r\n        for (let i = 0; i < this.scrollHandler.length; i++) {\r\n            let [dom, handle] = this.scrollHandler[i];\r\n            dom.removeEventListener('scroll', handle);\r\n        }\r\n        this.scrollHandler = [];\r\n    }\r\n\r\n    // 初始化边框 dom\r\n    helpLinesInitial() {\r\n        this.cellSelect = this.quill.addContainer('ql-table-selection_line');\r\n        css(this.cellSelect, {\r\n            'border-color': PRIMARY_COLOR,\r\n        });\r\n    }\r\n\r\n    mouseDownHandler(e) {\r\n        if (e.button !== 0 || !e.target.closest('.ql-table')) return;\r\n        const startTableId = e.target.closest('.ql-table').dataset.tableId;\r\n\r\n        const mouseMoveHandler = (e) => {\r\n            // 根据 tableId 判断是否跨表格，跨表格不计算\r\n            if (\r\n                e.button !== 0 ||\r\n                !e.target.closest('.ql-table') ||\r\n                e.target.closest('.ql-table').dataset.tableId !== startTableId\r\n            )\r\n                return;\r\n\r\n            const endTd = e.target.closest('td[data-row-id]');\r\n            const endTdRect = getRelativeRect(endTd.getBoundingClientRect(), this.quill.root.parentNode);\r\n            this.boundary = computeBoundaryFromRects(startTdRect, endTdRect);\r\n            this.correctBoundary();\r\n            this.selectedTds = this.computeSelectedTds();\r\n            this.repositionHelpLines();\r\n\r\n            if (startTd !== endTd) {\r\n                this.quill.blur();\r\n            }\r\n        };\r\n\r\n        const mouseUpHandler = (e) => {\r\n            document.body.removeEventListener('mousemove', mouseMoveHandler, false);\r\n            document.body.removeEventListener('mouseup', mouseUpHandler, false);\r\n            this.dragging = false;\r\n        };\r\n\r\n        document.body.addEventListener('mousemove', mouseMoveHandler, false);\r\n        document.body.addEventListener('mouseup', mouseUpHandler, false);\r\n\r\n        const startTd = e.target.closest('td[data-row-id]');\r\n        const startTdRect = getRelativeRect(startTd.getBoundingClientRect(), this.quill.root.parentNode);\r\n        this.dragging = true;\r\n        this.boundary = computeBoundaryFromRects(startTdRect, startTdRect);\r\n        this.correctBoundary();\r\n        this.selectedTds = this.computeSelectedTds();\r\n        this.repositionHelpLines();\r\n\r\n        this.addScrollEvent(this.table.parentNode, () => {\r\n            // 处理 boundary, 使滚动时 left 等跟随滚动\r\n            this.repositionHelpLines();\r\n        });\r\n\r\n        const srcollHide = () => {\r\n            this.clearSelection();\r\n            this.quill.root.removeEventListener('scroll', srcollHide);\r\n        };\r\n        this.quill.root.addEventListener('scroll', srcollHide);\r\n    }\r\n\r\n    computeSelectedTds() {\r\n        const tableContainer = Quill.find(this.table);\r\n        // 选中范围计算任然使用 tableCell, tableCellInner 可滚动, width 会影响\r\n        const tableCells = tableContainer.descendants(TableCellFormat);\r\n\r\n        return tableCells.reduce((selectedCells, tableCell) => {\r\n            let { x, y, width, height } = getRelativeRect(\r\n                tableCell.domNode.getBoundingClientRect(),\r\n                this.quill.root.parentNode\r\n            );\r\n            let isCellIncluded =\r\n                x + ERROR_LIMIT >= this.boundary.x &&\r\n                x - ERROR_LIMIT + width <= this.boundary.x1 &&\r\n                y + ERROR_LIMIT >= this.boundary.y &&\r\n                y - ERROR_LIMIT + height <= this.boundary.y1;\r\n\r\n            if (isCellIncluded) {\r\n                selectedCells.push(tableCell.getCellInner());\r\n            }\r\n\r\n            return selectedCells;\r\n        }, []);\r\n    }\r\n\r\n    correctBoundary() {\r\n        // 边框计算任然使用 tableCell, 有 padding 会影响\r\n        const tableContainer = Quill.find(this.table);\r\n        const tableCells = tableContainer.descendants(TableCellFormat);\r\n\r\n        tableCells.forEach((tableCell) => {\r\n            const { x, y, width, height } = getRelativeRect(\r\n                tableCell.domNode.getBoundingClientRect(),\r\n                this.quill.root.parentNode\r\n            );\r\n\r\n            const isCellIntersected =\r\n                ((x + ERROR_LIMIT >= this.boundary.x && x + ERROR_LIMIT <= this.boundary.x1) ||\r\n                    (x - ERROR_LIMIT + width >= this.boundary.x && x - ERROR_LIMIT + width <= this.boundary.x1)) &&\r\n                ((y + ERROR_LIMIT >= this.boundary.y && y + ERROR_LIMIT <= this.boundary.y1) ||\r\n                    (y - ERROR_LIMIT + height >= this.boundary.y && y - ERROR_LIMIT + height <= this.boundary.y1));\r\n\r\n            if (isCellIntersected) {\r\n                this.boundary = computeBoundaryFromRects(this.boundary, { x, y, width, height });\r\n            }\r\n        });\r\n        this.scrollX = this.table.parentNode.scrollLeft;\r\n    }\r\n    // 边框样式显示\r\n    repositionHelpLines() {\r\n        const tableViewScrollLeft = this.table.parentNode.scrollLeft;\r\n        const scrollTop = this.quill.root.parentNode.scrollTop;\r\n\r\n        css(this.cellSelect, {\r\n            display: 'block',\r\n            left: `${this.boundary.x + (this.scrollX - tableViewScrollLeft) - 1}px`,\r\n            top: `${scrollTop * 2 + this.boundary.y}px`,\r\n            width: `${this.boundary.width + 1}px`,\r\n            height: `${this.boundary.height + 1}px`,\r\n        });\r\n    }\r\n\r\n    clearSelection() {\r\n        this.boundary = {};\r\n        this.selectedTds = [];\r\n\r\n        this.cellSelect &&\r\n            css(this.cellSelect, {\r\n                display: 'none',\r\n            });\r\n        this.clearScrollEvent();\r\n    }\r\n\r\n    destroy() {\r\n        this.clearSelection();\r\n        this.cellSelect.remove();\r\n        this.cellSelect = null;\r\n        this.clearScrollEvent();\r\n\r\n        this.quill.root.removeEventListener('mousedown', this.selectingHandler, false);\r\n        this.quill.off(Quill.events.TEXT_CHANGE, this.closeHandler);\r\n\r\n        return null;\r\n    }\r\n}\r\n","import { css, isFunction, isString } from '../utils';\r\nimport { moduleName } from '../assets/const';\r\n\r\nconst MENU_ITEMS_DEFAULT = {\r\n    insertColumnLeft: {\r\n        text: '在左侧插入一列',\r\n        handler() {\r\n            const tableModule = this.quill.getModule(moduleName.table);\r\n            tableModule.appendCol();\r\n            tableModule.hideTableTools();\r\n        },\r\n    },\r\n    insertColumnRight: {\r\n        text: '在右侧插入一列',\r\n        handler() {\r\n            const tableModule = this.quill.getModule(moduleName.table);\r\n            tableModule.appendCol(true);\r\n            tableModule.hideTableTools();\r\n        },\r\n    },\r\n    insertRowTop: {\r\n        text: '在上方插入一行',\r\n        handler() {\r\n            const tableModule = this.quill.getModule(moduleName.table);\r\n            tableModule.appendRow();\r\n            tableModule.hideTableTools();\r\n        },\r\n    },\r\n    insertRowBottom: {\r\n        text: '在下方插入一行',\r\n        groupEnd: true,\r\n        handler() {\r\n            const tableModule = this.quill.getModule(moduleName.table);\r\n            tableModule.appendRow(true);\r\n            tableModule.hideTableTools();\r\n        },\r\n    },\r\n    removeCol: {\r\n        text: '删除所在列',\r\n        handler() {\r\n            const tableModule = this.quill.getModule(moduleName.table);\r\n            tableModule.removeCol();\r\n            tableModule.hideTableTools();\r\n        },\r\n    },\r\n    removeRow: {\r\n        text: '删除所在行',\r\n        handler() {\r\n            const tableModule = this.quill.getModule(moduleName.table);\r\n            tableModule.removeRow();\r\n            tableModule.hideTableTools();\r\n        },\r\n    },\r\n    removeTable: {\r\n        text: '删除表格',\r\n        groupEnd: true,\r\n        handler() {\r\n            const tableModule = this.quill.getModule(moduleName.table);\r\n            tableModule.removeTable();\r\n            tableModule.hideTableTools();\r\n        },\r\n    },\r\n    mergeCell: {\r\n        text: '合并单元格',\r\n        groupEnd: true,\r\n        handler() {\r\n            const tableModule = this.quill.getModule(moduleName.table);\r\n            tableModule.mergeCells();\r\n            tableModule.hideTableTools();\r\n        },\r\n    },\r\n    setBackgroundColor: {\r\n        subTitle: '设置背景颜色',\r\n        text() {\r\n            const tableModule = this.quill.getModule(moduleName.table);\r\n            const input = document.createElement('input');\r\n            input.type = 'color';\r\n            input.addEventListener('click', (e) => {\r\n                e.stopPropagation();\r\n            });\r\n            const tempCells = tableModule.tableSelection.selectedTds;\r\n            input.addEventListener('input', () => {\r\n                tableModule.setBackgroundColor(input.value, tempCells);\r\n            });\r\n            input.style.width = '100%';\r\n            return input;\r\n        },\r\n    },\r\n};\r\nconst MENU_MIN_HEIHGT = 150;\r\nconst MENU_WIDTH = 200;\r\n\r\n/*\r\n    options = {\r\n        items: {\r\n           functionName: {\r\n                text: '显示文字',\r\n                handle() {},    // 触发事件\r\n                iconSrc: string,    // icon url\r\n                groupEnd: boolean, // 是否显示分隔线\r\n                subTitle: '显示子标题',\r\n            }\r\n        }\r\n    }\r\n*/\r\nexport default class TableOperationMenu {\r\n    constructor(params, quill, options = {}) {\r\n        this.table = params.table;\r\n        this.quill = quill;\r\n        this.options = options;\r\n        const tableModule = this.quill.getModule(moduleName.table);\r\n        this.tableSelection = tableModule.tableSelection;\r\n        this.menuItems = {};\r\n        this.optionsMerge();\r\n\r\n        this.boundary = this.tableSelection.boundary;\r\n        this.selectedTds = this.tableSelection.selectedTds;\r\n\r\n        this.destroyHandler = this.destroy.bind(this);\r\n        this.menuInitial(params);\r\n        this.mount();\r\n\r\n        document.addEventListener('click', this.destroyHandler, false);\r\n    }\r\n\r\n    optionsMerge() {\r\n        if (this.options?.replaceItems) {\r\n            this.menuItems = this.options?.items ?? {};\r\n        } else {\r\n            this.menuItems = Object.assign({}, MENU_ITEMS_DEFAULT, this.options?.items ?? {});\r\n        }\r\n    }\r\n\r\n    mount() {\r\n        document.body.appendChild(this.domNode);\r\n    }\r\n\r\n    menuInitial({ table, row, cell, left, top }) {\r\n        this.domNode = document.createElement('div');\r\n        this.domNode.classList.add('ql-table-operation-menu');\r\n\r\n        const style = {\r\n            position: 'absolute',\r\n            'min-height': `${MENU_MIN_HEIHGT}px`,\r\n            width: `${MENU_WIDTH}px`,\r\n        };\r\n        const { innerWidth: width, innerHeight: height } = window;\r\n        left > width - MENU_WIDTH ? (style.right = `${width - left}px`) : (style.left = `${left}px`);\r\n        top > height - MENU_MIN_HEIHGT ? (style.bottom = `${height - top}px`) : (style.top = `${top}px`);\r\n        css(this.domNode, style);\r\n\r\n        for (const name in this.menuItems) {\r\n            if (this.menuItems[name]) {\r\n                if (this.menuItems[name].subTitle) {\r\n                    this.domNode.appendChild(subTitleCreator(this.menuItems[name].subTitle));\r\n                }\r\n\r\n                this.domNode.appendChild(\r\n                    this.menuItemCreator(Object.assign({}, MENU_ITEMS_DEFAULT[name], this.menuItems[name]))\r\n                );\r\n\r\n                if (this.menuItems[name].groupEnd) {\r\n                    this.domNode.appendChild(dividingCreator());\r\n                }\r\n            }\r\n        }\r\n\r\n        // create dividing line\r\n        function dividingCreator() {\r\n            const dividing = document.createElement('div');\r\n            dividing.classList.add('ql-table-operation-menu-dividing');\r\n            return dividing;\r\n        }\r\n\r\n        // create subtitle for menu\r\n        function subTitleCreator(title) {\r\n            const subTitle = document.createElement('div');\r\n            subTitle.classList.add('ql-table-operation-menu-subtitle');\r\n            subTitle.innerText = title;\r\n            return subTitle;\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.domNode.remove();\r\n        document.removeEventListener('click', this.destroyHandler, false);\r\n        return null;\r\n    }\r\n\r\n    menuItemCreator({ text, iconSrc, handler }) {\r\n        const node = document.createElement('div');\r\n        node.classList.add('ql-table-operation-menu-item');\r\n\r\n        if (iconSrc) {\r\n            const iconSpan = document.createElement('span');\r\n            iconSpan.classList.add('ql-table-operation-menu-icon');\r\n            iconSpan.innerHTML = iconSrc;\r\n            node.appendChild(iconSpan);\r\n        }\r\n\r\n        if (isString(text)) {\r\n            const textSpan = document.createElement('span');\r\n            textSpan.classList.add('ql-table-operation-menu-text');\r\n            textSpan.innerText = text;\r\n            node.appendChild(textSpan);\r\n        } else if (isFunction(text)) {\r\n            node.appendChild(text.call(this));\r\n        }\r\n\r\n        isFunction(handler) && node.addEventListener('click', handler.bind(this), false);\r\n        return node;\r\n    }\r\n}\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nimport TableCellInnerFormat from './TableCellInnerFormat';\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableRowFormat extends Container {\r\n    static create(value) {\r\n        const node = super.create();\r\n        node.dataset.rowId = value;\r\n        return node;\r\n    }\r\n\r\n    optimize() {\r\n        super.optimize();\r\n        const next = this.next;\r\n        if (\r\n            next != null &&\r\n            next.prev === this &&\r\n            next.statics.blotName === this.statics.blotName &&\r\n            next.domNode.dataset.rowId === this.domNode.dataset.rowId\r\n        ) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n\r\n    get rowId() {\r\n        return this.domNode.dataset.rowId;\r\n    }\r\n\r\n    foreachCellInner(func) {\r\n        const next = this.children.iterator();\r\n        let i = 0;\r\n        let cur;\r\n        while ((cur = next())) {\r\n            const [tableCell] = cur.descendants(TableCellInnerFormat);\r\n            if (func(tableCell, i++)) break;\r\n        }\r\n    }\r\n}\r\n\r\nTableRowFormat.blotName = blotName.tableRow;\r\nTableRowFormat.tagName = 'tr';\r\nTableRowFormat.className = 'ql-table-row';\r\nTableRowFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport default TableRowFormat;\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nconst Parchment = Quill.import('parchment');\r\nconst BlockEmbed = Quill.import('blots/block/embed');\r\n\r\nclass TableColFormat extends BlockEmbed {\r\n    static create(value) {\r\n        const { width, tableId, colId, full } = value;\r\n        const node = super.create();\r\n        node.setAttribute('width', width);\r\n        full && node.setAttribute('data-full', full);\r\n        node.dataset.tableId = tableId;\r\n        node.dataset.colId = colId;\r\n\r\n        return node;\r\n    }\r\n\r\n    static value(domNode) {\r\n        const { tableId, colId } = domNode.dataset;\r\n        return {\r\n            tableId,\r\n            colId,\r\n            width: domNode.getAttribute('width'),\r\n            full: domNode.hasAttribute('data-full'),\r\n        };\r\n    }\r\n\r\n    get width() {\r\n        const width = this.domNode.getAttribute('width');\r\n        if (isNaN(width) && !width.endsWith('%')) return null;\r\n        return parseFloat(width);\r\n    }\r\n    set width(value) {\r\n        return this.domNode.setAttribute('width', value);\r\n    }\r\n\r\n    get colId() {\r\n        return this.domNode.dataset.colId;\r\n    }\r\n\r\n    get full() {\r\n        return this.domNode.hasAttribute('data-full');\r\n    }\r\n\r\n    optimize() {\r\n        super.optimize();\r\n\r\n        const parent = this.parent;\r\n        if (parent != null && parent.statics.blotName != blotName.tableColGroup) {\r\n            const mark = Parchment.create('block');\r\n            this.parent.insertBefore(mark, this.next);\r\n\r\n            const tableWrapper = Parchment.create(blotName.tableWrapper, this.domNode.dataset.tableId);\r\n            const table = Parchment.create(blotName.table, this.domNode.dataset.tableId);\r\n\r\n            this.full && (table.full = true);\r\n\r\n            const tableColgroup = Parchment.create(blotName.tableColGroup);\r\n\r\n            tableColgroup.appendChild(this);\r\n            table.appendChild(tableColgroup);\r\n            tableWrapper.appendChild(table);\r\n\r\n            tableWrapper.replace(mark);\r\n        }\r\n        const next = this.next;\r\n        const { tableId: ttableId, colId: tcolId } = this.domNode.dataset;\r\n        if (\r\n            next != null &&\r\n            next.statics.blotName === this.statics.blotName &&\r\n            next.domNode.tagName === this.domNode.tagName &&\r\n            next.domNode.dataset.tableId === ttableId &&\r\n            next.domNode.dataset.colId === tcolId\r\n        ) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n}\r\nTableColFormat.blotName = blotName.tableCol;\r\nTableColFormat.tagName = 'col';\r\nTableColFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport default TableColFormat;\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nimport TableRowFormat from './TableRowFormat';\r\nimport TableColFormat from './TableColFormat';\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableFormat extends Container {\r\n    constructor(domNode, value) {\r\n        super(domNode, value);\r\n\r\n        this.formatTableWidth();\r\n    }\r\n\r\n    static create(value) {\r\n        const node = super.create();\r\n\r\n        node.dataset.tableId = value;\r\n        node.classList.add('ql-table');\r\n        node.setAttribute('cellpadding', 0);\r\n        node.setAttribute('cellspacing', 0);\r\n\r\n        return node;\r\n    }\r\n\r\n    colWidthFillTable() {\r\n        if (this.full) return;\r\n        const colgroup = this.children.head;\r\n        if (!colgroup || colgroup.statics.blotName !== blotName.tableColGroup) return;\r\n\r\n        const colsWidth = colgroup.children.reduce((sum, col) => col.width + sum, 0);\r\n        if (colsWidth === 0 || isNaN(colsWidth) || this.full) return null;\r\n        this.domNode.style.width = colsWidth + 'px';\r\n        return colsWidth;\r\n    }\r\n\r\n    formatTableWidth() {\r\n        setTimeout(() => {\r\n            this.colWidthFillTable();\r\n        }, 0);\r\n    }\r\n\r\n    get tableId() {\r\n        return this.domNode.dataset.tableId;\r\n    }\r\n    get full() {\r\n        return this.domNode.hasAttribute('data-full');\r\n    }\r\n    set full(value) {\r\n        this.domNode[value ? 'setAttribute' : 'removeAttribute']('data-full', '');\r\n    }\r\n\r\n    getRows() {\r\n        return this.descendants(TableRowFormat);\r\n    }\r\n    getRowIds() {\r\n        return this.getRows().map((d) => d.rowId);\r\n    }\r\n\r\n    getCols() {\r\n        return this.descendants(TableColFormat);\r\n    }\r\n    getColIds() {\r\n        return this.getCols().map((d) => d.colId);\r\n    }\r\n\r\n    optimize() {\r\n        super.optimize();\r\n        let next = this.next;\r\n        if (\r\n            next != null &&\r\n            next.prev === this &&\r\n            next.statics.blotName === this.statics.blotName &&\r\n            next.domNode.tagName === this.domNode.tagName &&\r\n            next.domNode.dataset.tableId === this.domNode.dataset.tableId\r\n        ) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n}\r\n\r\nTableFormat.blotName = blotName.table;\r\nTableFormat.tagName = 'table';\r\nTableFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport default TableFormat;\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableBodyFormat extends Container {\r\n    optimize() {\r\n        super.optimize();\r\n        const next = this.next;\r\n        if (\r\n            next != null &&\r\n            next.prev === this &&\r\n            next.statics.blotName === this.statics.blotName &&\r\n            next.domNode.tagName === this.domNode.tagName\r\n        ) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n\r\n    deleteAt(index, length) {\r\n        if (index === 0 && length === this.length()) {\r\n            this.parent.remove();\r\n        }\r\n        this.children.forEachAt(index, length, function (child, offset, length) {\r\n            child.deleteAt(offset, length);\r\n        });\r\n    }\r\n}\r\nTableBodyFormat.blotName = blotName.tableBody;\r\nTableBodyFormat.tagName = 'tbody';\r\nTableBodyFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport default TableBodyFormat;\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableColgroupFormat extends Container {\r\n    optimize() {\r\n        super.optimize();\r\n        const next = this.next;\r\n        if (\r\n            next != null &&\r\n            next.prev === this &&\r\n            next.statics.blotName === this.statics.blotName &&\r\n            next.domNode.tagName === this.domNode.tagName\r\n        ) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n\r\n    findCol(index) {\r\n        const next = this.children.iterator();\r\n        let i = 0;\r\n        let cur;\r\n        while ((cur = next())) {\r\n            if (i === index) {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        return cur;\r\n    }\r\n}\r\nTableColgroupFormat.blotName = blotName.tableColGroup;\r\nTableColgroupFormat.tagName = 'colgroup';\r\nTableColgroupFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport default TableColgroupFormat;\r\n","import Quill from 'quill';\r\nimport { blotName } from '../../assets/const';\r\nconst Parchment = Quill.import('parchment');\r\nconst ListItem = Quill.import('formats/list/item');\r\n\r\nclass ListRewrite extends ListItem {\r\n    replaceWith(name, value) {\r\n        this.parent.isolate(this.offset(this.parent), this.length());\r\n        if (name === this.parent.statics.blotName) {\r\n            this.parent.replaceWith(name, value);\r\n            return this;\r\n        } else {\r\n            if (name === blotName.tableCellInner) {\r\n                let replacement = typeof name === 'string' ? Parchment.create(name, value) : name;\r\n                replacement.replace(this.parent);\r\n                this.attributes.copy(replacement);\r\n                return replacement;\r\n            }\r\n            return super.replaceWith(name, value);\r\n        }\r\n    }\r\n}\r\nexport default ListRewrite;\r\n","import Quill from 'quill';\r\nconst Parchment = Quill.import('parchment');\r\nconst Delta = Quill.import('delta');\r\nconst BlockEmbed = Quill.import('blots/block/embed');\r\nconst Block = Quill.import('blots/block');\r\nconst Container = Quill.import('blots/container');\r\nconst icons = Quill.import('ui/icons');\r\n\r\nimport TableToolTip from './module/TableToolTip';\r\nimport TableSelection from './module/TableSelection';\r\nimport TableOperationMenu from './module/TableOperationMenu';\r\n\r\nimport ContainBlot from './blot/contain';\r\n\r\nimport TableCellFormat from './format/TableCellFormat';\r\nimport TableRowFormat from './format/TableRowFormat';\r\nimport TableFormat from './format/TableFormat';\r\nimport TableWrapper from './format/TableWrapperFormat';\r\nimport TableBodyFormat from './format/TableBodyFormat';\r\nimport TableColgroupFormat from './format/TableColgroupFormat';\r\nimport TableColFormat from './format/TableColFormat';\r\nimport TableCellInnerFormat from './format/TableCellInnerFormat';\r\n\r\nContainBlot.allowedChildren = [Block, BlockEmbed, Container];\r\n\r\nTableWrapper.allowedChildren = [TableFormat];\r\n\r\nTableFormat.allowedChildren = [TableBodyFormat, TableColgroupFormat];\r\nTableFormat.requiredContainer = TableWrapper;\r\n\r\nTableBodyFormat.allowedChildren = [TableRowFormat];\r\nTableBodyFormat.requiredContainer = TableFormat;\r\n\r\nTableColgroupFormat.allowedChildren = [TableColFormat];\r\nTableColgroupFormat.requiredContainer = TableFormat;\r\n\r\nTableRowFormat.allowedChildren = [TableCellFormat];\r\nTableRowFormat.requiredContainer = TableBodyFormat;\r\n\r\nTableCellFormat.allowedChildren = [TableCellInnerFormat];\r\n\r\nTableCellInnerFormat.defaultChild = 'block';\r\n\r\nimport ListRewrite from './format/rewrite/List';\r\nexport { ListRewrite };\r\n\r\nQuill.register(\r\n    {\r\n        [`formats/${ContainBlot.blotName}`]: ContainBlot,\r\n\r\n        [`formats/${TableCellInnerFormat.blotName}`]: TableCellInnerFormat,\r\n        [`formats/${TableCellFormat.blotName}`]: TableCellFormat,\r\n        [`formats/${TableRowFormat.blotName}`]: TableRowFormat,\r\n        [`formats/${TableBodyFormat.blotName}`]: TableBodyFormat,\r\n        [`formats/${TableFormat.blotName}`]: TableFormat,\r\n        [`formats/${TableWrapper.blotName}`]: TableWrapper,\r\n\r\n        [`formats/${TableColgroupFormat.blotName}`]: TableColgroupFormat,\r\n        [`formats/${TableColFormat.blotName}`]: TableColFormat,\r\n    },\r\n    true\r\n);\r\n\r\nimport { isFunction, randomId, showTableSelector } from './utils';\r\nimport { CREATE_TABLE, CELL_MIN_PRE, blotName, moduleName, toolName, CELL_MIN_WIDTH } from './assets/const';\r\nimport TableSvg from './assets/icons/table.svg';\r\n\r\nclass TableModule {\r\n    constructor(quill, options) {\r\n        this.quill = quill;\r\n        this.options = options;\r\n\r\n        this.controlItem = null;\r\n        this.tableInsertSelectCloseHandler = null;\r\n\r\n        const toolbar = this.quill.getModule('toolbar');\r\n        if (toolbar) {\r\n            const control = toolbar.controls.find(([name]) => name === TableModule.toolName);\r\n            if (control) {\r\n                this.controlItem = control[1].parentNode.querySelector('.ql-table.ql-picker');\r\n                // 使用 button 时会在点击后立刻聚焦输入, 若有横向滚动条会时视口锁定到 focus, 使用 select 就不会\r\n                if (this.controlItem) {\r\n                    const label = this.controlItem.getElementsByClassName('ql-picker-label')?.[0];\r\n                    label.innerHTML = TableSvg;\r\n                } else {\r\n                    this.controlItem = control[1];\r\n                }\r\n                this.buildCustomSelect(this.options.customSelect, control[1].tagName.toLowerCase());\r\n                toolbar.addHandler(TableModule.toolName, this.handleSelectDisplay.bind(this));\r\n            }\r\n        }\r\n        this.pasteTableHandler();\r\n\r\n        // 绑定 table 的选择事件\r\n        this.quill.root.addEventListener(\r\n            'click',\r\n            (evt) => {\r\n                const path = evt.path || (evt.composedPath && evt.composedPath());\r\n                if (!path || path.length <= 0) return;\r\n\r\n                const tableNode = path.filter((node) => {\r\n                    return (\r\n                        node.tagName && node.tagName.toUpperCase() === 'TABLE' && node.classList.contains('ql-table')\r\n                    );\r\n                })?.[0];\r\n                // 结束位置位处于表格内不显示\r\n                if (tableNode) {\r\n                    if (this.table === tableNode) return;\r\n                    if (this.table) this.hideTableTools();\r\n                    this.showTableTools(tableNode, quill, this.options.selection);\r\n                } else if (this.table) {\r\n                    this.hideTableTools();\r\n                }\r\n            },\r\n            false\r\n        );\r\n        // 绑定 table 的右键插入、删除事件\r\n        this.quill.root.addEventListener('contextmenu', (evt) => {\r\n            if (!this.table) return true;\r\n            evt.preventDefault();\r\n\r\n            const path = evt.path || (evt.composedPath && evt.composedPath());\r\n            if (!path || path.length <= 0) return;\r\n\r\n            const tableNode = path.filter(\r\n                (node) => node.tagName && node.tagName.toUpperCase() === 'TABLE' && node.classList.contains('ql-table')\r\n            )[0];\r\n            // 如果没有选中任何单元格，不显示右键菜单\r\n            if (tableNode && this.tableSelection?.selectedTds?.length) {\r\n                if (this.tableOperationMenu) this.tableOperationMenu = this.tableOperationMenu.destroy();\r\n\r\n                const rowNode = path.filter(\r\n                    (node) => node.tagName && node.tagName.toUpperCase() === 'TR' && node.getAttribute('data-row-id')\r\n                )[0];\r\n\r\n                const cellNode = path.filter(\r\n                    (node) => node.tagName && node.tagName.toUpperCase() === 'TD' && node.getAttribute('data-row-id')\r\n                )[0];\r\n\r\n                this.tableOperationMenu = new TableOperationMenu(\r\n                    {\r\n                        table: tableNode,\r\n                        row: rowNode,\r\n                        cell: cellNode,\r\n                        left: evt.pageX,\r\n                        top: evt.pageY,\r\n                    },\r\n                    quill,\r\n                    this.options.operationMenu\r\n                );\r\n            }\r\n        });\r\n\r\n        this.quill.theme.tableToolTip = new TableToolTip(this.quill, this.options.tableToolTip);\r\n    }\r\n\r\n    showTableTools(table, quill, options) {\r\n        this.table = table;\r\n        this.tableSelection = new TableSelection(table, quill, options);\r\n    }\r\n\r\n    hideTableTools() {\r\n        this.tableSelection && this.tableSelection.destroy();\r\n        this.tableOperationMenu && this.tableOperationMenu.destroy();\r\n        if (this.quill.theme.tableToolTip) {\r\n            this.quill.theme.tableToolTip.curTableId = null;\r\n            this.quill.theme.tableToolTip.hide();\r\n        }\r\n        this.tableSelection = null;\r\n        this.tableOperationMenu = null;\r\n        this.table = null;\r\n    }\r\n\r\n    // 粘贴表格处理\r\n    // 需要带上 col 的 width, 处理 px 和 %\r\n    pasteTableHandler() {\r\n        let tableId = randomId();\r\n        let rowId = randomId();\r\n        let colIds = [];\r\n        let cellCount = 0;\r\n\r\n        // 重新生成 table 里的所有 id, cellFormat 和 colFormat 进行 table 的添加\r\n        // addMatcher 匹配的是标签字符串, 不是 blotName, 只是这些 blotName 设置的是标签字符串\r\n        this.quill.clipboard.addMatcher(blotName.table, (node, delta) => {\r\n            const hasCol = !!delta.ops[0].insert?.col;\r\n            let colDelta;\r\n            // 粘贴表格若原本存在 col, 仅改变 id, 否则重新生成\r\n            const { width: originTableWidth } = node.getBoundingClientRect();\r\n            let isFull = this.options.fullWidth;\r\n            if (hasCol) isFull = !!delta.ops[0].insert?.col?.full;\r\n            const defaultColWidth = isFull\r\n                ? Math.max(100 / colIds.length, CELL_MIN_PRE) + '%'\r\n                : Math.max(originTableWidth / colIds.length, CELL_MIN_WIDTH) + 'px';\r\n\r\n            if (!hasCol) {\r\n                colDelta = colIds.reduce((colDelta, id) => {\r\n                    colDelta.insert({\r\n                        [blotName.tableCol]: {\r\n                            colId: id,\r\n                            tableId,\r\n                            width: defaultColWidth,\r\n                            full: isFull,\r\n                        },\r\n                    });\r\n                    return colDelta;\r\n                }, new Delta());\r\n            } else {\r\n                for (let i = 0; i < delta.ops.length; i++) {\r\n                    if (!delta.ops[i].insert[blotName.tableCol]) {\r\n                        break;\r\n                    }\r\n                    delta.ops[i].insert[blotName.tableCol].tableId = tableId;\r\n                    delta.ops[i].insert[blotName.tableCol].colId = colIds[i];\r\n                    delta.ops[i].insert[blotName.tableCol].full = isFull;\r\n                    if (!delta.ops[i].insert[blotName.tableCol].width) {\r\n                        delta.ops[i].insert[blotName.tableCol].width = defaultColWidth;\r\n                    } else {\r\n                        delta.ops[i].insert[blotName.tableCol].width =\r\n                            parseFloat(delta.ops[i].insert[blotName.tableCol].width) + (isFull ? '%' : 'px');\r\n                    }\r\n                }\r\n            }\r\n            tableId = randomId();\r\n            colIds = [];\r\n            cellCount = 0;\r\n            return colDelta ? colDelta.concat(delta) : delta;\r\n        });\r\n\r\n        this.quill.clipboard.addMatcher(blotName.tableRow, (node, delta) => {\r\n            rowId = randomId();\r\n            cellCount = 0;\r\n            return delta;\r\n        });\r\n\r\n        this.quill.clipboard.addMatcher(blotName.tableCell, (node, delta) => {\r\n            const rowspan = node.getAttribute('rowspan') || 1;\r\n            const colspan = node.getAttribute('colspan') || 1;\r\n            const colIndex = +cellCount + +colspan - 1;\r\n            if (!colIds[colIndex]) {\r\n                for (let i = colIndex; i >= 0; i--) {\r\n                    if (!colIds[i]) colIds[i] = randomId();\r\n                }\r\n            }\r\n            const colId = colIds[colIndex];\r\n            cellCount += 1;\r\n\r\n            if (delta.slice(delta.length() - 1).ops[0]?.insert !== '\\n') {\r\n                delta.insert('\\n');\r\n            }\r\n\r\n            return delta.compose(\r\n                new Delta().retain(delta.length(), {\r\n                    [blotName.tableCellInner]: {\r\n                        tableId,\r\n                        rowId,\r\n                        colId,\r\n                        rowspan,\r\n                        colspan,\r\n                        style: node.getAttribute('style'),\r\n                    },\r\n                })\r\n            );\r\n        });\r\n    }\r\n\r\n    async buildCustomSelect(customSelect, tagName) {\r\n        const dom = document.createElement('div');\r\n        dom.classList.add('ql-custom-select');\r\n        const selector = customSelect && isFunction(customSelect) ? await customSelect() : this.createSelect();\r\n        dom.appendChild(selector);\r\n\r\n        let appendTo = this.controlItem;\r\n        if (tagName === 'select') {\r\n            appendTo = this.controlItem.querySelector('.ql-picker-options');\r\n        }\r\n        if (!appendTo) return;\r\n        selector.addEventListener(CREATE_TABLE, (e) => {\r\n            const { row, col } = e.detail;\r\n            if (!row || !col) return;\r\n            this.insertTable(row, col);\r\n        });\r\n        appendTo.appendChild(dom);\r\n    }\r\n\r\n    async handleSelectDisplay() {\r\n        this.controlItem.classList.add('ql-expanded');\r\n        this.controlItem.dataset.active = true;\r\n        window.removeEventListener('click', this.tableInsertSelectCloseHandler);\r\n        this.tableInsertSelectCloseHandler = (e) => {\r\n            const path = (e.composedPath && e.composedPath()) || e.path;\r\n            const i = path.findIndex((el) => el === this.controlItem);\r\n            if (i > 2 || i === -1) {\r\n                this.closeSelecte();\r\n            }\r\n        };\r\n        window.addEventListener('click', this.tableInsertSelectCloseHandler);\r\n    }\r\n\r\n    createSelect() {\r\n        return showTableSelector();\r\n    }\r\n\r\n    closeSelecte() {\r\n        this.controlItem.classList.remove('ql-expanded');\r\n        this.controlItem.dataset.active = false;\r\n        window.removeEventListener('click', this.tableInsertSelectCloseHandler);\r\n    }\r\n\r\n    // 以上为 toolbar table 按钮的选择生成器相关\r\n    // 以下为 table module 生成表格相关功能函数\r\n\r\n    insertTable(rows, columns) {\r\n        if (rows >= 100 || columns >= 100) {\r\n            throw new Error('Both rows and columns must be less than 100.');\r\n        }\r\n\r\n        this.quill.focus();\r\n        this.range = this.quill.getSelection();\r\n        const range = this.range;\r\n        if (range == null) return;\r\n        const currentBlot = this.quill.getLeaf(range.index)[0];\r\n\r\n        if (isForbidInTable(currentBlot)) {\r\n            throw new Error('Not supported nesting of ' + currentBlot.type + ' type object within a table.');\r\n        }\r\n\r\n        setTimeout(() => {\r\n            let delta = new Delta().retain(range.index);\r\n            delta.insert('\\n');\r\n            const tableId = randomId();\r\n            const colId = new Array(columns).fill(0).map(() => randomId());\r\n\r\n            let { width, paddingLeft, paddingRight } = getComputedStyle(this.quill.root);\r\n            width = parseInt(width);\r\n            paddingLeft = parseInt(paddingLeft);\r\n            paddingRight = parseInt(paddingRight);\r\n            width = width - paddingLeft - paddingRight;\r\n\r\n            delta = new Array(columns).fill('\\n').reduce((memo, text, i) => {\r\n                memo.insert(text, {\r\n                    [blotName.tableCol]: {\r\n                        width: !this.options.fullWidth ? `${Math.floor(width / columns)}px` : `${(1 / columns) * 100}%`,\r\n                        tableId,\r\n                        colId: colId[i],\r\n                        full: this.options.fullWidth,\r\n                    },\r\n                });\r\n                return memo;\r\n            }, delta);\r\n\r\n            // 直接生成 delta 的数据格式并插入\r\n            delta = new Array(rows).fill(0).reduce((memo) => {\r\n                const rowId = randomId();\r\n                return new Array(columns).fill('\\n').reduce((memo, text, i) => {\r\n                    memo.insert(text, {\r\n                        [blotName.tableCellInner]: {\r\n                            tableId,\r\n                            rowId,\r\n                            colId: colId[i],\r\n                            rowspan: 1,\r\n                            colspan: 1,\r\n                        },\r\n                    });\r\n                    return memo;\r\n                }, memo);\r\n            }, delta);\r\n            // console.log(columns, rows);\r\n            this.quill.updateContents(delta, Quill.sources.USER);\r\n            this.quill.setSelection(range.index + columns + columns * rows + 1, Quill.sources.API);\r\n            this.quill.focus();\r\n\r\n            this.closeSelecte();\r\n        }, 0);\r\n    }\r\n\r\n    findTable(blot) {\r\n        let cur = blot;\r\n        while (cur.statics.blotName !== blotName.table && cur !== null) {\r\n            cur = cur.parent;\r\n        }\r\n        return cur;\r\n    }\r\n\r\n    /*\r\n        基准行\r\n            向上: 选中 cell 的第一行\r\n            向下: 选中 cell 的最后一行\r\n        有无跨行单元格跨过选中基准行\r\n            找到所有 colId, 根据若遍历行内的某 colId 跨行至基准行, 则添加至新的 cell 中, 否则:\r\n                向上: 从当前行向前查找所有 cell, 若 cell rowspan + index > 基准行 index, 则此 cell rowspan + 1\r\n                向下: 从当前行向后查找所有 cell, 若 cell rowspan - index < 基准行 index, 则此 cell rowspan + 1\r\n            直到所有 colId 都遍历完, 则生成新的 cell 并插入到当前行的下方/上方\r\n     */\r\n    appendRow(isDown) {\r\n        const selectTds = this.tableSelection.selectedTds;\r\n        if (!selectTds.length) return;\r\n        const table = this.findTable(selectTds[0]);\r\n        const findTd = selectTds[isDown ? selectTds.length - 1 : 0];\r\n        let baseTr = Quill.find(findTd.domNode.parentNode.parentNode);\r\n        if (isDown) {\r\n            let baseTrRowspan = findTd.rowspan;\r\n            while (baseTrRowspan > 1) {\r\n                baseTr = baseTr.next;\r\n                baseTrRowspan -= 1;\r\n            }\r\n        }\r\n\r\n        const colIds = table.getColIds();\r\n        // 用于判断有哪些 col 已被遍历\r\n        const allColIds = new Set(colIds);\r\n        let foreachTr = isDown ? baseTr : baseTr.prev;\r\n        let newCellColId = new Array();\r\n        let indexDiff = 0;\r\n        // 第一行向上插入时 baseTr 是 null, 不需要判断\r\n        if (!foreachTr) {\r\n            allColIds.clear();\r\n            newCellColId = colIds;\r\n        }\r\n        while (allColIds.size) {\r\n            indexDiff += 1;\r\n            if (!foreachTr) {\r\n                break;\r\n            }\r\n            foreachTr.foreachCellInner((cell) => {\r\n                if (!allColIds.has(cell.colId)) return;\r\n                // 找到当前 cell 跨列的所有 colId\r\n                let curCellColIds = [cell.colId];\r\n                if (cell.colspan > 1) {\r\n                    let index = colIds.findIndex((id) => id === cell.colId);\r\n                    if (index === -1) {\r\n                        index = 0;\r\n                    }\r\n                    curCellColIds = colIds.slice(index, index + cell.colspan);\r\n                }\r\n                // 若跨行过基准行, 则更新 rowspan\r\n                if (cell.rowspan > indexDiff) {\r\n                    cell.rowspan += 1;\r\n                } else {\r\n                    // 未包含基准行, 要添加所有的包含的 col\r\n                    newCellColId.push(...curCellColIds);\r\n                }\r\n                curCellColIds.map((id) => allColIds.delete(id));\r\n            });\r\n            foreachTr = foreachTr.prev;\r\n        }\r\n        // 生成新的 cell\r\n        const tableId = table.tableId;\r\n        const newRowId = randomId();\r\n        const newRow = Parchment.create(blotName.tableRow, newRowId);\r\n        const insertColId = new Set(newCellColId);\r\n        // 保持 colId 顺序\r\n        for (let i = 0; i < colIds.length; i++) {\r\n            if (!insertColId.size) break;\r\n            if (insertColId.has(colIds[i])) {\r\n                const td = Parchment.create(blotName.tableCell, {\r\n                    rowId: newRowId,\r\n                    colId: colIds[i],\r\n                    rowspan: 1,\r\n                    colspan: 1,\r\n                });\r\n                const tdInner = Parchment.create(blotName.tableCellInner, {\r\n                    tableId,\r\n                    rowId: newRowId,\r\n                    colId: colIds[i],\r\n                    rowspan: 1,\r\n                    colspan: 1,\r\n                });\r\n                const block = Parchment.create('block');\r\n                block.appendChild(Parchment.create('break'));\r\n                tdInner.appendChild(block);\r\n                td.appendChild(tdInner);\r\n                newRow.appendChild(td);\r\n                insertColId.delete(colIds[i]);\r\n            }\r\n        }\r\n\r\n        baseTr.parent.insertBefore(newRow, isDown ? baseTr.next : baseTr);\r\n    }\r\n\r\n    /*\r\n        第一种情况选中行中没有跨行, 或跨行没有超出选中范围. \r\n            直接删除\r\n        第二种情况选中行内有跨行, 且跨行结束行在选中范围外.\r\n            遍历选中行, 找到所有跨行超出范围的 cell 记录 colId 与超出 rowspan, 之后在选中最后一行的后一行插入对应的 cell\r\n        第三种情况选中行之前有跨行, 且跨行结束行在选中范围内. \r\n            从选中行前一行开始遍历 cell, 找到所有的 col, 若 cell 跨行进入了选中范围(rowsapn - index > 0), rowspan = index\r\n        第四种情况选中行之前有跨行, 且跨行范围包含选中范围.\r\n            选中行前一行开始遍历 cell, 找到所有的 col, 若 cell 跨行进入了选中范围(rowsapn - index > 0), rowspan = rowspan - deleteTrs.length\r\n            \r\n    */\r\n    removeRow() {\r\n        if (!this.tableSelection.selectedTds.length) return;\r\n        const selectTds = this.tableSelection.selectedTds;\r\n        let [rowIds, rows] = selectTds.reduce(\r\n            (pre, td) => {\r\n                if (!pre[0].has(td.rowId)) {\r\n                    pre[0].add(td.rowId);\r\n                    pre[1].push(td.parent.parent);\r\n                }\r\n                return pre;\r\n            },\r\n            [new Set(), []]\r\n        );\r\n        rowIds = Array.from(rowIds);\r\n\r\n        const afterCell = new Map();\r\n        rows.map((tr) => {\r\n            tr.foreachCellInner((cell) => {\r\n                const rowIndexInSelected = rowIds.findIndex((id) => id === cell.rowId);\r\n                if (cell.rowspan > rowIds.length - rowIndexInSelected) {\r\n                    afterCell.set(cell.colId, {\r\n                        cell,\r\n                        rowspan: cell.rowspan - rowIds.length + rowIndexInSelected,\r\n                    });\r\n                }\r\n            });\r\n            tr.remove();\r\n        });\r\n\r\n        const table = this.findTable(selectTds[0]);\r\n        const tableId = table.tableId;\r\n        // 需要添加的跨行 cell\r\n        if (afterCell.size) {\r\n            const nextRow = rows[rows.length - 1].next;\r\n\r\n            const colIds = table.getColIds();\r\n            // 标记插入位置\r\n            let lastTd = null;\r\n            for (let i = 0; i < colIds.length; ) {\r\n                const td = nextRow.domNode.querySelector(`td[data-col-id=\"${colIds[i]}\"]`);\r\n                if (td) {\r\n                    const tdBlot = Quill.find(td);\r\n                    i += tdBlot.colspan;\r\n                    lastTd = tdBlot.next;\r\n                } else {\r\n                    const { cell, rowspan } = afterCell.get(colIds[i]);\r\n                    const newTd = Parchment.create(blotName.tableCell, {\r\n                        rowId: nextRow.rowId,\r\n                        colId: colIds[i],\r\n                        rowspan,\r\n                        colspan: cell.colspan,\r\n                    });\r\n                    const newTdInner = Parchment.create(blotName.tableCellInner, {\r\n                        tableId,\r\n                        rowId: nextRow.rowId,\r\n                        colId: colIds[i],\r\n                        rowspan,\r\n                        colspan: cell.colspan,\r\n                    });\r\n                    cell.moveChildren(newTdInner);\r\n                    newTd.appendChild(newTdInner);\r\n                    nextRow.insertBefore(newTd, lastTd);\r\n                    i += cell.colspan;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n        基准列\r\n            向左: 选中 cell 的第一列 id, index\r\n            向右: 选中 cell 的最后一列 id, index\r\n        找到所有 rowId, 开始遍历行内 cell 至(向右: 基准行 colId)(向左: 基准行前一行 colId) \r\n            有无单元格跨列超过基准列\r\n                // 因为 colspan 最少为 1, 判断时需要 + 1\r\n                向右: 若 colspan + i > 1 + index, 则 colspan + 1 \r\n                向左: 若 colspan + i > 1 + index, 则 colspan + 1 \r\n                colspan + 1 后判断是否跨行, 若跨行则之后 rowspan 行不进行循环\r\n                break\r\n            无 \r\n                找到 index 所在 cell，insertBefore\r\n    */\r\n    appendCol(isRight) {\r\n        if (!this.tableSelection.selectedTds.length) return;\r\n        const selectTds = this.tableSelection.selectedTds;\r\n        const table = this.findTable(selectTds[0]);\r\n        const cols = table.getCols();\r\n        const colIds = table.getColIds();\r\n        const rows = table.getRows();\r\n        const newColId = randomId();\r\n\r\n        let baseColId;\r\n        if (isRight) {\r\n            const lastTd = selectTds[selectTds.length - 1];\r\n            const i = colIds.findIndex((id) => id === lastTd.colId);\r\n            baseColId = colIds[i + lastTd.colspan - 1];\r\n        } else {\r\n            baseColId = selectTds[0].colId;\r\n        }\r\n        // 找到对应 col 下标，同时插入 col 元素\r\n        const baseColIndex = cols.findIndex((col) => {\r\n            if (col.colId === baseColId) {\r\n                const newCol = Parchment.create(blotName.tableCol, {\r\n                    width: !this.options.fullWidth ? '160px' : '6%',\r\n                    full: this.options.fullWidth,\r\n                    tableId: table.tableId,\r\n                    colId: newColId,\r\n                });\r\n                let beforeTarget = isRight ? col.next : col;\r\n                col.parent.insertBefore(newCol, beforeTarget);\r\n                if (this.options.fullWidth) {\r\n                    if (!beforeTarget) {\r\n                        beforeTarget = isRight ? col : col.prev;\r\n                    }\r\n                    beforeTarget.width = Math.max(beforeTarget.width - 6, CELL_MIN_PRE) + '%';\r\n                }\r\n            }\r\n            return col.colId === baseColId;\r\n        });\r\n        table.formatTableWidth();\r\n\r\n        const stopIndex = isRight ? baseColIndex + 1 : baseColIndex;\r\n        let skipRow = 0;\r\n        rows.map((tr) => {\r\n            let colspanIncrease = false;\r\n            let beforeCell = null;\r\n            tr.foreachCellInner((cell) => {\r\n                // 之前行有跨行且跨列的 cell 处理过, 直接跳过\r\n                if (skipRow > 0) {\r\n                    skipRow -= 1;\r\n                    colspanIncrease = true;\r\n                    return true;\r\n                }\r\n                const colIndexInSelected = colIds.findIndex((id) => id === cell.colId);\r\n                if (cell.colspan + colIndexInSelected > stopIndex) {\r\n                    beforeCell = cell.parent;\r\n\r\n                    // 当前 cell 跨列且不是终止位\r\n                    if (cell.colspan !== 1 && colIndexInSelected !== stopIndex) {\r\n                        cell.colspan += 1;\r\n                        colspanIncrease = true;\r\n                        skipRow = cell.rowspan - 1;\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n                if (colIndexInSelected >= stopIndex) {\r\n                    return true;\r\n                }\r\n            });\r\n\r\n            if (!colspanIncrease) {\r\n                const newTd = Parchment.create(blotName.tableCell, {\r\n                    rowId: tr.rowId,\r\n                    colId: newColId,\r\n                    rowspan: 1,\r\n                    colspan: 1,\r\n                });\r\n                const newTdInner = Parchment.create(blotName.tableCellInner, {\r\n                    tableId: table.tableId,\r\n                    rowId: tr.rowId,\r\n                    colId: newColId,\r\n                    rowspan: 1,\r\n                    colspan: 1,\r\n                });\r\n                newTd.appendChild(newTdInner);\r\n                tr.insertBefore(newTd, beforeCell);\r\n            }\r\n        });\r\n    }\r\n\r\n    /*\r\n        找到需要删除的所有 colId\r\n            获取所有 colIds, 遍历选中 cell, 找到 cell 在 colIds 下标, while cell 的 colspan, 将对应 colId 加入 set. 同时保存第一个 col 的 index (first)和最后一个 col 的 index(last)\r\n        遍历所有 row, 遍历 row 中的 cell, 直到 cell i == index\r\n            if i > first && i + colspan > last\r\n                cell.colspan - (last - i + 1)\r\n            if i < first && i + colsapn > last\r\n                cell.colspan - (last - first + 1)\r\n            if i < first && i + colspan > first && i + colspan <= last\r\n                cell.colspan - (i + colspan - first)\r\n            if i >= first && i + colspan <= last\r\n                cell.remove\r\n    */\r\n    removeCol() {\r\n        if (!this.tableSelection.selectedTds.length) return;\r\n        const tds = this.tableSelection.selectedTds;\r\n        const table = this.findTable(this.tableSelection.selectedTds[0]);\r\n        const colIds = table.getColIds();\r\n\r\n        const [firstSelectColIndex, lastSelectColIndex] = tds.reduce(\r\n            (n, cellInner) => {\r\n                const i = colIds.findIndex((id) => id === cellInner.colId);\r\n                return [Math.min(n[0], i), Math.max(n[1], i + cellInner.colspan - 1)];\r\n            },\r\n            [Infinity, -Infinity]\r\n        );\r\n\r\n        const rows = table.getRows();\r\n        rows.map((row) => {\r\n            let i = 0;\r\n            row.foreachCellInner((cell) => {\r\n                if (i > lastSelectColIndex) return true;\r\n                const colspan = cell.colspan;\r\n                if (i + colspan - 1 > lastSelectColIndex) {\r\n                    cell.colspan -= lastSelectColIndex - Math.max(i, firstSelectColIndex) + 1;\r\n                } else if (i < firstSelectColIndex && i + colspan - 1 >= firstSelectColIndex) {\r\n                    cell.colspan -= i + colspan - firstSelectColIndex;\r\n                } else if (i >= firstSelectColIndex) {\r\n                    cell.remove();\r\n                }\r\n\r\n                i += colspan;\r\n            });\r\n        });\r\n\r\n        const cols = table.getCols();\r\n        for (let i = 0; i < cols.length; i++) {\r\n            if (i >= firstSelectColIndex && i <= lastSelectColIndex) {\r\n                cols[i].remove();\r\n            }\r\n            if (i > lastSelectColIndex) {\r\n                break;\r\n            }\r\n        }\r\n        table.formatTableWidth();\r\n    }\r\n\r\n    removeTable() {\r\n        const selectTds = this.tableSelection.selectedTds;\r\n        if (!selectTds.length) return;\r\n        this.findTable(selectTds[0]).remove();\r\n    }\r\n\r\n    mergeCells() {\r\n        if (!this.tableSelection.selectedTds.length) return;\r\n        const selectTds = this.tableSelection.selectedTds;\r\n\r\n        // 计算需要合并的单元格的行列数\r\n        const counts = selectTds.reduce(\r\n            (pre, cellInner) => {\r\n                // 此单元格所在列需要跨的行数\r\n                const colId = cellInner.colId;\r\n                if (!pre[0][colId]) pre[0][colId] = 0;\r\n                pre[0][colId] += cellInner.rowspan;\r\n                // 此单元格所在行需要跨的列数\r\n                const rowId = cellInner.rowId;\r\n                if (!pre[1][rowId]) pre[1][rowId] = 0;\r\n                pre[1][rowId] += cellInner.colspan;\r\n                return pre;\r\n            },\r\n            [{}, {}]\r\n        );\r\n        // counts[0] 记录的是 colId 对应的跨行数\r\n        // counts[1] 记录的是 rowId 对应的跨列数\r\n        const rowCount = Math.max(...Object.values(counts[0]));\r\n        const colCount = Math.max(...Object.values(counts[1]));\r\n\r\n        // console.log(counts);\r\n        // console.log('row', rowCount);\r\n        // console.log('col', colCount);\r\n        // 注意清除 block 的 cache.detla\r\n        // 若不清除 cache.detla 导致显示正常但在获取 quill.getContents() 时会有原 cellInner 未改变的情况\r\n        // 防止这种情况直接 clone\r\n        const mergedCell = selectTds[0].clone();\r\n        selectTds[0].parent.appendChild(mergedCell);\r\n        mergedCell.colspan = colCount;\r\n        mergedCell.rowspan = rowCount;\r\n        for (let i = 0; i < selectTds.length; i++) {\r\n            selectTds[i].moveChildren(mergedCell);\r\n            selectTds[i].remove();\r\n        }\r\n        const table = this.findTable(selectTds[0]);\r\n        // 当合并后的单元格跨列等于 table 的列数, row 可以合并为 1\r\n        const tableColLength = table.getColIds().length;\r\n        if (tableColLength === colCount) {\r\n            mergedCell.rowspan = 1;\r\n        }\r\n        // 当合并后的单元格跨行等于 table 的行数, col 可以合并为 1\r\n        const tableRowLength = table.getRowIds().length;\r\n        if (tableRowLength <= rowCount) {\r\n            // 最终将 colspan 合并为 1, 所以要删除 colspan - 1 个 col\r\n            // 遍历到合并单元格的 colId 后开始进行删除\r\n            const tableCols = table.descendants(TableColFormat);\r\n            let deleteCount = mergedCell.colspan - 1;\r\n            let startDeleteIndex = null;\r\n            for (let i = 0; i < tableCols.length; i++) {\r\n                if (deleteCount <= 0) break;\r\n                // 先删再判断, 防止删除合并后的最后一个单元格\r\n                if (startDeleteIndex !== null) {\r\n                    // 若合并 col 中存在 width 为 null, 则合并后的 col 为 null\r\n                    if (tableCols[startDeleteIndex].width === null || tableCols[i].width === null) {\r\n                        tableCols[startDeleteIndex].width = null;\r\n                    } else {\r\n                        tableCols[startDeleteIndex].width += tableCols[i].width;\r\n                    }\r\n                    tableCols[i].remove();\r\n                    deleteCount -= 1;\r\n                }\r\n                if (tableCols[i].colId === mergedCell.colId) {\r\n                    startDeleteIndex = i;\r\n                }\r\n            }\r\n            mergedCell.colspan = 1;\r\n        }\r\n    }\r\n\r\n    setBackgroundColor(color, cells) {\r\n        if (!cells.length) return;\r\n        cells.map((cellInner) => (cellInner.style = `background-color: ${color};`));\r\n    }\r\n}\r\n\r\n// 不可插入至表格的 blot\r\nexport const tableCantInsert = [blotName.tableCell];\r\nexport const isForbidInTableBlot = (blot) => {\r\n    return tableCantInsert.includes(blot.statics.blotName);\r\n};\r\n\r\nexport const isForbidInTable = (current) => {\r\n    return current && current.parent\r\n        ? isForbidInTableBlot(current.parent)\r\n            ? true\r\n            : isForbidInTable(current.parent)\r\n        : false;\r\n};\r\n\r\nTableModule.moduleName = moduleName.table;\r\nTableModule.toolName = toolName.table;\r\n\r\nTableModule.createEventName = CREATE_TABLE;\r\nicons[TableModule.toolName] = TableSvg;\r\n\r\nexport const rewirteFormats = () =>\r\n    Quill.register(\r\n        {\r\n            [`formats/list/item`]: ListRewrite,\r\n        },\r\n        true\r\n    );\r\nexport default TableModule;\r\n"],"names":["CREATE_TABLE","blotName","moduleName","toolName","Container","Quill","import","Parchment","TableWrapperFormat","create","value","node","super","dataset","tableId","addEventListener","e","preventDefault","stopPropagation","ondrop","ondragover","dataTransfer","dropEffect","this","domNode","insertBefore","blot","ref","statics","children","head","allowedChildren","find","child","prev","parent","next","appendChild","optimize","tagName","moveChildren","remove","deleteAt","index","length","_document$querySelect","document","querySelector","concat","classList","add","className","scope","Scope","BLOCK_BLOT","randomId","Math","random","toString","slice","zindex","dialog","_ref","arguments","undefined","_ref$target","target","body","_ref$beforeClose","beforeClose","appendTo","createElement","style","zIndex","overlay","content","onclick","originOverflow","getComputedStyle","overflow","close","createInputItem","label","options","type","inputItem","inputLabel","innerText","inputInput","input","key","setAttribute","max","min","onfocus","onblur","errorTip","msg","contains","removeError","item","showTableCreator","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","row","col","box","inputContent","_createInputItem","rowItem","rowInput","rowErrorTip","_createInputItem2","colItem","colInput","colErrorTip","control","confirmBtn","cancelBtn","_args2","wrap","_context2","abrupt","Promise","resolve","reject","_callee","_context","Number","isNaN","stop","apply","css","rules","prop","getRelativeRect","targetRect","container","containerRect","getBoundingClientRect","x","scrollLeft","y","scrollTop","x1","width","y1","height","computeBoundaryFromRects","startRect","endRect","isFunction","val","TIP_HEIGHT","TableTooltip","constructor","quill","_defineProperty","rect","table","root","tableTop","offsetTop","rootScrollTop","top","left","optionsMerge","tableDisableToolHandlers","tableWrapper","curTableId","focusTableChange","tableCols","scrollHandler","addContainer","ResizeObserver","entries","hide","observe","isMobile","window","handledEvents","down","move","up","listen","_this$options","_this$options2","tipHeight","disableToolNames","Array","from","Set","on","events","EDITOR_CHANGE","eventName","TEXT_CHANGE","range","getSelection","_slicedToArray","scroll","descendant","_tableWrapper$childre","disableFromTable","tbody","tail","_tbody$children","map","clearScrollEvent","addScrollEvent","scrollSync","bind","show","position","toggleDisableToolbarTools","toolbar","getModule","disableByTable","_step","_iterator","_createForOfIteratorHelper","s","n","done","handlers","err","f","enableFromTable","controls","_ref6","_toolbar$container$qu","_ref7","name","btn","includes","toLowerCase","dom","handle","push","i","_this$scrollHandler$i","removeEventListener","tableWrapperRect","innerHTML","full","join","Object","assign","bindDrag","setTimeout","srcollHide","tipColBreak","curColIndex","tableColHeads","getElementsByClassName","tableColHeadSeparators","handleMousemove","tableWidth","resX","changedTouches","clientX","minWidth","CELL_MIN_PRE","maxRange","right","Infinity","minRange","floor","w","handleMouseup","parseInt","pre","oldWidthPre","last","totalWidthNextPre","parseFloat","formatTableWidth","removeChild","hideTableTools","handleMousedown","divDom","tableRect","el","ContainBlot","format","replace","defaultChild","TableCellInnerFormat","rowId","colId","rowspan","colspan","_style","clearDeltaCache","forEach","cache","cloneTarget","clone","formats","_this$domNode$dataset","_this$domNode$dataset2","tableBody","tr","td","TableCellFormat","getAttribute","getCellInner","descendants","_this$domNode$dataset3","cell","cellInner","forEachAt","offset","PRIMARY_COLOR","TableSelection","boundary","selectedTds","dragging","selectingHandler","mouseDownHandler","cellSelect","helpLinesInitial","clearSelection","closeHandler","_this$options3","primaryColor","_this$scrollHandler$i2","button","closest","startTableId","mouseMoveHandler","endTd","endTdRect","parentNode","startTdRect","correctBoundary","computeSelectedTds","repositionHelpLines","startTd","blur","mouseUpHandler","reduce","selectedCells","tableCell","_getRelativeRect","_getRelativeRect2","scrollX","tableViewScrollLeft","display","destroy","off","MENU_ITEMS_DEFAULT","insertColumnLeft","text","handler","tableModule","appendCol","insertColumnRight","insertRowTop","appendRow","insertRowBottom","groupEnd","removeCol","removeRow","removeTable","mergeCell","mergeCells","setBackgroundColor","subTitle","tempCells","tableSelection","TableOperationMenu","params","menuItems","destroyHandler","menuInitial","mount","_this$options4","_this$options$items","_this$options5","_this$options$items2","_this$options6","replaceItems","items","_ref8","_window","innerWidth","innerHeight","bottom","subTitleCreator","menuItemCreator","dividingCreator","dividing","title","_ref9","iconSrc","iconSpan","textSpan","call","TableRowFormat","foreachCellInner","func","cur","iterator","BlockEmbed","TableColFormat","_domNode$dataset","hasAttribute","endsWith","tableColgroup","_this$domNode$dataset4","ttableId","tcolId","TableFormat","colWidthFillTable","colgroup","colsWidth","sum","getRows","getRowIds","d","getCols","getColIds","TableBodyFormat","TableColgroupFormat","findCol","ListItem","ListRewrite","replaceWith","isolate","replacement","attributes","copy","Delta","Block","icons","TableWrapper","requiredContainer","register","TableModule","controlItem","tableInsertSelectCloseHandler","_ref10","_this$controlItem$get","TableSvg","buildCustomSelect","customSelect","addHandler","handleSelectDisplay","pasteTableHandler","evt","_path$filter","path","composedPath","tableNode","filter","toUpperCase","showTableTools","selection","_this$tableSelection","tableOperationMenu","rowNode","cellNode","pageX","pageY","operationMenu","theme","tableToolTip","TableToolTip","colIds","cellCount","clipboard","addMatcher","delta","_delta$ops$0$insert","_delta$ops$0$insert2","colDelta","hasCol","ops","insert","originTableWidth","isFull","fullWidth","defaultColWidth","id","blotName_tableCol","_delta$slice$ops$","colIndex","compose","retain","blotName_tableCellInner","_this","_callee3","selector","_context3","t0","sent","createSelect","_e$detail","detail","insertTable","_this2","_callee4","_context4","active","findIndex","closeSelecte","showTableSelector","selectDom","selectBlock","r","c","selectItem","selectCustom","sendTableData","_ref4","dispatchEvent","CustomEvent","updateSelectBlockItems","_selectDom$dataset","querySelectorAll","childs","_e$target$dataset","removeAttribute","_selectDom$dataset2","then","_ref5","rows","columns","Error","focus","currentBlot","getLeaf","isForbidInTable","fill","_getComputedStyle","paddingLeft","paddingRight","memo","updateContents","sources","USER","setSelection","API","findTable","isDown","selectTds","findTd","baseTr","baseTrRowspan","allColIds","foreachTr","newCellColId","indexDiff","clear","size","has","curCellColIds","delete","newRowId","newRow","insertColId","tdInner","block","_selectTds$reduce","_selectTds$reduce2","rowIds","afterCell","Map","rowIndexInSelected","set","nextRow","lastTd","tdBlot","_afterCell$get","get","newTd","newTdInner","isRight","baseColId","cols","newColId","baseColIndex","newCol","beforeTarget","stopIndex","skipRow","colspanIncrease","beforeCell","colIndexInSelected","tds","_tds$reduce","_tds$reduce2","firstSelectColIndex","lastSelectColIndex","counts","rowCount","values","colCount","mergedCell","deleteCount","startDeleteIndex","color","cells","tableCantInsert","isForbidInTableBlot","current","createEventName","rewirteFormats"],"mappings":"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"}