{"version":3,"file":"index.js","sources":["../src/assets/const/event.js","../src/assets/const/name.js","../src/utils/index.js","../src/module/TableOperationMenu.js","../src/format/TableBodyFormat.js","../src/blot/contain.js","../src/format/TableCellInnerFormat.js","../src/format/TableCellFormat.js","../src/format/TableColFormat.js","../src/format/TableColgroupFormat.js","../src/format/TableRowFormat.js","../src/format/TableFormat.js","../src/format/TableWrapperFormat.js","../src/format/rewrite/List.js","../src/module/TableSelection.js","../src/module/TableToolTip.js","../src/assets/const/vars.js","../src/index.js"],"sourcesContent":["export const CREATE_TABLE = 'createTable';\n","export const blotName = {\n    contain: 'contain',\n    tableWrapper: 'tableWrapper',\n    table: 'table',\n    tableColGroup: 'colgroup',\n    tableCol: 'col',\n    tableBody: 'tbody',\n    tableRow: 'tr',\n    tableCell: 'td',\n    tableCellInner: 'tableCellInner',\n};\nexport const moduleName = {\n    table: 'table',\n};\nexport const toolName = {\n    table: 'table',\n};\n","import { CREATE_TABLE } from '../assets/const';\n\nexport const randomId = () => Math.random().toString(36).slice(2);\n\nlet zindex = 8000;\nexport const dialog = ({ child, target = document.body, beforeClose = () => {} } = {}) => {\n    const appendTo = target;\n    const dialog = document.createElement('div');\n    dialog.classList.add('dialog');\n    dialog.style.zIndex = zindex;\n    const overlay = document.createElement('div');\n    overlay.classList.add('dialog_overlay');\n    dialog.appendChild(overlay);\n    if (child) {\n        const content = document.createElement('div');\n        content.classList.add('dialog_content');\n        content.appendChild(child);\n        overlay.appendChild(content);\n        content.onclick = (e) => {\n            e.stopPropagation();\n        };\n    }\n\n    const originOverflow = getComputedStyle(appendTo).overflow;\n    appendTo.style.overflow = 'hidden';\n\n    appendTo.appendChild(dialog);\n    const close = () => {\n        beforeClose();\n        dialog.remove();\n        appendTo.style.overflow = originOverflow;\n    };\n    dialog.onclick = close;\n    zindex += 1;\n\n    return { dialog, close };\n};\n\n/**\n * 创建一个带 label 的输入框\n *\n * @param {string} label - The label for the input item.\n * @param {object} options - The options for the input item.\n * @param {string} options.type - The type of the input.\n * @param {string} options.value - The initial value of the input.\n * @param {number} options.max - The maximum value allowed for the input.\n * @param {number} options.min - The minimum value allowed for the input.\n * @return {object} An object containing the input item, the input element, and an error tip function.\n */\nexport const createInputItem = (label, options) => {\n    options.type || (options.type = 'text');\n    options.value || (options.value = '');\n\n    const inputItem = document.createElement('div');\n    inputItem.classList.add('input_item');\n\n    if (label) {\n        const inputLabel = document.createElement('span');\n        inputLabel.classList.add('input_label');\n        inputLabel.innerText = label;\n        inputItem.appendChild(inputLabel);\n    }\n\n    const inputInput = document.createElement('div');\n    inputInput.classList.add('input_input');\n    const input = document.createElement('input');\n    for (const key in options) {\n        input.setAttribute(key, options[key]);\n    }\n    if (options.max || options.min) {\n        input.addEventListener('blur', () => {\n            if (options.max && options.max <= input.value) {\n                input.value = options.max;\n            }\n            if (options.min && options.min >= input.value) {\n                input.value = options.min;\n            }\n        });\n    }\n\n    inputInput.appendChild(input);\n    inputItem.appendChild(inputInput);\n\n    input.onfocus = () => {\n        inputInput.classList.add('focus');\n    };\n    input.onblur = () => {\n        inputInput.classList.remove('focus');\n    };\n\n    const errorTip = (msg) => {\n        if (inputInput.classList.contains('error')) {\n            inputInput.querySelector('.error_tip').innerText = msg;\n        } else {\n            const errorTip = document.createElement('span');\n            errorTip.classList.add('error_tip');\n            errorTip.innerText = msg;\n            inputInput.appendChild(errorTip);\n        }\n\n        inputInput.classList.add('error');\n\n        const removeError = () => {\n            inputInput.classList.remove('error');\n            errorTip.remove();\n        };\n        return { removeError };\n    };\n\n    return { item: inputItem, input, errorTip };\n};\n\n/**\n * 创建具有指定行数和列数的表格\n *\n * @param {number} row - The number of rows for the table (optional, default: 3)\n * @param {number} col - The number of columns for the table (optional, default: 3)\n * @return {Promise} A promise that resolves with an object containing the row and column values when the table creation is confirmed, or rejects if the dialog is closed without confirmation.\n */\nexport const showTableCreator = async (row = 3, col = 3) => {\n    const box = document.createElement('div');\n    box.classList.add('create_box');\n    const inputContent = document.createElement('div');\n    inputContent.classList.add('create_input_content');\n\n    const {\n        item: rowItem,\n        input: rowInput,\n        errorTip: rowErrorTip,\n    } = createInputItem('row', { type: 'number', value: row, max: 99 });\n    const {\n        item: colItem,\n        input: colInput,\n        errorTip: colErrorTip,\n    } = createInputItem('col', { type: 'number', value: col, max: 99 });\n\n    inputContent.appendChild(rowItem);\n    inputContent.appendChild(colItem);\n    box.appendChild(inputContent);\n\n    const control = document.createElement('div');\n    control.classList.add('create_control');\n\n    const confirmBtn = document.createElement('button');\n    confirmBtn.classList.add('create_control_btn', 'confirm');\n    confirmBtn.innerText = 'Confirm';\n\n    const cancelBtn = document.createElement('button');\n    cancelBtn.classList.add('create_control_btn', 'cancel');\n    cancelBtn.innerText = 'Cancel';\n\n    control.appendChild(confirmBtn);\n    control.appendChild(cancelBtn);\n    box.appendChild(control);\n\n    return new Promise((resolve, reject) => {\n        const { close } = dialog({ child: box, beforeClose: reject });\n\n        confirmBtn.onclick = async () => {\n            const row = Number(rowInput.value);\n            const col = Number(colInput.value);\n\n            if (isNaN(row) || row <= 0) {\n                return rowErrorTip('Invalid number');\n            }\n            if (isNaN(col) || col <= 0) {\n                return colErrorTip('Invalid number');\n            }\n            resolve({ row, col });\n            close();\n        };\n        cancelBtn.onclick = () => {\n            close();\n        };\n    });\n};\n\n/**\n * 显示表格选择器\n */\nexport const showTableSelector = (customButton) => {\n    const selectDom = document.createElement('div');\n    selectDom.classList.add('create_select');\n\n    const selectBlock = document.createElement('div');\n    selectBlock.classList.add('create_select_block');\n\n    for (let r = 0; r < 8; r++) {\n        for (let c = 0; c < 8; c++) {\n            const selectItem = document.createElement('div');\n            selectItem.classList.add('create_select_block_item');\n            selectItem.dataset.row = r + 1;\n            selectItem.dataset.col = c + 1;\n            selectBlock.appendChild(selectItem);\n        }\n    }\n\n    const selectCustom = document.createElement('div');\n    selectCustom.classList.add('create_select_custom');\n    selectCustom.innerText = customButton || '自定义行列数';\n\n    selectDom.appendChild(selectBlock);\n    selectDom.appendChild(selectCustom);\n\n    const sendTableData = ({ row, col }) => {\n        selectDom.dispatchEvent(new CustomEvent(CREATE_TABLE, { detail: { row: Number(row), col: Number(col) } }));\n    };\n    const updateSelectBlockItems = () => {\n        const { row, col } = selectDom.dataset;\n        [].forEach.call(selectBlock.querySelectorAll('.active'), (item) => {\n            item.classList.remove('active');\n        });\n        if (!row || !col) return;\n        const childs = Array.from(selectBlock.children);\n        for (let i = 0; i < childs.length; i++) {\n            if (childs[i].dataset.row > row && childs[i].dataset.col > col) {\n                return;\n            }\n            if (childs[i].dataset.row <= row && childs[i].dataset.col <= col) {\n                childs[i].classList.add('active');\n            } else {\n                childs[i].classList.remove('active');\n            }\n        }\n    };\n    selectBlock.addEventListener('mousemove', (e) => {\n        const { row, col } = e.target.dataset;\n        if (!row || !col) return;\n        selectDom.dataset.row = row;\n        selectDom.dataset.col = col;\n        updateSelectBlockItems();\n    });\n    selectBlock.addEventListener('mouseleave', (e) => {\n        selectDom.removeAttribute('data-row');\n        selectDom.removeAttribute('data-col');\n        updateSelectBlockItems();\n    });\n    selectBlock.addEventListener('click', () => {\n        const { row, col } = selectDom.dataset;\n        if (!row || !col) return;\n        sendTableData({ row, col });\n    });\n\n    selectCustom.addEventListener('click', () => {\n        showTableCreator().then(({ row, col }) => {\n            sendTableData({ row, col });\n        });\n    });\n\n    return selectDom;\n};\n\nexport function css(domNode, rules) {\n    if (typeof rules === 'object') {\n        for (let prop in rules) {\n            domNode.style[prop] = rules[prop];\n        }\n    }\n}\n\nexport function getRelativeRect(targetRect, container) {\n    let containerRect = container.getBoundingClientRect();\n\n    return {\n        x: targetRect.x - containerRect.x - container.scrollLeft,\n        y: targetRect.y - containerRect.y - container.scrollTop,\n        x1: targetRect.x - containerRect.x - container.scrollLeft + targetRect.width,\n        y1: targetRect.y - containerRect.y - container.scrollTop + targetRect.height,\n        width: targetRect.width,\n        height: targetRect.height,\n    };\n}\n\nexport function computeBoundaryFromRects(startRect, endRect) {\n    let x = Math.min(startRect.x, endRect.x, startRect.x + startRect.width - 1, endRect.x + endRect.width - 1);\n    let x1 = Math.max(startRect.x, endRect.x, startRect.x + startRect.width - 1, endRect.x + endRect.width - 1);\n    let y = Math.min(startRect.y, endRect.y, startRect.y + startRect.height - 1, endRect.y + endRect.height - 1);\n    let y1 = Math.max(startRect.y, endRect.y, startRect.y + startRect.height - 1, endRect.y + endRect.height - 1);\n\n    let width = x1 - x;\n    let height = y1 - y;\n\n    return { x, x1, y, y1, width, height };\n}\n\nexport function isString(val) {\n    return typeof val === 'string';\n}\nexport function isFunction(val) {\n    return typeof val === 'function';\n}\nexport function isUndefined(val) {\n    return val === undefined;\n}\nexport function isArray(val) {\n    return Array.isArray(val);\n}\n","import { css, isFunction, isString, isArray } from '../utils';\nimport { moduleName } from '../assets/const';\n\nconst MENU_ITEMS_DEFAULT = {\n    insertColumnLeft: {\n        text: '在左侧插入一列',\n        handler() {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.appendCol();\n            tableModule.hideTableTools();\n        },\n    },\n    insertColumnRight: {\n        text: '在右侧插入一列',\n        handler() {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.appendCol(true);\n            tableModule.hideTableTools();\n        },\n    },\n    insertRowTop: {\n        text: '在上方插入一行',\n        handler() {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.appendRow();\n            tableModule.hideTableTools();\n        },\n    },\n    insertRowBottom: {\n        text: '在下方插入一行',\n        groupEnd: true,\n        handler() {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.appendRow(true);\n            tableModule.hideTableTools();\n        },\n    },\n    removeCol: {\n        text: '删除所在列',\n        handler() {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.removeCol();\n            tableModule.hideTableTools();\n        },\n    },\n    removeRow: {\n        text: '删除所在行',\n        handler() {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.removeRow();\n            tableModule.hideTableTools();\n        },\n    },\n    removeTable: {\n        text: '删除表格',\n        groupEnd: true,\n        handler() {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.removeTable();\n            tableModule.hideTableTools();\n        },\n    },\n    mergeCell: {\n        text: '合并单元格',\n        groupEnd: true,\n        handler() {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.mergeCells();\n            tableModule.hideTableTools();\n        },\n    },\n    setBackgroundColor: {\n        text: '设置背景颜色',\n        isColorChoose: true,\n        handler(color) {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.setStyle({ backgroundColor: color }, this.selectedTds);\n        },\n    },\n    clearBackgroundColor: {\n        text: '清除背景颜色',\n        handler() {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.setStyle({ backgroundColor: null }, this.selectedTds);\n        },\n    },\n    setBorderColor: {\n        text: '设置边框颜色',\n        isColorChoose: true,\n        handler(color) {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.setStyle({ borderColor: color }, this.selectedTds);\n        },\n    },\n    clearBorderColor: {\n        text: '清除边框颜色',\n        handler() {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.setStyle({ borderColor: null }, this.selectedTds);\n        },\n    },\n};\nconst MENU_MIN_HEIHGT = 150;\n\n/*\n    options = {\n        items: {\n           functionName: {\n                text: '显示文字',\n                handle() {},    // 触发事件\n                iconSrc: string,    // icon url\n                groupEnd: boolean, // 是否显示分隔线\n                subTitle: '显示子标题',\n            }\n        }\n    }\n*/\nexport class TableOperationMenu {\n    constructor(params, quill, options = {}) {\n        this.table = params.table;\n        this.quill = quill;\n        this.options = options;\n        const tableModule = this.quill.getModule(moduleName.table);\n        this.tableSelection = tableModule.tableSelection;\n        this.menuItems = {};\n        this.mergeMenuItems();\n\n        this.boundary = this.tableSelection.boundary;\n        this.selectedTds = this.tableSelection.selectedTds;\n\n        this.destroyHandler = this.destroy.bind(this);\n        this.menuInitial(params);\n\n        document.addEventListener('click', this.destroyHandler, false);\n    }\n\n    mergeMenuItems() {\n        if (this.options?.replaceItems) {\n            this.menuItems = this.options?.items ?? {};\n        } else if (this.options?.modifyItems) {\n            this.menuItems = this.modifyMenuItems(this.options?.items ?? {});\n        } else {\n            this.menuItems = MENU_ITEMS_DEFAULT;\n        }\n    }\n    /**\n     * Override the attributes of the context menu items\n     */\n    modifyMenuItems() {\n        if (!this.options?.modifyItems) return MENU_ITEMS_DEFAULT;\n        const newOptionsItems = { ...MENU_ITEMS_DEFAULT };\n        for (const [item, itemNewOptions] of Object.entries(this.options?.items)) {\n            newOptionsItems[item] = Object.assign({ ...newOptionsItems[item] }, itemNewOptions);\n        }\n        return newOptionsItems;\n    }\n\n    setMenuPosition({ left, top }) {\n        const containerRect = this.quill.container.getBoundingClientRect();\n        const menuRect = this.domNode.getBoundingClientRect();\n        let resLeft = left - containerRect.left;\n        let resTop = top - containerRect.top;\n        if (resLeft + menuRect.width > containerRect.width) {\n            resLeft = containerRect.width - menuRect.width;\n        }\n        if (resTop + menuRect.height > containerRect.height) {\n            resTop = containerRect.height - menuRect.height;\n        }\n        Object.assign(this.domNode.style, {\n            left: `${resLeft}px`,\n            top: `${resTop}px`,\n        });\n    }\n\n    menuInitial({ table, row, cell, left, top }) {\n        this.domNode = document.createElement('div');\n        this.domNode.classList.add('ql-table-operation-menu');\n\n        css(this.domNode, {\n            position: 'absolute',\n            'min-height': `${MENU_MIN_HEIHGT}px`,\n        });\n\n        for (const [name, item] of Object.entries(this.menuItems)) {\n            if (item.subTitle) {\n                this.domNode.appendChild(subTitleCreator(item.subTitle));\n            }\n\n            this.domNode.appendChild(this.menuItemCreator(Object.assign({}, MENU_ITEMS_DEFAULT[name], item)));\n\n            if (item.groupEnd) {\n                this.domNode.appendChild(dividingCreator());\n            }\n        }\n\n        this.quill.container.appendChild(this.domNode);\n        this.setMenuPosition({ left, top });\n        // create dividing line\n        function dividingCreator() {\n            const dividing = document.createElement('div');\n            dividing.classList.add('ql-table-operation-menu-dividing');\n            return dividing;\n        }\n\n        // create subtitle for menu\n        function subTitleCreator(title) {\n            const subTitle = document.createElement('div');\n            subTitle.classList.add('ql-table-operation-menu-subtitle');\n            subTitle.innerText = title;\n            return subTitle;\n        }\n    }\n\n    destroy() {\n        this.domNode.remove();\n        document.removeEventListener('click', this.destroyHandler, false);\n        return null;\n    }\n\n    menuItemCreator({ text, iconSrc, handler, isColorChoose }) {\n        const node = document.createElement(isColorChoose ? 'label' : 'div');\n        node.classList.add('ql-table-operation-menu-item');\n\n        if (iconSrc) {\n            const iconSpan = document.createElement('span');\n            iconSpan.classList.add('ql-table-operation-menu-icon');\n            iconSpan.innerHTML = iconSrc;\n            node.appendChild(iconSpan);\n        }\n\n        if (isString(text)) {\n            const textSpan = document.createElement('span');\n            textSpan.classList.add('ql-table-operation-menu-text');\n            textSpan.innerText = text;\n            node.appendChild(textSpan);\n        } else if (isFunction(text)) {\n            let nodes = text.call(this);\n            if (!isArray(nodes)) {\n                nodes = [nodes];\n            }\n            nodes.map((sub) => node.appendChild(sub));\n        }\n\n        // color choose handler will trigger when the color input event\n        if (isColorChoose) {\n            const input = document.createElement('input');\n            input.type = 'color';\n            Object.assign(input.style, {\n                width: 0,\n                height: 0,\n                padding: 0,\n                border: 0,\n            });\n            if (isFunction(handler)) {\n                node.addEventListener('click', (e) => e.stopPropagation());\n                input.addEventListener(\n                    'input',\n                    () => {\n                        handler.call(this, input.value);\n                    },\n                    false\n                );\n            }\n            node.appendChild(input);\n        } else {\n            isFunction(handler) && node.addEventListener('click', handler.bind(this), false);\n        }\n        return node;\n    }\n}\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableBodyFormat extends Container {\r\n    optimize() {\r\n        super.optimize();\r\n        const next = this.next;\r\n        if (\r\n            next != null &&\r\n            next.prev === this &&\r\n            next.statics.blotName === this.statics.blotName &&\r\n            next.domNode.tagName === this.domNode.tagName\r\n        ) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n\r\n    deleteAt(index, length) {\r\n        if (index === 0 && length === this.length()) {\r\n            this.parent.remove();\r\n        }\r\n        this.children.forEachAt(index, length, function (child, offset, length) {\r\n            child.deleteAt(offset, length);\r\n        });\r\n    }\r\n}\r\nTableBodyFormat.blotName = blotName.tableBody;\r\nTableBodyFormat.tagName = 'tbody';\r\nTableBodyFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport { TableBodyFormat };\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass ContainBlot extends Container {\r\n    static create() {\r\n        const node = super.create();\r\n        return node;\r\n    }\r\n\r\n    insertBefore(blot, ref) {\r\n        if (blot.statics.blotName == this.statics.blotName) {\r\n            super.insertBefore(blot.children.head, ref);\r\n        } else {\r\n            super.insertBefore(blot, ref);\r\n        }\r\n    }\r\n\r\n    format(name, value) {\r\n        this.children.tail.format(name, value);\r\n    }\r\n\r\n    replace(target) {\r\n        if (target.statics.blotName !== this.statics.blotName) {\r\n            const item = Parchment.create(this.statics.defaultChild);\r\n            target.moveChildren(item);\r\n            this.appendChild(item);\r\n        }\r\n        if (target.parent == null) return;\r\n        super.replace(target);\r\n    }\r\n}\r\n\r\nContainBlot.blotName = blotName.contain;\r\nContainBlot.tagName = 'contain';\r\nContainBlot.scope = Parchment.Scope.BLOCK_BLOT;\r\nContainBlot.defaultChild = 'block';\r\n\r\nexport { ContainBlot };\r\n","import Quill from 'quill';\nimport { ContainBlot } from '../blot/contain';\nimport { blotName } from '../assets/const';\nconst Parchment = Quill.import('parchment');\n\nclass TableCellInnerFormat extends ContainBlot {\n    static create(value) {\n        const { tableId, rowId, colId, rowspan, colspan, style } = value;\n        const node = super.create();\n        node.dataset.tableId = tableId;\n        node.dataset.rowId = rowId;\n        node.dataset.colId = colId;\n        node.dataset.rowspan = rowspan || 1;\n        node.dataset.colspan = colspan || 1;\n        node._style = style;\n        return node;\n    }\n\n    // 仅 Block 存在 cache, 存在 cache 时不会获取最新 delta, cache 还会保存父级 format(bubbleFormats 函数), 需要清除以获取最新 delta\n    clearDeltaCache() {\n        this.children.forEach((child) => {\n            child.cache = {};\n        });\n    }\n\n    get rowId() {\n        return this.domNode.dataset.rowId;\n    }\n    get colId() {\n        return this.domNode.dataset.colId;\n    }\n    get rowspan() {\n        return Number(this.domNode.dataset.rowspan);\n    }\n    set rowspan(value) {\n        this.parent && (this.parent.rowspan = value);\n        this.domNode.dataset.rowspan = value;\n        this.clearDeltaCache();\n    }\n    get colspan() {\n        return Number(this.domNode.dataset.colspan);\n    }\n    set colspan(value) {\n        this.parent && (this.parent.colspan = value);\n        this.domNode.dataset.colspan = value;\n        this.clearDeltaCache();\n    }\n    set style(value) {\n        this.parent.style = value;\n        this.domNode._style = this.parent.style;\n        this.clearDeltaCache();\n    }\n\n    replace(target) {\n        if (target.statics.blotName !== this.statics.blotName) {\n            const cloneTarget = target.clone();\n            target.moveChildren(cloneTarget);\n            this.appendChild(cloneTarget);\n            target.parent.insertBefore(this, target.next);\n            target.remove();\n        } else {\n            super.replace(target);\n        }\n    }\n\n    format(name, value) {\n        super.format(name, value);\n        this.clearDeltaCache();\n    }\n\n    formats() {\n        const { tableId, rowId, colId, rowspan, colspan } = this.domNode.dataset;\n        return {\n            [this.statics.blotName]: {\n                tableId,\n                rowId,\n                colId,\n                rowspan,\n                colspan,\n                style: this.domNode._style,\n            },\n        };\n    }\n\n    optimize() {\n        super.optimize();\n\n        const parent = this.parent;\n        // 父级非表格，则将当前 blot 放入表格中\n        const { tableId, colId, rowId, rowspan, colspan } = this.domNode.dataset;\n        if (parent != null && parent.statics.blotName != blotName.tableCell) {\n            const mark = Parchment.create('block');\n\n            this.parent.insertBefore(mark, this.next);\n            const tableWrapper = Parchment.create(blotName.tableWrapper, tableId);\n            const table = Parchment.create(blotName.table, tableId);\n            const tableBody = Parchment.create(blotName.tableBody);\n            const tr = Parchment.create(blotName.tableRow, rowId);\n            const td = Parchment.create(blotName.tableCell, {\n                tableId,\n                rowId,\n                colId,\n                rowspan,\n                colspan,\n                style: this.domNode._style,\n            });\n\n            td.appendChild(this);\n            tr.appendChild(td);\n            tableBody.appendChild(tr);\n            table.appendChild(tableBody);\n            tableWrapper.appendChild(table);\n\n            tableWrapper.replace(mark);\n        }\n\n        const next = this.next;\n        // cell 下有多个 cellInner 全部合并\n        if (next != null && next.prev === this && next.statics.blotName === this.statics.blotName) {\n            next.moveChildren(this);\n            next.remove();\n        }\n    }\n}\n\nTableCellInnerFormat.blotName = blotName.tableCellInner;\nTableCellInnerFormat.tagName = 'p';\nTableCellInnerFormat.className = 'ql-table-cell-inner';\n\nexport { TableCellInnerFormat };\n","import Quill from 'quill';\nimport { blotName } from '../assets/const';\nimport { TableCellInnerFormat } from './TableCellInnerFormat';\nconst Parchment = Quill.import('parchment');\nconst Container = Quill.import('blots/container');\n\nclass TableCellFormat extends Container {\n    static create(value) {\n        const { rowId, colId, rowspan, colspan, style } = value;\n        const node = super.create();\n        node.dataset.rowId = rowId;\n        node.dataset.colId = colId;\n        node.setAttribute('rowspan', rowspan || 1);\n        node.setAttribute('colspan', colspan || 1);\n        node.style.cssText = style;\n        return node;\n    }\n\n    get rowId() {\n        return this.domNode.dataset.rowId;\n    }\n    get colId() {\n        return this.domNode.dataset.colId;\n    }\n    get rowspan() {\n        return Number(this.domNode.getAttribute('rowspan'));\n    }\n    set rowspan(value) {\n        this.domNode.setAttribute('rowspan', value);\n    }\n    get colspan() {\n        return Number(this.domNode.getAttribute('colspan'));\n    }\n    set colspan(value) {\n        this.domNode.setAttribute('colspan', value);\n    }\n    get style() {\n        return this.domNode.style.cssText;\n    }\n    set style(value) {\n        Object.assign(this.domNode.style, value);\n    }\n\n    getCellInner() {\n        return this.descendants(TableCellInnerFormat)[0];\n    }\n\n    optimize() {\n        super.optimize();\n        const { colId, rowId } = this.domNode.dataset;\n        const next = this.next;\n        if (\n            next != null &&\n            next.prev === this &&\n            next.statics.blotName === this.statics.blotName &&\n            next.domNode.dataset.rowId === rowId &&\n            next.domNode.dataset.colId === colId\n        ) {\n            next.moveChildren(this);\n            next.remove();\n        }\n    }\n\n    deleteAt(index, length) {\n        if (index === 0 && length === this.length()) {\n            const cell = this.next || this.prev;\n            const cellInner = cell && cell.getCellInner();\n            if (cellInner) {\n                cellInner.colspan += this.colspan;\n            }\n            return this.remove();\n        }\n        this.children.forEachAt(index, length, function (child, offset, length) {\n            child.deleteAt(offset, length);\n        });\n    }\n}\n\nTableCellFormat.blotName = blotName.tableCell;\nTableCellFormat.tagName = 'td';\nTableCellFormat.className = 'ql-table-cell';\nTableCellFormat.scope = Parchment.Scope.BLOCK_BLOT;\n\nexport { TableCellFormat };\n","import Quill from 'quill';\nimport { blotName } from '../assets/const';\nconst Parchment = Quill.import('parchment');\nconst BlockEmbed = Quill.import('blots/block/embed');\nconst Block = Quill.import('blots/block');\nconst Container = Quill.import('blots/container');\nimport { ContainBlot } from '../blot/contain';\n\nclass TableColFormat extends ContainBlot {\n    static create(value) {\n        const { width, tableId, colId, full } = value;\n        const node = super.create();\n        node.setAttribute('width', `${parseFloat(width)}${full ? '%' : 'px'}`);\n        full && node.setAttribute('data-full', full);\n        node.dataset.tableId = tableId;\n        node.dataset.colId = colId;\n        node.setAttribute('contenteditable', false);\n        return node;\n    }\n\n    get width() {\n        const width = this.domNode.getAttribute('width');\n        return parseFloat(width);\n    }\n    set width(value) {\n        const width = parseFloat(value);\n        return this.domNode.setAttribute('width', `${width}${this.full ? '%' : 'px'}`);\n    }\n\n    get colId() {\n        return this.domNode.dataset.colId;\n    }\n\n    get full() {\n        return this.domNode.hasAttribute('data-full');\n    }\n\n    formats() {\n        const { tableId, colId } = this.domNode.dataset;\n        return {\n            [this.statics.blotName]: {\n                tableId,\n                colId,\n                width: this.domNode.getAttribute('width'),\n                full: this.domNode.hasAttribute('data-full'),\n            },\n        };\n    }\n\n    optimize() {\n        super.optimize();\n\n        const parent = this.parent;\n        if (parent != null && parent.statics.blotName != blotName.tableColGroup) {\n            const mark = Parchment.create('block');\n            this.parent.insertBefore(mark, this.next);\n\n            const tableWrapper = Parchment.create(blotName.tableWrapper, this.domNode.dataset.tableId);\n            const table = Parchment.create(blotName.table, this.domNode.dataset.tableId);\n\n            this.full && (table.full = true);\n\n            const tableColgroup = Parchment.create(blotName.tableColGroup);\n\n            tableColgroup.appendChild(this);\n            table.appendChild(tableColgroup);\n            tableWrapper.appendChild(table);\n\n            tableWrapper.replace(mark);\n        }\n        const next = this.next;\n        const { tableId: ttableId, colId: tcolId } = this.domNode.dataset;\n        if (\n            next != null &&\n            next.statics.blotName === this.statics.blotName &&\n            next.domNode.tagName === this.domNode.tagName &&\n            next.domNode.dataset.tableId === ttableId &&\n            next.domNode.dataset.colId === tcolId\n        ) {\n            next.moveChildren(this);\n            next.remove();\n        }\n    }\n}\nTableColFormat.blotName = blotName.tableCol;\nTableColFormat.tagName = 'col';\nTableColFormat.scope = Parchment.Scope.BLOCK_BLOT;\n\nexport { TableColFormat };\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableColgroupFormat extends Container {\r\n    optimize() {\r\n        super.optimize();\r\n        const next = this.next;\r\n        if (\r\n            next != null &&\r\n            next.prev === this &&\r\n            next.statics.blotName === this.statics.blotName &&\r\n            next.domNode.tagName === this.domNode.tagName\r\n        ) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n\r\n    findCol(index) {\r\n        const next = this.children.iterator();\r\n        let i = 0;\r\n        let cur;\r\n        while ((cur = next())) {\r\n            if (i === index) {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        return cur;\r\n    }\r\n}\r\nTableColgroupFormat.blotName = blotName.tableColGroup;\r\nTableColgroupFormat.tagName = 'colgroup';\r\nTableColgroupFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport { TableColgroupFormat };\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nimport { TableCellInnerFormat } from './TableCellInnerFormat';\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableRowFormat extends Container {\r\n    static create(value) {\r\n        const node = super.create();\r\n        node.dataset.rowId = value;\r\n        return node;\r\n    }\r\n\r\n    optimize() {\r\n        super.optimize();\r\n        const next = this.next;\r\n        if (\r\n            next != null &&\r\n            next.prev === this &&\r\n            next.statics.blotName === this.statics.blotName &&\r\n            next.domNode.dataset.rowId === this.domNode.dataset.rowId\r\n        ) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n\r\n    get rowId() {\r\n        return this.domNode.dataset.rowId;\r\n    }\r\n\r\n    foreachCellInner(func) {\r\n        const next = this.children.iterator();\r\n        let i = 0;\r\n        let cur;\r\n        while ((cur = next())) {\r\n            const [tableCell] = cur.descendants(TableCellInnerFormat);\r\n            if (func(tableCell, i++)) break;\r\n        }\r\n    }\r\n}\r\n\r\nTableRowFormat.blotName = blotName.tableRow;\r\nTableRowFormat.tagName = 'tr';\r\nTableRowFormat.className = 'ql-table-row';\r\nTableRowFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport { TableRowFormat };\r\n","import Quill from 'quill';\nimport { blotName } from '../assets/const';\nimport { TableRowFormat } from './TableRowFormat';\nimport { TableColFormat } from './TableColFormat';\nconst Container = Quill.import('blots/container');\nconst Parchment = Quill.import('parchment');\n\nclass TableFormat extends Container {\n    constructor(domNode, value) {\n        super(domNode, value);\n\n        this.formatTableWidth();\n    }\n\n    static create(value) {\n        const node = super.create();\n\n        node.dataset.tableId = value;\n        node.classList.add('ql-table');\n        node.setAttribute('cellpadding', 0);\n        node.setAttribute('cellspacing', 0);\n\n        return node;\n    }\n\n    colWidthFillTable() {\n        if (this.full) return;\n        const colgroup = this.children.head;\n        if (!colgroup || colgroup.statics.blotName !== blotName.tableColGroup) return;\n        const colsWidth = colgroup.children.reduce((sum, col) => col.width + sum, 0);\n        if (colsWidth === 0 || isNaN(colsWidth) || this.full) return null;\n        this.domNode.style.width = colsWidth + 'px';\n        return colsWidth;\n    }\n\n    formatTableWidth() {\n        setTimeout(() => {\n            this.colWidthFillTable();\n        }, 0);\n    }\n\n    get tableId() {\n        return this.domNode.dataset.tableId;\n    }\n    get full() {\n        return this.domNode.hasAttribute('data-full');\n    }\n    set full(value) {\n        this.domNode[value ? 'setAttribute' : 'removeAttribute']('data-full', '');\n    }\n\n    getRows() {\n        return this.descendants(TableRowFormat);\n    }\n    getRowIds() {\n        return this.getRows().map((d) => d.rowId);\n    }\n\n    getCols() {\n        return this.descendants(TableColFormat);\n    }\n    getColIds() {\n        return this.getCols().map((d) => d.colId);\n    }\n\n    optimize() {\n        super.optimize();\n        let next = this.next;\n        if (\n            next != null &&\n            next.prev === this &&\n            next.statics.blotName === this.statics.blotName &&\n            next.domNode.tagName === this.domNode.tagName &&\n            next.domNode.dataset.tableId === this.domNode.dataset.tableId\n        ) {\n            next.moveChildren(this);\n            next.remove();\n        }\n    }\n}\n\nTableFormat.blotName = blotName.table;\nTableFormat.tagName = 'table';\nTableFormat.scope = Parchment.Scope.BLOCK_BLOT;\n\nexport { TableFormat };\n","import Quill from 'quill';\nimport { blotName } from '../assets/const';\nconst Container = Quill.import('blots/container');\nconst Parchment = Quill.import('parchment');\n\nclass TableWrapperFormat extends Container {\n    static create(value) {\n        const node = super.create();\n\n        node.dataset.tableId = value;\n\n        node.addEventListener(\n            'dragstart',\n            (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n            },\n            true\n        );\n        // 不允许拖拽进 table\n        node.ondrop = (e) => {\n            e.preventDefault();\n        };\n        // 修改拖拽进入时的鼠标样式\n        node.ondragover = (e) => {\n            e.preventDefault();\n            e.dataTransfer.dropEffect = 'none';\n        };\n        return node;\n    }\n\n    get tableId() {\n        return this.domNode.dataset.tableId;\n    }\n\n    insertBefore(blot, ref) {\n        if (blot.statics.blotName == this.statics.blotName) {\n            // 合并\n            super.insertBefore(blot.children.head, ref);\n        } else if (this.statics.allowedChildren.find((child) => child.blotName === blot.statics.blotName)) {\n            // 允许子 blot\n            super.insertBefore(blot, ref);\n        } else {\n            // 非允许子 blot, ref 为 null 是插入头, 否则插入尾\n            if (ref) {\n                this.prev ? this.prev.insertBefore(blot, null) : this.parent.insertBefore(blot, this);\n            } else {\n                this.next ? this.next.insertBefore(blot, ref) : this.parent.appendChild(blot);\n            }\n        }\n    }\n\n    optimize() {\n        super.optimize();\n        let next = this.next;\n        if (\n            next != null &&\n            next.prev === this &&\n            next.statics.blotName === this.statics.blotName &&\n            next.domNode.tagName === this.domNode.tagName &&\n            next.domNode.dataset.tableId === this.domNode.dataset.tableId\n        ) {\n            next.moveChildren(this);\n            next.remove();\n        }\n    }\n\n    deleteAt(index, length) {\n        super.deleteAt(index, length);\n        // 删除 table 时隐藏当前 table 的 tooltip\n        document.querySelector(`.ql-table-tooltip[data-table-id=\"${this.tableId}\"]`)?.classList?.add('ql-hidden');\n    }\n}\nTableWrapperFormat.blotName = blotName.tableWrapper;\nTableWrapperFormat.tagName = 'p';\nTableWrapperFormat.className = 'ql-table-wrapper';\nTableWrapperFormat.scope = Parchment.Scope.BLOCK_BLOT;\n\nexport { TableWrapperFormat };\n","import Quill from 'quill';\nimport { blotName } from '../../assets/const';\nconst Parchment = Quill.import('parchment');\nconst ListItem = Quill.import('formats/list/item');\n\nclass ListItemRewrite extends ListItem {\n    replaceWith(name, value) {\n        this.parent.isolate(this.offset(this.parent), this.length());\n        if (name === this.parent.statics.blotName) {\n            this.parent.replaceWith(name, value);\n            return this;\n        } else {\n            if (name === blotName.tableCellInner) {\n                let replacement = typeof name === 'string' ? Parchment.create(name, value) : name;\n                replacement.replace(this.parent);\n                this.attributes.copy(replacement);\n                return replacement;\n            }\n            return super.replaceWith(name, value);\n        }\n    }\n}\nexport { ListItemRewrite };\n","// 以 ql-better-table 的 table-selection.js 为修改基础\n\nimport Quill from 'quill';\nimport { TableCellFormat } from '../format';\nimport { css, getRelativeRect, computeBoundaryFromRects } from '../utils';\n\nlet PRIMARY_COLOR = '#0589f3';\nconst ERROR_LIMIT = 2;\n\n/*\n\toptions = {\n\t\tprimaryColor: Hex color code\n\t}\n*/\nexport class TableSelection {\n    constructor(table, quill, options = {}) {\n        if (!table) return null;\n        this.table = table;\n        this.quill = quill;\n        this.options = options;\n        this.optionsMerge();\n\n        this.boundary = {};\n        // 选中的 cell\n        this.selectedTds = [];\n        this.dragging = false;\n        this.selectingHandler = this.mouseDownHandler.bind(this);\n        this.cellSelect = null; // selection 显示边框\n        this.scrollHandler = [];\n        this.helpLinesInitial();\n\n        const resizeObserver = new ResizeObserver((entries) => {\n            this.clearSelection();\n        });\n        resizeObserver.observe(this.quill.root);\n\n        this.quill.root.addEventListener('mousedown', this.selectingHandler, false);\n        this.closeHandler = this.clearSelection.bind(this);\n        this.quill.on(Quill.events.TEXT_CHANGE, this.closeHandler);\n    }\n\n    optionsMerge() {\n        this.options?.primaryColor && (PRIMARY_COLOR = this.options.primaryColor);\n    }\n\n    addScrollEvent(dom, handle) {\n        dom.addEventListener('scroll', handle);\n        this.scrollHandler.push([dom, handle]);\n    }\n\n    clearScrollEvent() {\n        for (let i = 0; i < this.scrollHandler.length; i++) {\n            let [dom, handle] = this.scrollHandler[i];\n            dom.removeEventListener('scroll', handle);\n        }\n        this.scrollHandler = [];\n    }\n\n    // 初始化边框 dom\n    helpLinesInitial() {\n        this.cellSelect = this.quill.addContainer('ql-table-selection_line');\n        css(this.cellSelect, {\n            'border-color': PRIMARY_COLOR,\n        });\n    }\n\n    mouseDownHandler(e) {\n        if (e.button !== 0 || !e.target.closest('.ql-table')) return;\n        const startTableId = e.target.closest('.ql-table').dataset.tableId;\n\n        const mouseMoveHandler = (e) => {\n            // 根据 tableId 判断是否跨表格，跨表格不计算\n            if (\n                e.button !== 0 ||\n                !e.target.closest('.ql-table') ||\n                e.target.closest('.ql-table').dataset.tableId !== startTableId\n            )\n                return;\n\n            const endTd = e.target.closest('td[data-row-id]');\n            const endTdRect = getRelativeRect(endTd.getBoundingClientRect(), this.quill.root.parentNode);\n            this.boundary = computeBoundaryFromRects(startTdRect, endTdRect);\n            this.correctBoundary();\n            this.selectedTds = this.computeSelectedTds();\n            this.repositionHelpLines();\n\n            if (startTd !== endTd) {\n                this.quill.blur();\n            }\n        };\n\n        const mouseUpHandler = (e) => {\n            document.body.removeEventListener('mousemove', mouseMoveHandler, false);\n            document.body.removeEventListener('mouseup', mouseUpHandler, false);\n            this.dragging = false;\n        };\n\n        document.body.addEventListener('mousemove', mouseMoveHandler, false);\n        document.body.addEventListener('mouseup', mouseUpHandler, false);\n\n        const startTd = e.target.closest('td[data-row-id]');\n        const startTdRect = getRelativeRect(startTd.getBoundingClientRect(), this.quill.root.parentNode);\n        this.dragging = true;\n        this.boundary = computeBoundaryFromRects(startTdRect, startTdRect);\n        this.correctBoundary();\n        this.selectedTds = this.computeSelectedTds();\n        this.repositionHelpLines();\n\n        this.addScrollEvent(this.table.parentNode, () => {\n            // 处理 boundary, 使滚动时 left 等跟随滚动\n            this.repositionHelpLines();\n        });\n\n        const srcollHide = () => {\n            this.clearSelection();\n            this.quill.root.removeEventListener('scroll', srcollHide);\n        };\n        this.quill.root.addEventListener('scroll', srcollHide);\n    }\n\n    computeSelectedTds() {\n        const tableContainer = Quill.find(this.table);\n        // 选中范围计算任然使用 tableCell, tableCellInner 可滚动, width 会影响\n        const tableCells = tableContainer.descendants(TableCellFormat);\n\n        return tableCells.reduce((selectedCells, tableCell) => {\n            let { x, y, width, height } = getRelativeRect(\n                tableCell.domNode.getBoundingClientRect(),\n                this.quill.root.parentNode\n            );\n            let isCellIncluded =\n                x + ERROR_LIMIT >= this.boundary.x &&\n                x - ERROR_LIMIT + width <= this.boundary.x1 &&\n                y + ERROR_LIMIT >= this.boundary.y &&\n                y - ERROR_LIMIT + height <= this.boundary.y1;\n\n            if (isCellIncluded) {\n                selectedCells.push(tableCell.getCellInner());\n            }\n\n            return selectedCells;\n        }, []);\n    }\n\n    correctBoundary() {\n        // 边框计算任然使用 tableCell, 有 padding 会影响\n        const tableContainer = Quill.find(this.table);\n        const tableCells = tableContainer.descendants(TableCellFormat);\n\n        tableCells.forEach((tableCell) => {\n            const { x, y, width, height } = getRelativeRect(\n                tableCell.domNode.getBoundingClientRect(),\n                this.quill.root.parentNode\n            );\n\n            const isCellIntersected =\n                ((x + ERROR_LIMIT >= this.boundary.x && x + ERROR_LIMIT <= this.boundary.x1) ||\n                    (x - ERROR_LIMIT + width >= this.boundary.x && x - ERROR_LIMIT + width <= this.boundary.x1)) &&\n                ((y + ERROR_LIMIT >= this.boundary.y && y + ERROR_LIMIT <= this.boundary.y1) ||\n                    (y - ERROR_LIMIT + height >= this.boundary.y && y - ERROR_LIMIT + height <= this.boundary.y1));\n\n            if (isCellIntersected) {\n                this.boundary = computeBoundaryFromRects(this.boundary, { x, y, width, height });\n            }\n        });\n        this.scrollX = this.table.parentNode.scrollLeft;\n    }\n    // 边框样式显示\n    repositionHelpLines() {\n        const tableViewScrollLeft = this.table.parentNode.scrollLeft;\n        const scrollTop = this.quill.root.parentNode.scrollTop;\n\n        css(this.cellSelect, {\n            display: 'block',\n            left: `${this.boundary.x + (this.scrollX - tableViewScrollLeft) - 1}px`,\n            top: `${scrollTop * 2 + this.boundary.y}px`,\n            width: `${this.boundary.width + 1}px`,\n            height: `${this.boundary.height + 1}px`,\n        });\n    }\n\n    clearSelection() {\n        this.boundary = {};\n        this.selectedTds = [];\n\n        this.cellSelect &&\n            css(this.cellSelect, {\n                display: 'none',\n            });\n        this.clearScrollEvent();\n    }\n\n    destroy() {\n        this.clearSelection();\n        this.cellSelect.remove();\n        this.cellSelect = null;\n        this.clearScrollEvent();\n\n        this.quill.root.removeEventListener('mousedown', this.selectingHandler, false);\n        this.quill.off(Quill.events.TEXT_CHANGE, this.closeHandler);\n\n        return null;\n    }\n}\n","import Quill from 'quill';\nimport { TableWrapperFormat } from '../format';\nimport { css, getRelativeRect } from '../utils';\nimport { blotName, toolName, CELL_MIN_WIDTH, CELL_MIN_PRE } from '../assets/const';\nlet TIP_HEIGHT = 12;\n/*\n\toptions = {\n\t\ttipHeight: 12,\t// tooltip height\n\t\tdisableToolNames: [],\t// 表格内禁用项， toolbar 的 name\n\t}\n*/\nexport class TableTooltip {\n    constructor(quill, options = {}) {\n        this.quill = quill;\n        this.options = options;\n        this.optionsMerge();\n\n        this.tableDisableToolHandlers = {};\n        this.tableWrapper = null;\n        this.table = null;\n        this.curTableId = '';\n        this.focusTableChange = false;\n        this.tableCols = [];\n        this.scrollHandler = [];\n\n        this.root = this.quill.addContainer('ql-table-tooltip');\n        this.root.style.height = TIP_HEIGHT + 'px';\n\n        const resizeObserver = new ResizeObserver((entries) => {\n            this.hide();\n            this.focusTableChange = true;\n            this.curTableId = '';\n        });\n        resizeObserver.observe(this.quill.root);\n\n        this.isMobile = 'ontouchstart' in window;\n        this.handledEvents = this.isMobile\n            ? { down: 'touchstart', move: 'touchmove', up: 'touchend' }\n            : { down: 'mousedown', move: 'mousemove', up: 'mouseup' };\n\n        this.hide();\n        this.listen();\n    }\n\n    optionsMerge() {\n        this.options?.tipHeight && (TIP_HEIGHT = this.options.tipHeight);\n        TableTooltip.disableToolNames = Array.from(\n            new Set([...TableTooltip.disableToolNames, ...(this.options?.disableToolNames || [])])\n        );\n    }\n\n    listen() {\n        this.quill.on(Quill.events.EDITOR_CHANGE, (eventName) => {\n            if (eventName === Quill.events.TEXT_CHANGE) {\n                return this.hide();\n            }\n            const range = this.quill.getSelection();\n\n            if (range == null) {\n                this.hide();\n                this.enableFromTable();\n                return;\n            }\n            const [tableWrapper] = this.quill.scroll.descendant(TableWrapperFormat, range.index);\n            if (tableWrapper !== null) {\n                // 此时在 table 内, 禁用部分功能\n                this.disableFromTable();\n\n                this.tableWrapper = tableWrapper;\n                this.table = tableWrapper.children.head;\n                // 找到 tbody\n                let tbody = tableWrapper.children.tail;\n                while (tbody && tbody.statics.blotName !== blotName.tableBody) {\n                    tbody = tbody.children?.tail;\n                }\n\n                const tableCols = tableWrapper.children.head?.children?.head;\n                if (tableCols.statics.blotName === blotName.tableColGroup && tableCols.children.length) {\n                    this.tableCols = tableCols.children.map((col) => col);\n                } else {\n                    this.tableCols = [];\n                }\n\n                let curTableId = tableWrapper.children.head.tableId;\n                if (this.curTableId !== curTableId) {\n                    this.clearScrollEvent();\n                    this.focusTableChange = true;\n                    // 表格滚动同步事件\n                    this.addScrollEvent(\n                        this.tableWrapper.domNode,\n                        this.scrollSync.bind(this, this.tableWrapper.domNode)\n                    );\n                }\n                this.curTableId = curTableId;\n\n                this.show();\n                this.position();\n                return;\n            } else {\n                this.enableFromTable();\n            }\n            this.hide();\n        });\n    }\n\n    disableFromTable() {\n        this.toggleDisableToolbarTools('add');\n\n        const toolbar = this.quill.getModule('toolbar');\n        // 防止重复触发覆盖保存事件\n        if (toolbar.disableByTable) return;\n        toolbar.disableByTable = true;\n        // 去除 toolbar 对应 module 的 handler 事件, 保存在 tableDisableToolHandlers\n        for (const toolName of TableTooltip.disableToolNames) {\n            this.tableDisableToolHandlers[toolName] = toolbar.handlers[toolName];\n            // 不要设置为 null\n            toolbar.handlers[toolName] = () => {};\n        }\n    }\n\n    enableFromTable() {\n        this.toggleDisableToolbarTools('remove');\n\n        const toolbar = this.quill.getModule('toolbar');\n        // 根据 tableDisableToolHandlers 恢复 handler\n        for (const toolName in this.tableDisableToolHandlers) {\n            toolbar.handlers[toolName] = this.tableDisableToolHandlers[toolName];\n        }\n        this.tableDisableToolHandlers = {};\n        toolbar.disableByTable = false;\n    }\n\n    /**\n     * Toggles the disable state of toolbar tools.\n     *\n     * @param {'add' | 'remove'} type - The type of toggle action to perform.\n     */\n    toggleDisableToolbarTools(type) {\n        const toolbar = this.quill.getModule('toolbar');\n        toolbar.controls.map(([name, btn]) => {\n            if (TableTooltip.disableToolNames.includes(name)) {\n                if (btn.tagName.toLowerCase() === 'select') {\n                    toolbar.container\n                        .querySelector(`.ql-picker.${btn.className}`)\n                        ?.classList[type]('ql-disabled-table');\n                } else {\n                    btn.classList[type]('ql-disabled-table');\n                }\n            }\n        });\n    }\n\n    scrollSync(dom, e) {\n        this.root.scrollLeft = dom.scrollLeft;\n    }\n\n    addScrollEvent(dom, handle) {\n        dom.addEventListener('scroll', handle);\n        this.scrollHandler.push([dom, handle]);\n    }\n\n    clearScrollEvent() {\n        for (let i = 0; i < this.scrollHandler.length; i++) {\n            const [dom, handle] = this.scrollHandler[i];\n            dom.removeEventListener('scroll', handle);\n        }\n        this.scrollHandler = [];\n    }\n\n    position = () => {\n        const rect = getRelativeRect(this.table.domNode.getBoundingClientRect(), this.quill.root);\n        const tableTop = this.table.domNode.offsetTop;\n        const rootScrollTop = this.quill.root.scrollTop;\n        css(this.root, {\n            top: `${tableTop - rootScrollTop - TIP_HEIGHT}px`,\n            left: rect.x + 'px', // table 距离 editor 的 padding\n        });\n    };\n\n    show() {\n        // 若没有 colgroup col 元素，不显示\n        if (!this.tableCols.length) {\n            return;\n        }\n\n        if (this.focusTableChange) {\n            const tableWrapperRect = this.tableWrapper.domNode.getBoundingClientRect();\n            // 加 tableId 用于 table 删除时隐藏 tooltip\n            this.root.dataset.tableId = this.tableWrapper.tableId;\n            this.root.innerHTML = [...this.tableCols]\n                .map((col) => {\n                    let width = col.width + (this.table.full ? '%' : 'px');\n                    if (!col.width) {\n                        width = col.domNode.getBoundingClientRect().width + 'px';\n                    }\n                    return `<div class=\"ql-table-col-header\" style=\"width: ${width}\">\n            \t\t\t<div class=\"ql-table-col-separator\" style=\"height: ${tableWrapperRect.height + TIP_HEIGHT - 3}px\"></div>\n            \t\t</div>`; // -3 为 border-width: 2, top: 1\n                })\n                .join('');\n\n            this.focusTableChange = false;\n            Object.assign(this.root.style, {\n                width: tableWrapperRect.width + 'px',\n            });\n\n            this.bindDrag();\n        }\n        setTimeout(() => {\n            this.scrollSync(this.tableWrapper.domNode);\n        }, 0);\n        this.root.classList.remove('ql-hidden');\n\n        const srcollHide = () => {\n            this.hide();\n            this.quill.root.removeEventListener('scroll', srcollHide);\n        };\n        this.quill.root.addEventListener('scroll', srcollHide);\n    }\n\n    hide() {\n        this.root.classList.add('ql-hidden');\n    }\n\n    bindDrag() {\n        let tipColBreak = null;\n        let curColIndex = -1;\n        let tableColHeads = Array.from(this.root.getElementsByClassName('ql-table-col-header'));\n        let tableColHeadSeparators = Array.from(this.root.getElementsByClassName('ql-table-col-separator'));\n        const appendTo = document.body;\n        // 设置每个 drag 下标对应 col 下标，最右会多一个 drag, 与 better-table 的类似\n        // 根据当前的 col left 配合 clientX 计算, 使保证最小宽度\n        const handleMousemove = (e) => {\n            // getBoundingClientRect 的 top/bottom/left/right, 这是根据视口距离\n            const rect = tableColHeads[curColIndex].getBoundingClientRect();\n            const tableWidth = this.table.domNode.getBoundingClientRect().width;\n            let resX = this.isMobile ? e.changedTouches[0].clientX : e.clientX;\n\n            if (this.table.full) {\n                // 拖拽的最大宽度是当前 col 宽度 + next col 宽度, 最后一个 col 最大宽度是当前宽度\n                const minWidth = (CELL_MIN_PRE / 100) * tableWidth;\n                const maxRange =\n                    resX > rect.right\n                        ? tableColHeads[curColIndex + 1]\n                            ? tableColHeads[curColIndex + 1].getBoundingClientRect().right - minWidth\n                            : rect.right - minWidth\n                        : Infinity;\n                const minRange = rect.x + minWidth;\n\n                resX = Math.min(Math.max(resX, minRange), maxRange);\n            } else {\n                if (resX - rect.x < CELL_MIN_WIDTH) {\n                    resX = rect.x + CELL_MIN_WIDTH;\n                }\n            }\n            resX = Math.floor(resX);\n            tipColBreak.style.left = resX + 'px';\n            tipColBreak.dataset.w = resX - rect.x;\n        };\n        const handleMouseup = (e) => {\n            let w = parseInt(tipColBreak.dataset.w);\n            // table full 时处理不同\n            if (this.table.full) {\n                // 在调整一个后把所有 col 都变成百分比\n                let pre = (w / this.table.domNode.getBoundingClientRect().width) * 100;\n                let oldWidthPre = this.tableCols[curColIndex].width;\n                if (pre < oldWidthPre) {\n                    // 缩小时若不是最后一个, 则把减少的量加在后面一个\n                    // 若是最后一个则把减少的量加在前面一个\n                    pre = Math.max(CELL_MIN_PRE, pre);\n                    const last = oldWidthPre - pre;\n                    if (this.tableCols[curColIndex + 1]) {\n                        this.tableCols[curColIndex + 1].width = `${this.tableCols[curColIndex + 1].width + last}%`;\n                    } else if (this.tableCols[curColIndex - 1]) {\n                        this.tableCols[curColIndex - 1].width = `${this.tableCols[curColIndex - 1].width + last}%`;\n                    } else {\n                        pre = 100;\n                    }\n                    this.tableCols[curColIndex].width = `${pre}%`;\n                } else {\n                    // 增大时若不是最后一个, 则与后面一个的宽度合并, 最大不能超过合并的宽度, 增加的量来自后面一个的减少量\n                    // 若是最后一个则不处理\n                    if (this.tableCols[curColIndex + 1]) {\n                        const totalWidthNextPre = oldWidthPre + this.tableCols[curColIndex + 1].width;\n                        pre = Math.min(totalWidthNextPre - CELL_MIN_PRE, pre);\n                        this.tableCols[curColIndex].width = `${pre}%`;\n                        this.tableCols[curColIndex + 1].width = `${totalWidthNextPre - pre}%`;\n                    }\n                }\n            } else {\n                this.table.domNode.style.width =\n                    parseFloat(this.table.domNode.style.width) -\n                    parseFloat(tableColHeads[curColIndex].style.width) +\n                    w +\n                    'px';\n                tableColHeads[curColIndex].style.width = `${w}px`;\n                this.tableCols[curColIndex].width = `${w}px`;\n            }\n            this.table.formatTableWidth();\n\n            appendTo.removeChild(tipColBreak);\n            tipColBreak = null;\n            curColIndex = -1;\n            document.removeEventListener(this.handledEvents.up, handleMouseup);\n            document.removeEventListener(this.handledEvents.move, handleMousemove);\n\n            const tableModule = this.quill.getModule(toolName.table);\n            tableModule.hideTableTools();\n        };\n        const handleMousedown = (i, e) => {\n            document.addEventListener(this.handledEvents.up, handleMouseup);\n            document.addEventListener(this.handledEvents.move, handleMousemove);\n            curColIndex = i;\n\n            const divDom = document.createElement('div');\n            divDom.classList.add('ql-table-drag-line');\n\n            const tableRect = this.tableWrapper.domNode.getBoundingClientRect();\n            css(divDom, {\n                top: `${tableRect.y - TIP_HEIGHT}px`,\n                left: `${this.isMobile ? e.changedTouches[0].clientX : e.clientX}px`,\n                height: `${tableRect.height + TIP_HEIGHT}px`,\n            });\n            appendTo.appendChild(divDom);\n\n            if (tipColBreak) appendTo.removeChild(tipColBreak);\n            tipColBreak = divDom;\n        };\n        tableColHeadSeparators.map((el, i) => {\n            el.addEventListener(this.handledEvents.down, handleMousedown.bind(this, i));\n            // 防止拖拽使触发 drag 导致可以使此元素被插入表格\n            el.addEventListener('dragstart', (e) => {\n                e.preventDefault();\n            });\n        });\n    }\n}\n\n// 在 table 内时禁用的 tool 的 name\nTableTooltip.disableToolNames = [toolName.table];\n","// col 最小百分比宽度\nexport const CELL_MIN_PRE = 3;\n// col 最小 px 宽度\nexport const CELL_MIN_WIDTH = 26;\n","import Quill from 'quill';\nconst Parchment = Quill.import('parchment');\nconst Delta = Quill.import('delta');\nconst BlockEmbed = Quill.import('blots/block/embed');\nconst Block = Quill.import('blots/block');\nconst Container = Quill.import('blots/container');\nconst icons = Quill.import('ui/icons');\n\nimport { TableTooltip, TableSelection, TableOperationMenu } from './module';\nimport { ContainBlot } from './blot/contain';\nimport {\n    TableCellFormat,\n    TableRowFormat,\n    TableFormat,\n    TableWrapperFormat,\n    TableBodyFormat,\n    TableColgroupFormat,\n    TableColFormat,\n    TableCellInnerFormat,\n    ListItemRewrite,\n} from './format';\n\nContainBlot.allowedChildren = [Block, BlockEmbed, Container];\n\nTableWrapperFormat.allowedChildren = [TableFormat];\n\nTableFormat.allowedChildren = [TableBodyFormat, TableColgroupFormat];\nTableFormat.requiredContainer = TableWrapperFormat;\n\nTableBodyFormat.allowedChildren = [TableRowFormat];\nTableBodyFormat.requiredContainer = TableFormat;\n\nTableColgroupFormat.allowedChildren = [TableColFormat];\nTableColgroupFormat.requiredContainer = TableFormat;\n\nTableRowFormat.allowedChildren = [TableCellFormat];\nTableRowFormat.requiredContainer = TableBodyFormat;\n\nTableCellFormat.allowedChildren = [TableCellInnerFormat];\n\nTableCellInnerFormat.defaultChild = 'block';\n\nexport { ListItemRewrite };\n\nQuill.register(\n    {\n        [`formats/${ContainBlot.blotName}`]: ContainBlot,\n\n        [`formats/${TableCellInnerFormat.blotName}`]: TableCellInnerFormat,\n        [`formats/${TableCellFormat.blotName}`]: TableCellFormat,\n        [`formats/${TableRowFormat.blotName}`]: TableRowFormat,\n        [`formats/${TableBodyFormat.blotName}`]: TableBodyFormat,\n        [`formats/${TableFormat.blotName}`]: TableFormat,\n        [`formats/${TableWrapperFormat.blotName}`]: TableWrapperFormat,\n\n        [`formats/${TableColgroupFormat.blotName}`]: TableColgroupFormat,\n        [`formats/${TableColFormat.blotName}`]: TableColFormat,\n    },\n    true\n);\n\nimport { isFunction, randomId, showTableSelector } from './utils';\nimport { CREATE_TABLE, CELL_MIN_PRE, blotName, moduleName, toolName, CELL_MIN_WIDTH } from './assets/const';\nimport TableSvg from './assets/icons/table.svg';\n\nclass TableModule {\n    constructor(quill, options) {\n        this.quill = quill;\n        this.options = options;\n\n        this.controlItem = null;\n        this.tableInsertSelectCloseHandler = null;\n\n        const toolbar = this.quill.getModule('toolbar');\n        if (toolbar) {\n            const control = toolbar.controls.find(([name]) => name === TableModule.toolName);\n            if (control) {\n                this.controlItem = control[1].parentNode.querySelector('.ql-table.ql-picker');\n                // 使用 button 时会在点击后立刻聚焦输入, 若有横向滚动条会时视口锁定到 focus, 使用 select 就不会\n                if (this.controlItem) {\n                    const label = this.controlItem.getElementsByClassName('ql-picker-label')?.[0];\n                    label.innerHTML = TableSvg;\n                } else {\n                    this.controlItem = control[1];\n                }\n                this.buildCustomSelect(this.options.customSelect, control[1].tagName.toLowerCase(), this.options.customButton);\n                toolbar.addHandler(TableModule.toolName, this.handleSelectDisplay.bind(this));\n            }\n        }\n        this.pasteTableHandler();\n\n        // 绑定 table 的选择事件\n        this.quill.root.addEventListener(\n            'click',\n            (evt) => {\n                const path = evt.path || (evt.composedPath && evt.composedPath());\n                if (!path || path.length <= 0) return;\n\n                const tableNode = path.filter((node) => {\n                    return (\n                        node.tagName && node.tagName.toUpperCase() === 'TABLE' && node.classList.contains('ql-table')\n                    );\n                })?.[0];\n                // 结束位置位处于表格内不显示\n                if (tableNode) {\n                    if (this.table === tableNode) return;\n                    if (this.table) this.hideTableTools();\n                    this.showTableTools(tableNode, quill, this.options.selection);\n                } else if (this.table) {\n                    this.hideTableTools();\n                }\n            },\n            false\n        );\n        // 绑定 table 的右键插入、删除事件\n        this.quill.root.addEventListener('contextmenu', (evt) => {\n            if (!this.table) return true;\n            evt.preventDefault();\n\n            const path = evt.path || (evt.composedPath && evt.composedPath());\n            if (!path || path.length <= 0) return;\n\n            const tableNode = path.filter(\n                (node) => node.tagName && node.tagName.toUpperCase() === 'TABLE' && node.classList.contains('ql-table')\n            )[0];\n            // 如果没有选中任何单元格，不显示右键菜单\n            if (tableNode && this.tableSelection?.selectedTds?.length) {\n                if (this.tableOperationMenu) this.tableOperationMenu = this.tableOperationMenu.destroy();\n\n                const rowNode = path.filter(\n                    (node) => node.tagName && node.tagName.toUpperCase() === 'TR' && node.getAttribute('data-row-id')\n                )[0];\n\n                const cellNode = path.filter(\n                    (node) => node.tagName && node.tagName.toUpperCase() === 'TD' && node.getAttribute('data-row-id')\n                )[0];\n\n                this.tableOperationMenu = new TableOperationMenu(\n                    {\n                        table: tableNode,\n                        row: rowNode,\n                        cell: cellNode,\n                        left: evt.clientX,\n                        top: evt.clientY,\n                    },\n                    quill,\n                    this.options.operationMenu\n                );\n            }\n        });\n        this.quill.theme.TableTooltip = new TableTooltip(this.quill, this.options.tableToolTip);\n    }\n\n    showTableTools(table, quill, options) {\n        this.table = table;\n        this.tableSelection = new TableSelection(table, quill, options);\n    }\n\n    hideTableTools() {\n        this.tableSelection && this.tableSelection.destroy();\n        this.tableOperationMenu && this.tableOperationMenu.destroy();\n        if (this.quill.theme.TableTooltip) {\n            this.quill.theme.TableTooltip.curTableId = null;\n            this.quill.theme.TableTooltip.hide();\n        }\n        this.tableSelection = null;\n        this.tableOperationMenu = null;\n        this.table = null;\n    }\n\n    // 粘贴表格处理\n    // 需要带上 col 的 width, 处理 px 和 %\n    pasteTableHandler() {\n        let tableId = randomId();\n        let rowId = randomId();\n        let colIds = [];\n        let cellCount = 0;\n\n        // 重新生成 table 里的所有 id, cellFormat 和 colFormat 进行 table 的添加\n        // addMatcher 匹配的是标签字符串, 不是 blotName, 只是这些 blotName 设置的是标签字符串\n        this.quill.clipboard.addMatcher(blotName.table, (node, delta) => {\n            if (!delta.ops.length) return delta;\n            const hasCol = !!delta.ops[0].attributes?.col;\n            let colDelta;\n            // 粘贴表格若原本存在 col, 仅改变 id, 否则重新生成\n            const { width: originTableWidth } = node.getBoundingClientRect();\n            let isFull = this.options.fullWidth;\n            if (hasCol) isFull = !!delta.ops[0].insert?.col?.full;\n            const defaultColWidth = isFull\n                ? Math.max(100 / colIds.length, CELL_MIN_PRE) + '%'\n                : Math.max(originTableWidth / colIds.length, CELL_MIN_WIDTH) + 'px';\n\n            if (!hasCol) {\n                colDelta = colIds.reduce((colDelta, id) => {\n                    colDelta.insert('\\n', {\n                        [blotName.tableCol]: {\n                            colId: id,\n                            tableId,\n                            width: defaultColWidth,\n                            full: isFull,\n                        },\n                    });\n                    return colDelta;\n                }, new Delta());\n            } else {\n                for (let i = 0; i < delta.ops.length; i++) {\n                    if (!delta.ops[i].attributes[blotName.tableCol]) {\n                        break;\n                    }\n                    Object.assign(delta.ops[i].attributes[blotName.tableCol], {\n                        tableId,\n                        colId: colIds[i],\n                        full: isFull,\n                        width: !delta.ops[i].attributes[blotName.tableCol].width\n                            ? defaultColWidth\n                            : parseFloat(delta.ops[i].attributes[blotName.tableCol].width) + (isFull ? '%' : 'px'),\n                    });\n                    // delta.ops[i].attributes[blotName.tableCol].tableId = tableId;\n                    // delta.ops[i].attributes[blotName.tableCol].colId = colIds[i];\n                    // delta.ops[i].attributes[blotName.tableCol].full = isFull;\n                    // if (!delta.ops[i].attributes[blotName.tableCol].width) {\n                    //     delta.ops[i].attributes[blotName.tableCol].width = defaultColWidth;\n                    // } else {\n                    //     delta.ops[i].attributes[blotName.tableCol].width =\n                    //         parseFloat(delta.ops[i].attributes[blotName.tableCol].width) + (isFull ? '%' : 'px');\n                    // }\n                }\n            }\n            tableId = randomId();\n            colIds = [];\n            cellCount = 0;\n            return colDelta ? colDelta.concat(delta) : delta;\n        });\n\n        this.quill.clipboard.addMatcher(blotName.tableRow, (node, delta) => {\n            rowId = randomId();\n            cellCount = 0;\n            return delta;\n        });\n\n        this.quill.clipboard.addMatcher(blotName.tableCell, (node, delta) => {\n            const rowspan = node.getAttribute('rowspan') || 1;\n            const colspan = node.getAttribute('colspan') || 1;\n            const colIndex = +cellCount + +colspan - 1;\n            if (!colIds[colIndex]) {\n                for (let i = colIndex; i >= 0; i--) {\n                    if (!colIds[i]) colIds[i] = randomId();\n                }\n            }\n            const colId = colIds[colIndex];\n            cellCount += 1;\n\n            if (delta.slice(delta.length() - 1).ops[0]?.insert !== '\\n') {\n                delta.insert('\\n');\n            }\n\n            return delta.compose(\n                new Delta().retain(delta.length(), {\n                    [blotName.tableCellInner]: {\n                        tableId,\n                        rowId,\n                        colId,\n                        rowspan,\n                        colspan,\n                        style: node.getAttribute('style'),\n                    },\n                })\n            );\n        });\n    }\n\n    async buildCustomSelect(customSelect, tagName, customButton) {\n        const dom = document.createElement('div');\n        dom.classList.add('ql-custom-select');\n        const selector = customSelect && isFunction(customSelect) ? await customSelect() : this.createSelect(customButton);\n        dom.appendChild(selector);\n\n        let appendTo = this.controlItem;\n        if (tagName === 'select') {\n            appendTo = this.controlItem.querySelector('.ql-picker-options');\n        }\n        if (!appendTo) return;\n        selector.addEventListener(CREATE_TABLE, (e) => {\n            const { row, col } = e.detail;\n            if (!row || !col) return;\n            this.insertTable(row, col);\n        });\n        appendTo.appendChild(dom);\n    }\n\n    async handleSelectDisplay() {\n        this.controlItem.classList.add('ql-expanded');\n        this.controlItem.dataset.active = true;\n        window.removeEventListener('click', this.tableInsertSelectCloseHandler);\n        this.tableInsertSelectCloseHandler = (e) => {\n            const path = (e.composedPath && e.composedPath()) || e.path;\n            const i = path.findIndex((el) => el === this.controlItem);\n            if (i > 2 || i === -1) {\n                this.closeSelecte();\n            }\n        };\n        window.addEventListener('click', this.tableInsertSelectCloseHandler);\n    }\n\n    createSelect(customButton) {\n        return showTableSelector(customButton);\n    }\n\n    closeSelecte() {\n        this.controlItem.classList.remove('ql-expanded');\n        this.controlItem.dataset.active = false;\n        window.removeEventListener('click', this.tableInsertSelectCloseHandler);\n    }\n\n    // 以上为 toolbar table 按钮的选择生成器相关\n    // 以下为 table module 生成表格相关功能函数\n\n    insertTable(rows, columns) {\n        if (rows >= 100 || columns >= 100) {\n            throw new Error('Both rows and columns must be less than 100.');\n        }\n\n        this.quill.focus();\n        this.range = this.quill.getSelection();\n        const range = this.range;\n        if (range == null) return;\n        const currentBlot = this.quill.getLeaf(range.index)[0];\n\n        if (isForbidInTable(currentBlot)) {\n            throw new Error('Not supported nesting of ' + currentBlot.type + ' type object within a table.');\n        }\n\n        setTimeout(() => {\n            let delta = new Delta().retain(range.index);\n            delta.insert('\\n');\n            const tableId = randomId();\n            const colId = new Array(columns).fill(0).map(() => randomId());\n\n            let { width, paddingLeft, paddingRight } = getComputedStyle(this.quill.root);\n            width = parseInt(width);\n            paddingLeft = parseInt(paddingLeft);\n            paddingRight = parseInt(paddingRight);\n            width = width - paddingLeft - paddingRight;\n\n            delta = new Array(columns).fill('\\n').reduce((memo, text, i) => {\n                memo.insert(text, {\n                    [blotName.tableCol]: {\n                        width: !this.options.fullWidth ? `${Math.floor(width / columns)}px` : `${(1 / columns) * 100}%`,\n                        tableId,\n                        colId: colId[i],\n                        full: this.options.fullWidth,\n                    },\n                });\n                return memo;\n            }, delta);\n\n            // 直接生成 delta 的数据格式并插入\n            delta = new Array(rows).fill(0).reduce((memo) => {\n                const rowId = randomId();\n                return new Array(columns).fill('\\n').reduce((memo, text, i) => {\n                    memo.insert(text, {\n                        [blotName.tableCellInner]: {\n                            tableId,\n                            rowId,\n                            colId: colId[i],\n                            rowspan: 1,\n                            colspan: 1,\n                        },\n                    });\n                    return memo;\n                }, memo);\n            }, delta);\n            // console.log(columns, rows);\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(range.index + columns + columns * rows + 1, Quill.sources.API);\n            this.quill.focus();\n\n            this.closeSelecte();\n        }, 0);\n    }\n\n    findTable(blot) {\n        let cur = blot;\n        while (cur.statics.blotName !== blotName.table && cur !== null) {\n            cur = cur.parent;\n        }\n        return cur;\n    }\n\n    /*\n        基准行\n            向上: 选中 cell 的第一行\n            向下: 选中 cell 的最后一行\n        有无跨行单元格跨过选中基准行\n            找到所有 colId, 根据若遍历行内的某 colId 跨行至基准行, 则添加至新的 cell 中, 否则:\n                向上: 从当前行向前查找所有 cell, 若 cell rowspan + index > 基准行 index, 则此 cell rowspan + 1\n                向下: 从当前行向后查找所有 cell, 若 cell rowspan - index < 基准行 index, 则此 cell rowspan + 1\n            直到所有 colId 都遍历完, 则生成新的 cell 并插入到当前行的下方/上方\n     */\n    appendRow(isDown) {\n        const selectTds = this.tableSelection.selectedTds;\n        if (!selectTds.length) return;\n        const table = this.findTable(selectTds[0]);\n        const findTd = selectTds[isDown ? selectTds.length - 1 : 0];\n        let baseTr = Quill.find(findTd.domNode.parentNode.parentNode);\n        if (isDown) {\n            let baseTrRowspan = findTd.rowspan;\n            while (baseTrRowspan > 1) {\n                baseTr = baseTr.next;\n                baseTrRowspan -= 1;\n            }\n        }\n\n        const colIds = table.getColIds();\n        // 用于判断有哪些 col 已被遍历\n        const allColIds = new Set(colIds);\n        let foreachTr = isDown ? baseTr : baseTr.prev;\n        let newCellColId = new Array();\n        let indexDiff = 0;\n        // 第一行向上插入时 baseTr 是 null, 不需要判断\n        if (!foreachTr) {\n            allColIds.clear();\n            newCellColId = colIds;\n        }\n        while (allColIds.size) {\n            indexDiff += 1;\n            if (!foreachTr) {\n                break;\n            }\n            foreachTr.foreachCellInner((cell) => {\n                if (!allColIds.has(cell.colId)) return;\n                // 找到当前 cell 跨列的所有 colId\n                let curCellColIds = [cell.colId];\n                if (cell.colspan > 1) {\n                    let index = colIds.findIndex((id) => id === cell.colId);\n                    if (index === -1) {\n                        index = 0;\n                    }\n                    curCellColIds = colIds.slice(index, index + cell.colspan);\n                }\n                // 若跨行过基准行, 则更新 rowspan\n                if (cell.rowspan > indexDiff) {\n                    cell.rowspan += 1;\n                } else {\n                    // 未包含基准行, 要添加所有的包含的 col\n                    newCellColId.push(...curCellColIds);\n                }\n                curCellColIds.map((id) => allColIds.delete(id));\n            });\n            foreachTr = foreachTr.prev;\n        }\n        // 生成新的 cell\n        const tableId = table.tableId;\n        const newRowId = randomId();\n        const newRow = Parchment.create(blotName.tableRow, newRowId);\n        const insertColId = new Set(newCellColId);\n        // 保持 colId 顺序\n        for (let i = 0; i < colIds.length; i++) {\n            if (!insertColId.size) break;\n            if (insertColId.has(colIds[i])) {\n                const td = Parchment.create(blotName.tableCell, {\n                    rowId: newRowId,\n                    colId: colIds[i],\n                    rowspan: 1,\n                    colspan: 1,\n                });\n                const tdInner = Parchment.create(blotName.tableCellInner, {\n                    tableId,\n                    rowId: newRowId,\n                    colId: colIds[i],\n                    rowspan: 1,\n                    colspan: 1,\n                });\n                const block = Parchment.create('block');\n                block.appendChild(Parchment.create('break'));\n                tdInner.appendChild(block);\n                td.appendChild(tdInner);\n                newRow.appendChild(td);\n                insertColId.delete(colIds[i]);\n            }\n        }\n\n        baseTr.parent.insertBefore(newRow, isDown ? baseTr.next : baseTr);\n    }\n\n    /*\n        第一种情况选中行中没有跨行, 或跨行没有超出选中范围. \n            直接删除\n        第二种情况选中行内有跨行, 且跨行结束行在选中范围外.\n            遍历选中行, 找到所有跨行超出范围的 cell 记录 colId 与超出 rowspan, 之后在选中最后一行的后一行插入对应的 cell\n        第三种情况选中行之前有跨行, 且跨行结束行在选中范围内. \n            从选中行前一行开始遍历 cell, 找到所有的 col, 若 cell 跨行进入了选中范围(rowsapn - index > 0), rowspan = index\n        第四种情况选中行之前有跨行, 且跨行范围包含选中范围.\n            选中行前一行开始遍历 cell, 找到所有的 col, 若 cell 跨行进入了选中范围(rowsapn - index > 0), rowspan = rowspan - deleteTrs.length\n            \n    */\n    removeRow() {\n        if (!this.tableSelection.selectedTds.length) return;\n        const selectTds = this.tableSelection.selectedTds;\n        let [rowIds, rows] = selectTds.reduce(\n            (pre, td) => {\n                if (!pre[0].has(td.rowId)) {\n                    pre[0].add(td.rowId);\n                    pre[1].push(td.parent.parent);\n                }\n                return pre;\n            },\n            [new Set(), []]\n        );\n        rowIds = Array.from(rowIds);\n\n        const afterCell = new Map();\n        rows.map((tr) => {\n            tr.foreachCellInner((cell) => {\n                const rowIndexInSelected = rowIds.findIndex((id) => id === cell.rowId);\n                if (cell.rowspan > rowIds.length - rowIndexInSelected) {\n                    afterCell.set(cell.colId, {\n                        cell,\n                        rowspan: cell.rowspan - rowIds.length + rowIndexInSelected,\n                    });\n                }\n            });\n            tr.remove();\n        });\n\n        const table = this.findTable(selectTds[0]);\n        const tableId = table.tableId;\n        // 需要添加的跨行 cell\n        if (afterCell.size) {\n            const nextRow = rows[rows.length - 1].next;\n\n            const colIds = table.getColIds();\n            // 标记插入位置\n            let lastTd = null;\n            for (let i = 0; i < colIds.length; ) {\n                const td = nextRow.domNode.querySelector(`td[data-col-id=\"${colIds[i]}\"]`);\n                if (td) {\n                    const tdBlot = Quill.find(td);\n                    i += tdBlot.colspan;\n                    lastTd = tdBlot.next;\n                } else {\n                    const { cell, rowspan } = afterCell.get(colIds[i]);\n                    const newTd = Parchment.create(blotName.tableCell, {\n                        rowId: nextRow.rowId,\n                        colId: colIds[i],\n                        rowspan,\n                        colspan: cell.colspan,\n                    });\n                    const newTdInner = Parchment.create(blotName.tableCellInner, {\n                        tableId,\n                        rowId: nextRow.rowId,\n                        colId: colIds[i],\n                        rowspan,\n                        colspan: cell.colspan,\n                    });\n                    cell.moveChildren(newTdInner);\n                    newTd.appendChild(newTdInner);\n                    nextRow.insertBefore(newTd, lastTd);\n                    i += cell.colspan;\n                }\n            }\n        }\n    }\n\n    /*\n        基准列\n            向左: 选中 cell 的第一列 id, index\n            向右: 选中 cell 的最后一列 id, index\n        找到所有 rowId, 开始遍历行内 cell 至(向右: 基准行 colId)(向左: 基准行前一行 colId) \n            有无单元格跨列超过基准列\n                // 因为 colspan 最少为 1, 判断时需要 + 1\n                向右: 若 colspan + i > 1 + index, 则 colspan + 1 \n                向左: 若 colspan + i > 1 + index, 则 colspan + 1 \n                colspan + 1 后判断是否跨行, 若跨行则之后 rowspan 行不进行循环\n                break\n            无 \n                找到 index 所在 cell，insertBefore\n    */\n    appendCol(isRight) {\n        if (!this.tableSelection.selectedTds.length) return;\n        const selectTds = this.tableSelection.selectedTds;\n        const table = this.findTable(selectTds[0]);\n        const cols = table.getCols();\n        const colIds = table.getColIds();\n        const rows = table.getRows();\n        const newColId = randomId();\n\n        let baseColId;\n        if (isRight) {\n            const lastTd = selectTds[selectTds.length - 1];\n            const i = colIds.findIndex((id) => id === lastTd.colId);\n            baseColId = colIds[i + lastTd.colspan - 1];\n        } else {\n            baseColId = selectTds[0].colId;\n        }\n        // 找到对应 col 下标，同时插入 col 元素\n        const baseColIndex = cols.findIndex((col) => {\n            if (col.colId === baseColId) {\n                const newCol = Parchment.create(blotName.tableCol, {\n                    width: !this.options.fullWidth ? '160px' : '6%',\n                    full: this.options.fullWidth,\n                    tableId: table.tableId,\n                    colId: newColId,\n                });\n                let beforeTarget = isRight ? col.next : col;\n                col.parent.insertBefore(newCol, beforeTarget);\n                if (this.options.fullWidth) {\n                    if (!beforeTarget) {\n                        beforeTarget = isRight ? col : col.prev;\n                    }\n                    beforeTarget.width = Math.max(beforeTarget.width - 6, CELL_MIN_PRE) + '%';\n                }\n            }\n            return col.colId === baseColId;\n        });\n        table.formatTableWidth();\n\n        const stopIndex = isRight ? baseColIndex + 1 : baseColIndex;\n        let skipRow = 0;\n        rows.map((tr) => {\n            let colspanIncrease = false;\n            let beforeCell = null;\n            tr.foreachCellInner((cell) => {\n                // 之前行有跨行且跨列的 cell 处理过, 直接跳过\n                if (skipRow > 0) {\n                    skipRow -= 1;\n                    colspanIncrease = true;\n                    return true;\n                }\n                const colIndexInSelected = colIds.findIndex((id) => id === cell.colId);\n                if (cell.colspan + colIndexInSelected > stopIndex) {\n                    beforeCell = cell.parent;\n\n                    // 当前 cell 跨列且不是终止位\n                    if (cell.colspan !== 1 && colIndexInSelected !== stopIndex) {\n                        cell.colspan += 1;\n                        colspanIncrease = true;\n                        skipRow = cell.rowspan - 1;\n                        return true;\n                    }\n                }\n\n                if (colIndexInSelected >= stopIndex) {\n                    return true;\n                }\n            });\n\n            if (!colspanIncrease) {\n                const newTd = Parchment.create(blotName.tableCell, {\n                    rowId: tr.rowId,\n                    colId: newColId,\n                    rowspan: 1,\n                    colspan: 1,\n                });\n                const newTdInner = Parchment.create(blotName.tableCellInner, {\n                    tableId: table.tableId,\n                    rowId: tr.rowId,\n                    colId: newColId,\n                    rowspan: 1,\n                    colspan: 1,\n                });\n                newTd.appendChild(newTdInner);\n                tr.insertBefore(newTd, beforeCell);\n            }\n        });\n    }\n\n    /*\n        找到需要删除的所有 colId\n            获取所有 colIds, 遍历选中 cell, 找到 cell 在 colIds 下标, while cell 的 colspan, 将对应 colId 加入 set. 同时保存第一个 col 的 index (first)和最后一个 col 的 index(last)\n        遍历所有 row, 遍历 row 中的 cell, 直到 cell i == index\n            if i > first && i + colspan > last\n                cell.colspan - (last - i + 1)\n            if i < first && i + colsapn > last\n                cell.colspan - (last - first + 1)\n            if i < first && i + colspan > first && i + colspan <= last\n                cell.colspan - (i + colspan - first)\n            if i >= first && i + colspan <= last\n                cell.remove\n    */\n    removeCol() {\n        if (!this.tableSelection.selectedTds.length) return;\n        const tds = this.tableSelection.selectedTds;\n        const table = this.findTable(this.tableSelection.selectedTds[0]);\n        const colIds = table.getColIds();\n\n        const [firstSelectColIndex, lastSelectColIndex] = tds.reduce(\n            (n, cellInner) => {\n                const i = colIds.findIndex((id) => id === cellInner.colId);\n                return [Math.min(n[0], i), Math.max(n[1], i + cellInner.colspan - 1)];\n            },\n            [Infinity, -Infinity]\n        );\n\n        const rows = table.getRows();\n        rows.map((row) => {\n            let i = 0;\n            row.foreachCellInner((cell) => {\n                if (i > lastSelectColIndex) return true;\n                const colspan = cell.colspan;\n                if (i + colspan - 1 > lastSelectColIndex) {\n                    cell.colspan -= lastSelectColIndex - Math.max(i, firstSelectColIndex) + 1;\n                } else if (i < firstSelectColIndex && i + colspan - 1 >= firstSelectColIndex) {\n                    cell.colspan -= i + colspan - firstSelectColIndex;\n                } else if (i >= firstSelectColIndex) {\n                    cell.remove();\n                }\n\n                i += colspan;\n            });\n        });\n\n        const cols = table.getCols();\n        for (let i = 0; i < cols.length; i++) {\n            if (i >= firstSelectColIndex && i <= lastSelectColIndex) {\n                cols[i].remove();\n            }\n            if (i > lastSelectColIndex) {\n                break;\n            }\n        }\n        table.formatTableWidth();\n    }\n\n    removeTable() {\n        const selectTds = this.tableSelection.selectedTds;\n        if (!selectTds.length) return;\n        this.findTable(selectTds[0]).remove();\n    }\n\n    mergeCells() {\n        if (!this.tableSelection.selectedTds.length) return;\n        const selectTds = this.tableSelection.selectedTds;\n\n        // 计算需要合并的单元格的行列数\n        const counts = selectTds.reduce(\n            (pre, cellInner) => {\n                // 此单元格所在列需要跨的行数\n                const colId = cellInner.colId;\n                if (!pre[0][colId]) pre[0][colId] = 0;\n                pre[0][colId] += cellInner.rowspan;\n                // 此单元格所在行需要跨的列数\n                const rowId = cellInner.rowId;\n                if (!pre[1][rowId]) pre[1][rowId] = 0;\n                pre[1][rowId] += cellInner.colspan;\n                return pre;\n            },\n            [{}, {}]\n        );\n        // counts[0] 记录的是 colId 对应的跨行数\n        // counts[1] 记录的是 rowId 对应的跨列数\n        const rowCount = Math.max(...Object.values(counts[0]));\n        const colCount = Math.max(...Object.values(counts[1]));\n\n        // console.log(counts);\n        // console.log('row', rowCount);\n        // console.log('col', colCount);\n        // 注意清除 block 的 cache.detla\n        // 若不清除 cache.detla 导致显示正常但在获取 quill.getContents() 时会有原 cellInner 未改变的情况\n        // 防止这种情况直接 clone\n        const mergedCell = selectTds[0].clone();\n        selectTds[0].parent.appendChild(mergedCell);\n        mergedCell.colspan = colCount;\n        mergedCell.rowspan = rowCount;\n        for (let i = 0; i < selectTds.length; i++) {\n            selectTds[i].moveChildren(mergedCell);\n            selectTds[i].remove();\n        }\n        const table = this.findTable(selectTds[0]);\n        // 当合并后的单元格跨列等于 table 的列数, row 可以合并为 1\n        const tableColLength = table.getColIds().length;\n        if (tableColLength === colCount) {\n            mergedCell.rowspan = 1;\n        }\n        // 当合并后的单元格跨行等于 table 的行数, col 可以合并为 1\n        const tableRowLength = table.getRowIds().length;\n        if (tableRowLength <= rowCount) {\n            // 最终将 colspan 合并为 1, 所以要删除 colspan - 1 个 col\n            // 遍历到合并单元格的 colId 后开始进行删除\n            const tableCols = table.descendants(TableColFormat);\n            let deleteCount = mergedCell.colspan - 1;\n            let startDeleteIndex = null;\n            for (let i = 0; i < tableCols.length; i++) {\n                if (deleteCount <= 0) break;\n                // 先删再判断, 防止删除合并后的最后一个单元格\n                if (startDeleteIndex !== null) {\n                    // 若合并 col 中存在 width 为 null, 则合并后的 col 为 null\n                    if (tableCols[startDeleteIndex].width === null || tableCols[i].width === null) {\n                        tableCols[startDeleteIndex].width = null;\n                    } else {\n                        tableCols[startDeleteIndex].width += tableCols[i].width;\n                    }\n                    tableCols[i].remove();\n                    deleteCount -= 1;\n                }\n                if (tableCols[i].colId === mergedCell.colId) {\n                    startDeleteIndex = i;\n                }\n            }\n            mergedCell.colspan = 1;\n        }\n    }\n\n    setStyle(styles, cells) {\n        if (!cells.length) return;\n        cells.map((cellInner) => (cellInner.style = styles));\n    }\n}\n\n// 不可插入至表格的 blot\nexport const tableCantInsert = [blotName.tableCell];\nexport const isForbidInTableBlot = (blot) => {\n    return tableCantInsert.includes(blot.statics.blotName);\n};\n\nexport const isForbidInTable = (current) => {\n    return current && current.parent\n        ? isForbidInTableBlot(current.parent)\n            ? true\n            : isForbidInTable(current.parent)\n        : false;\n};\n\nTableModule.moduleName = moduleName.table;\nTableModule.toolName = toolName.table;\n\nTableModule.createEventName = CREATE_TABLE;\nicons[TableModule.toolName] = TableSvg;\n\nexport const rewirteFormats = () =>\n    Quill.register(\n        {\n            [`formats/list/item`]: ListItemRewrite,\n        },\n        true\n    );\nexport default TableModule;\n"],"names":["CREATE_TABLE","blotName","moduleName","toolName","randomId","Math","random","toString","slice","zindex","dialog","_ref","arguments","length","undefined","child","_ref$target","target","document","body","_ref$beforeClose","beforeClose","appendTo","createElement","classList","add","style","zIndex","overlay","appendChild","content","onclick","e","stopPropagation","originOverflow","getComputedStyle","overflow","close","remove","createInputItem","label","options","type","value","inputItem","inputLabel","innerText","inputInput","input","key","setAttribute","max","min","addEventListener","onfocus","onblur","errorTip","msg","contains","querySelector","removeError","item","showTableCreator","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","row","col","box","inputContent","_createInputItem","rowItem","rowInput","rowErrorTip","_createInputItem2","colItem","colInput","colErrorTip","control","confirmBtn","cancelBtn","_args2","wrap","_context2","prev","next","abrupt","Promise","resolve","reject","_callee","_context","Number","isNaN","stop","apply","this","css","domNode","rules","prop","getRelativeRect","targetRect","container","containerRect","getBoundingClientRect","x","scrollLeft","y","scrollTop","x1","width","y1","height","computeBoundaryFromRects","startRect","endRect","isFunction","val","MENU_ITEMS_DEFAULT","insertColumnLeft","text","handler","tableModule","quill","getModule","appendCol","hideTableTools","insertColumnRight","insertRowTop","appendRow","insertRowBottom","groupEnd","removeCol","removeRow","removeTable","mergeCell","mergeCells","setBackgroundColor","isColorChoose","color","setStyle","backgroundColor","selectedTds","clearBackgroundColor","setBorderColor","borderColor","clearBorderColor","TableOperationMenu","constructor","params","table","tableSelection","menuItems","mergeMenuItems","boundary","destroyHandler","destroy","bind","menuInitial","_this$options","_this$options3","_this$options$items","_this$options2","replaceItems","items","modifyItems","_this$options$items2","_this$options4","modifyMenuItems","_this$options5","newOptionsItems","_objectSpread","_i","_Object$entries","Object","entries","_this$options6","_Object$entries$_i","_slicedToArray","itemNewOptions","assign","setMenuPosition","_ref6","left","top","menuRect","resLeft","resTop","concat","_ref7","cell","position","_i2","_Object$entries2","_Object$entries2$_i","name","subTitle","subTitleCreator","menuItemCreator","dividingCreator","dividing","title","removeEventListener","_ref8","iconSrc","node","iconSpan","innerHTML","textSpan","nodes","call","Array","isArray","map","sub","padding","border","Container","Quill","import","Parchment","TableBodyFormat","optimize","super","statics","tagName","moveChildren","deleteAt","index","parent","children","forEachAt","offset","scope","Scope","BLOCK_BLOT","ContainBlot","create","insertBefore","blot","ref","head","format","tail","replace","defaultChild","TableCellInnerFormat","tableId","rowId","colId","rowspan","colspan","dataset","_style","clearDeltaCache","forEach","cache","cloneTarget","clone","formats","_this$domNode$dataset","_this$domNode$dataset2","tableWrapper","tableBody","tr","td","className","TableCellFormat","cssText","getAttribute","getCellInner","descendants","_this$domNode$dataset3","cellInner","TableColFormat","full","parseFloat","hasAttribute","_this$domNode$dataset4","tableColgroup","_this$domNode$dataset5","ttableId","tcolId","TableColgroupFormat","findCol","cur","iterator","i","TableRowFormat","foreachCellInner","func","TableFormat","formatTableWidth","colWidthFillTable","colgroup","colsWidth","reduce","sum","setTimeout","getRows","getRowIds","d","getCols","getColIds","TableWrapperFormat","preventDefault","ondrop","ondragover","dataTransfer","dropEffect","allowedChildren","find","_document$querySelect","ListItem","ListItemRewrite","replaceWith","isolate","replacement","attributes","copy","PRIMARY_COLOR","TableSelection","optionsMerge","dragging","selectingHandler","mouseDownHandler","cellSelect","scrollHandler","helpLinesInitial","ResizeObserver","clearSelection","observe","root","closeHandler","on","events","TEXT_CHANGE","_this$options7","primaryColor","addScrollEvent","dom","handle","push","clearScrollEvent","_this$scrollHandler$i","addContainer","button","closest","startTableId","mouseMoveHandler","endTd","endTdRect","parentNode","startTdRect","correctBoundary","computeSelectedTds","repositionHelpLines","startTd","blur","mouseUpHandler","srcollHide","selectedCells","tableCell","_getRelativeRect","_getRelativeRect2","scrollX","tableViewScrollLeft","display","off","TIP_HEIGHT","TableTooltip","_defineProperty","rect","tableTop","offsetTop","rootScrollTop","tableDisableToolHandlers","curTableId","focusTableChange","tableCols","hide","isMobile","window","handledEvents","down","move","up","listen","_this$options8","_this$options9","tipHeight","disableToolNames","from","Set","EDITOR_CHANGE","eventName","range","getSelection","enableFromTable","scroll","descendant","_tableWrapper$childre","disableFromTable","tbody","_tbody$children","scrollSync","show","toggleDisableToolbarTools","toolbar","disableByTable","_step","_iterator","_createForOfIteratorHelper","s","n","done","handlers","err","f","controls","_ref9","_toolbar$container$qu","_ref10","btn","includes","toLowerCase","_this$scrollHandler$i2","tableWrapperRect","join","bindDrag","tipColBreak","curColIndex","tableColHeads","getElementsByClassName","tableColHeadSeparators","handleMousemove","tableWidth","resX","changedTouches","clientX","minWidth","CELL_MIN_PRE","maxRange","right","Infinity","minRange","floor","w","handleMouseup","parseInt","pre","oldWidthPre","last","totalWidthNextPre","removeChild","handleMousedown","divDom","tableRect","el","Delta","BlockEmbed","Block","icons","requiredContainer","register","TableModule","controlItem","tableInsertSelectCloseHandler","_ref11","_this$controlItem$get","TableSvg","buildCustomSelect","customSelect","customButton","addHandler","handleSelectDisplay","pasteTableHandler","evt","_path$filter","path","composedPath","tableNode","filter","toUpperCase","showTableTools","selection","_this$tableSelection","tableOperationMenu","rowNode","cellNode","clientY","operationMenu","theme","tableToolTip","colIds","cellCount","clipboard","addMatcher","delta","_delta$ops$0$attribut","_delta$ops$0$insert","ops","colDelta","hasCol","originTableWidth","isFull","fullWidth","insert","defaultColWidth","id","blotName_tableCol","_delta$slice$ops$","colIndex","compose","retain","blotName_tableCellInner","_this","_callee3","selector","_context3","t0","sent","createSelect","_e$detail","detail","insertTable","_this2","_callee4","_context4","active","findIndex","closeSelecte","selectDom","selectBlock","r","c","selectItem","selectCustom","sendTableData","_ref4","dispatchEvent","CustomEvent","updateSelectBlockItems","_selectDom$dataset","querySelectorAll","childs","_e$target$dataset","removeAttribute","_selectDom$dataset2","then","_ref5","showTableSelector","rows","columns","Error","focus","currentBlot","getLeaf","isForbidInTable","fill","_getComputedStyle","paddingLeft","paddingRight","memo","updateContents","sources","USER","setSelection","API","findTable","isDown","selectTds","findTd","baseTr","baseTrRowspan","allColIds","foreachTr","newCellColId","indexDiff","clear","size","has","curCellColIds","delete","newRowId","newRow","insertColId","tdInner","block","_selectTds$reduce","_selectTds$reduce2","rowIds","afterCell","Map","rowIndexInSelected","set","nextRow","lastTd","tdBlot","_afterCell$get","get","newTd","newTdInner","isRight","baseColId","cols","newColId","baseColIndex","newCol","beforeTarget","stopIndex","skipRow","colspanIncrease","beforeCell","colIndexInSelected","tds","_tds$reduce","_tds$reduce2","firstSelectColIndex","lastSelectColIndex","counts","rowCount","values","colCount","mergedCell","deleteCount","startDeleteIndex","styles","cells","tableCantInsert","isForbidInTableBlot","current","createEventName","rewirteFormats"],"mappings":"m3RAAO,IAAMA,EAAe,cCAfC,EACA,UADAA,EAEK,eAFLA,EAGF,QAHEA,EAIM,WAJNA,EAKC,MALDA,EAME,QANFA,EAOC,KAPDA,EAQE,KARFA,EASO,iBAEPC,EACF,QAEEC,EACF,QCbEC,EAAWA,IAAMC,KAAKC,SAASC,SAAS,IAAIC,MAAM,GAE3DC,EAAS,IACAC,EAAS,WAAoE,IAAAC,EAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAA1DG,EAAKJ,EAALI,MAAKC,EAAAL,EAAEM,OAAAA,OAAM,IAAAD,EAAGE,SAASC,KAAIH,EAAAI,EAAAT,EAAEU,YAAAA,OAAW,IAAAD,EAAG,OAAQA,EACpEE,EAAWL,EACXP,EAASQ,SAASK,cAAc,OACtCb,EAAOc,UAAUC,IAAI,UACrBf,EAAOgB,MAAMC,OAASlB,EACtB,IAAMmB,EAAUV,SAASK,cAAc,OAGvC,GAFAK,EAAQJ,UAAUC,IAAI,kBACtBf,EAAOmB,YAAYD,GACfb,EAAO,CACP,IAAMe,EAAUZ,SAASK,cAAc,OACvCO,EAAQN,UAAUC,IAAI,kBACtBK,EAAQD,YAAYd,GACpBa,EAAQC,YAAYC,GACpBA,EAAQC,QAAWC,IACfA,EAAEC,iBAAiB,CAE1B,CAED,IAAMC,EAAiBC,iBAAiBb,GAAUc,SAClDd,EAASI,MAAMU,SAAW,SAE1Bd,EAASO,YAAYnB,GACrB,IAAM2B,EAAQA,KACVhB,IACAX,EAAO4B,SACPhB,EAASI,MAAMU,SAAWF,CAAc,EAK5C,OAHAxB,EAAOqB,QAAUM,EACjB5B,GAAU,EAEH,CAAEC,SAAQ2B,QACrB,EAaaE,EAAkBA,CAACC,EAAOC,KACnCA,EAAQC,OAASD,EAAQC,KAAO,QAChCD,EAAQE,QAAUF,EAAQE,MAAQ,IAElC,IAAMC,EAAY1B,SAASK,cAAc,OAGzC,GAFAqB,EAAUpB,UAAUC,IAAI,cAEpBe,EAAO,CACP,IAAMK,EAAa3B,SAASK,cAAc,QAC1CsB,EAAWrB,UAAUC,IAAI,eACzBoB,EAAWC,UAAYN,EACvBI,EAAUf,YAAYgB,EACzB,CAED,IAAME,EAAa7B,SAASK,cAAc,OAC1CwB,EAAWvB,UAAUC,IAAI,eACzB,IAAMuB,EAAQ9B,SAASK,cAAc,SACrC,IAAK,IAAM0B,KAAOR,EACdO,EAAME,aAAaD,EAAKR,EAAQQ,KAEhCR,EAAQU,KAAOV,EAAQW,MACvBJ,EAAMK,iBAAiB,QAAQ,KACvBZ,EAAQU,KAAOV,EAAQU,KAAOH,EAAML,QACpCK,EAAML,MAAQF,EAAQU,KAEtBV,EAAQW,KAAOX,EAAQW,KAAOJ,EAAML,QACpCK,EAAML,MAAQF,EAAQW,IACzB,IAITL,EAAWlB,YAAYmB,GACvBJ,EAAUf,YAAYkB,GAEtBC,EAAMM,QAAU,KACZP,EAAWvB,UAAUC,IAAI,QAAQ,EAErCuB,EAAMO,OAAS,KACXR,EAAWvB,UAAUc,OAAO,QAAQ,EAGxC,IAAMkB,EAAYC,IACd,GAAIV,EAAWvB,UAAUkC,SAAS,SAC9BX,EAAWY,cAAc,cAAcb,UAAYW,MAChD,CACH,IAAMD,EAAWtC,SAASK,cAAc,QACxCiC,EAAShC,UAAUC,IAAI,aACvB+B,EAASV,UAAYW,EACrBV,EAAWlB,YAAY2B,EAC1B,CAEDT,EAAWvB,UAAUC,IAAI,SAMzB,MAAO,CAAEmC,YAJWA,KAChBb,EAAWvB,UAAUc,OAAO,SAC5BkB,EAASlB,QAAQ,EAEC,EAG1B,MAAO,CAAEuB,KAAMjB,EAAWI,QAAOQ,WAAU,EAUlCM,EAAgB,WAAA,IAAAC,EAAAC,EAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvE,UAAA,OAAAqD,IAAAmB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAkCH,OAlCUnB,EAAGe,EAAAtE,OAAA,QAAAC,IAAAqE,EAAA,GAAAA,EAAA,GAAG,EAAGd,EAAGc,EAAAtE,OAAA,QAAAC,IAAAqE,EAAA,GAAAA,EAAA,GAAG,GAC5Cb,EAAMpD,SAASK,cAAc,QAC/BC,UAAUC,IAAI,eACZ8C,EAAerD,SAASK,cAAc,QAC/BC,UAAUC,IAAI,wBAAwB+C,EAM/CjC,EAAgB,MAAO,CAAEG,KAAM,SAAUC,MAAOyB,EAAKjB,IAAK,KAHpDsB,EAAOD,EAAbX,KACOa,EAAQF,EAAfxB,MACU2B,EAAWH,EAArBhB,SAAQoB,EAMRrC,EAAgB,MAAO,CAAEG,KAAM,SAAUC,MAAO0B,EAAKlB,IAAK,KAHpD0B,EAAOD,EAAbf,KACOiB,EAAQF,EAAf5B,MACU+B,EAAWH,EAArBpB,SAGJe,EAAa1C,YAAY4C,GACzBF,EAAa1C,YAAYgD,GACzBP,EAAIzC,YAAY0C,IAEVS,EAAU9D,SAASK,cAAc,QAC/BC,UAAUC,IAAI,mBAEhBwD,EAAa/D,SAASK,cAAc,WAC/BC,UAAUC,IAAI,qBAAsB,WAC/CwD,EAAWnC,UAAY,WAEjBoC,EAAYhE,SAASK,cAAc,WAC/BC,UAAUC,IAAI,qBAAsB,UAC9CyD,EAAUpC,UAAY,SAEtBkC,EAAQnD,YAAYoD,GACpBD,EAAQnD,YAAYqD,GACpBZ,EAAIzC,YAAYmD,GAASK,EAAAG,OAElB,SAAA,IAAIC,SAAQ,CAACC,EAASC,KACzB,IAAQtD,EAAU3B,EAAO,CAAEK,MAAOuD,EAAKjD,YAAasE,IAA5CtD,MAER4C,EAAWlD,QAAOiC,EAAAC,IAAAC,MAAG,SAAA0B,IAAA,IAAAxB,EAAAC,EAAA,OAAAJ,IAAAmB,MAAA,SAAAS,GAAA,cAAAA,EAAAP,KAAAO,EAAAN,MAAA,KAAA,EAEiB,GAD5BnB,EAAM0B,OAAOpB,EAAS/B,OACtB0B,EAAMyB,OAAOhB,EAASnC,SAExBoD,MAAM3B,IAAQA,GAAO,GAAC,CAAAyB,EAAAN,KAAA,EAAA,KAAA,CAAA,OAAAM,EAAAL,gBACfb,EAAY,mBAAiB,KAAA,EAAA,KAEpCoB,MAAM1B,IAAQA,GAAO,GAAC,CAAAwB,EAAAN,KAAA,EAAA,KAAA,CAAA,OAAAM,EAAAL,gBACfT,EAAY,mBAAiB,KAAA,EAExCW,EAAQ,CAAEtB,MAAKC,QACfhC,IAAQ,KAAA,EAAA,IAAA,MAAA,OAAAwD,EAAAG,OAAA,GAAAJ,EAAA,KAEZV,EAAUnD,QAAU,KAChBM,GAAO,CACV,KACH,KAAA,GAAA,IAAA,MAAA,OAAAgD,EAAAW,OAAA,GAAA7B,EAAA,KACL,OAAA,WAxD4B,OAAAJ,EAAAkC,MAAAC,KAAAtF,UAAA,CAAA,CAAA,GAqItB,SAASuF,EAAIC,EAASC,GACzB,GAAqB,iBAAVA,EACP,IAAK,IAAIC,KAAQD,EACbD,EAAQ1E,MAAM4E,GAAQD,EAAMC,EAGxC,CAEO,SAASC,EAAgBC,EAAYC,GACxC,IAAIC,EAAgBD,EAAUE,wBAE9B,MAAO,CACHC,EAAGJ,EAAWI,EAAIF,EAAcE,EAAIH,EAAUI,WAC9CC,EAAGN,EAAWM,EAAIJ,EAAcI,EAAIL,EAAUM,UAC9CC,GAAIR,EAAWI,EAAIF,EAAcE,EAAIH,EAAUI,WAAaL,EAAWS,MACvEC,GAAIV,EAAWM,EAAIJ,EAAcI,EAAIL,EAAUM,UAAYP,EAAWW,OACtEF,MAAOT,EAAWS,MAClBE,OAAQX,EAAWW,OAE3B,CAEO,SAASC,EAAyBC,EAAWC,GAChD,IAAIV,EAAIvG,KAAK+C,IAAIiE,EAAUT,EAAGU,EAAQV,EAAGS,EAAUT,EAAIS,EAAUJ,MAAQ,EAAGK,EAAQV,EAAIU,EAAQL,MAAQ,GACpGD,EAAK3G,KAAK8C,IAAIkE,EAAUT,EAAGU,EAAQV,EAAGS,EAAUT,EAAIS,EAAUJ,MAAQ,EAAGK,EAAQV,EAAIU,EAAQL,MAAQ,GACrGH,EAAIzG,KAAK+C,IAAIiE,EAAUP,EAAGQ,EAAQR,EAAGO,EAAUP,EAAIO,EAAUF,OAAS,EAAGG,EAAQR,EAAIQ,EAAQH,OAAS,GACtGD,EAAK7G,KAAK8C,IAAIkE,EAAUP,EAAGQ,EAAQR,EAAGO,EAAUP,EAAIO,EAAUF,OAAS,EAAGG,EAAQR,EAAIQ,EAAQH,OAAS,GAK3G,MAAO,CAAEP,IAAGI,KAAIF,IAAGI,KAAID,MAHXD,EAAKJ,EAGaO,OAFjBD,EAAKJ,EAGtB,CAKO,SAASS,EAAWC,GACvB,MAAsB,mBAARA,CAClB,CC/RA,IAAMC,EAAqB,CACvBC,iBAAkB,CACdC,KAAM,UACNC,OAAAA,GACI,IAAMC,EAAc3B,KAAK4B,MAAMC,UAAU7H,GACzC2H,EAAYG,YACZH,EAAYI,gBACf,GAELC,kBAAmB,CACfP,KAAM,UACNC,OAAAA,GACI,IAAMC,EAAc3B,KAAK4B,MAAMC,UAAU7H,GACzC2H,EAAYG,WAAU,GACtBH,EAAYI,gBACf,GAELE,aAAc,CACVR,KAAM,UACNC,OAAAA,GACI,IAAMC,EAAc3B,KAAK4B,MAAMC,UAAU7H,GACzC2H,EAAYO,YACZP,EAAYI,gBACf,GAELI,gBAAiB,CACbV,KAAM,UACNW,UAAU,EACVV,OAAAA,GACI,IAAMC,EAAc3B,KAAK4B,MAAMC,UAAU7H,GACzC2H,EAAYO,WAAU,GACtBP,EAAYI,gBACf,GAELM,UAAW,CACPZ,KAAM,QACNC,OAAAA,GACI,IAAMC,EAAc3B,KAAK4B,MAAMC,UAAU7H,GACzC2H,EAAYU,YACZV,EAAYI,gBACf,GAELO,UAAW,CACPb,KAAM,QACNC,OAAAA,GACI,IAAMC,EAAc3B,KAAK4B,MAAMC,UAAU7H,GACzC2H,EAAYW,YACZX,EAAYI,gBACf,GAELQ,YAAa,CACTd,KAAM,OACNW,UAAU,EACVV,OAAAA,GACI,IAAMC,EAAc3B,KAAK4B,MAAMC,UAAU7H,GACzC2H,EAAYY,cACZZ,EAAYI,gBACf,GAELS,UAAW,CACPf,KAAM,QACNW,UAAU,EACVV,OAAAA,GACI,IAAMC,EAAc3B,KAAK4B,MAAMC,UAAU7H,GACzC2H,EAAYc,aACZd,EAAYI,gBACf,GAELW,mBAAoB,CAChBjB,KAAM,SACNkB,eAAe,EACfjB,OAAAA,CAAQkB,GACgB5C,KAAK4B,MAAMC,UAAU7H,GAC7B6I,SAAS,CAAEC,gBAAiBF,GAAS5C,KAAK+C,YACzD,GAELC,qBAAsB,CAClBvB,KAAM,SACNC,OAAAA,GACwB1B,KAAK4B,MAAMC,UAAU7H,GAC7B6I,SAAS,CAAEC,gBAAiB,MAAQ9C,KAAK+C,YACxD,GAELE,eAAgB,CACZxB,KAAM,SACNkB,eAAe,EACfjB,OAAAA,CAAQkB,GACgB5C,KAAK4B,MAAMC,UAAU7H,GAC7B6I,SAAS,CAAEK,YAAaN,GAAS5C,KAAK+C,YACrD,GAELI,iBAAkB,CACd1B,KAAM,SACNC,OAAAA,GACwB1B,KAAK4B,MAAMC,UAAU7H,GAC7B6I,SAAS,CAAEK,YAAa,MAAQlD,KAAK+C,YACpD,IAkBF,MAAMK,EACTC,WAAAA,CAAYC,EAAQ1B,GAAqB,IAAdrF,EAAO7B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAA,EACjCsF,KAAKuD,MAAQD,EAAOC,MACpBvD,KAAK4B,MAAQA,EACb5B,KAAKzD,QAAUA,EACf,IAAMoF,EAAc3B,KAAK4B,MAAMC,UAAU7H,GACzCgG,KAAKwD,eAAiB7B,EAAY6B,eAClCxD,KAAKyD,UAAY,GACjBzD,KAAK0D,iBAEL1D,KAAK2D,SAAW3D,KAAKwD,eAAeG,SACpC3D,KAAK+C,YAAc/C,KAAKwD,eAAeT,YAEvC/C,KAAK4D,eAAiB5D,KAAK6D,QAAQC,KAAK9D,MACxCA,KAAK+D,YAAYT,GAEjBtI,SAASmC,iBAAiB,QAAS6C,KAAK4D,gBAAgB,EAC3D,CAEDF,cAAAA,GAAiB,IAAAM,EAAAC,EACmBC,EAAAC,EAAhC,GAAgBH,QAAhBA,EAAIhE,KAAKzD,eAALyH,IAAYA,GAAZA,EAAcI,aACdpE,KAAKyD,UAA+B,QAAtBS,EAAe,QAAfC,EAAGnE,KAAKzD,eAAL4H,IAAYA,OAAZA,EAAAA,EAAcE,aAAKH,IAAAA,EAAAA,EAAI,CAAA,OACrC,GAAgB,QAAhBD,EAAIjE,KAAKzD,eAAO,IAAA0H,GAAZA,EAAcK,YAAa,CAAA,IAAAC,EAAAC,EAClCxE,KAAKyD,UAAYzD,KAAKyE,gBAAmC,QAApBF,EAAa,QAAbC,EAACxE,KAAKzD,eAAO,IAAAiI,OAAA,EAAZA,EAAcH,aAAK,IAAAE,EAAAA,EAAI,CAAA,EACzE,MACYvE,KAAKyD,UAAYlC,CAExB,CAIDkD,eAAAA,GAAkB,IAAAC,EACd,GAAiB,QAAbA,EAAC1E,KAAKzD,eAAO,IAAAmI,IAAZA,EAAcJ,YAAa,OAAO/C,EAEvC,IADA,IAAMoD,EAAeC,EAAA,CAAA,EAAQrD,GAC7BsD,EAAA,EAAAC,EAAqCC,OAAOC,QAAoB,QAAbC,EAACjF,KAAKzD,eAAO,IAAA0I,OAAA,EAAZA,EAAcZ,OAAMQ,EAAAC,EAAAnK,OAAAkK,IAAE,CAAA,IAAAI,EAArEC,EAAAC,EAAAL,EAAAD,GAAA,GAAOlH,EAAIuH,EAAA,GAAEE,EAAcF,EAAA,GAC5BP,EAAgBhH,GAAQoH,OAAOM,OAAMT,EAAA,CAAA,EAAMD,EAAgBhH,IAASyH,EACvE,CACD,OAAOT,CACV,CAEDW,eAAAA,CAAeC,GAAgB,IAAbC,EAAID,EAAJC,KAAMC,EAAGF,EAAHE,IACdjF,EAAgBR,KAAK4B,MAAMrB,UAAUE,wBACrCiF,EAAW1F,KAAKE,QAAQO,wBAC1BkF,EAAUH,EAAOhF,EAAcgF,KAC/BI,EAASH,EAAMjF,EAAciF,IAC7BE,EAAUD,EAAS3E,MAAQP,EAAcO,QACzC4E,EAAUnF,EAAcO,MAAQ2E,EAAS3E,OAEzC6E,EAASF,EAASzE,OAAST,EAAcS,SACzC2E,EAASpF,EAAcS,OAASyE,EAASzE,QAE7C8D,OAAOM,OAAOrF,KAAKE,QAAQ1E,MAAO,CAC9BgK,KAAIK,GAAAA,OAAKF,EAAW,MACpBF,IAAG,GAAAI,OAAKD,EAAM,OAErB,CAED7B,WAAAA,CAAW+B,GAAQA,EAALvC,MAAUuC,EAAH5H,IAAS4H,EAAJC,KAAmB,IAAbP,EAAIM,EAAJN,KAAMC,EAAGK,EAAHL,IAClCzF,KAAKE,QAAUlF,SAASK,cAAc,OACtC2E,KAAKE,QAAQ5E,UAAUC,IAAI,2BAE3B0E,EAAID,KAAKE,QAAS,CACd8F,SAAU,WACV,aAAY,GAAAH,OA9EA,IA8EoB,QAGpC,IAAAI,IAAAA,IAAAC,EAA2BnB,OAAOC,QAAQhF,KAAKyD,WAAUwC,EAAAC,EAAAvL,OAAAsL,IAAE,CAAtD,IAAAE,EAAAhB,EAAAe,EAAAD,GAAA,GAAOG,EAAID,EAAA,GAAExI,EAAIwI,EAAA,GACdxI,EAAK0I,UACLrG,KAAKE,QAAQvE,YAAY2K,EAAgB3I,EAAK0I,WAGlDrG,KAAKE,QAAQvE,YAAYqE,KAAKuG,gBAAgBxB,OAAOM,OAAO,CAAA,EAAI9D,EAAmB6E,GAAOzI,KAEtFA,EAAKyE,UACLpC,KAAKE,QAAQvE,YAAY6K,IAEhC,CAKD,SAASA,IACL,IAAMC,EAAWzL,SAASK,cAAc,OAExC,OADAoL,EAASnL,UAAUC,IAAI,oCAChBkL,CACV,CAGD,SAASH,EAAgBI,GACrB,IAAML,EAAWrL,SAASK,cAAc,OAGxC,OAFAgL,EAAS/K,UAAUC,IAAI,oCACvB8K,EAASzJ,UAAY8J,EACdL,CACV,CAfDrG,KAAK4B,MAAMrB,UAAU5E,YAAYqE,KAAKE,SACtCF,KAAKsF,gBAAgB,CAAEE,OAAMC,OAehC,CAED5B,OAAAA,GAGI,OAFA7D,KAAKE,QAAQ9D,SACbpB,SAAS2L,oBAAoB,QAAS3G,KAAK4D,gBAAgB,GACpD,IACV,CAED2C,eAAAA,CAAeK,GAA4C,IAAzCnF,EAAImF,EAAJnF,KAAMoF,EAAOD,EAAPC,QAASnF,EAAOkF,EAAPlF,QAASiB,EAAaiE,EAAbjE,cAChCmE,EAAO9L,SAASK,cAAcsH,EAAgB,QAAU,OAG9D,GAFAmE,EAAKxL,UAAUC,IAAI,gCAEfsL,EAAS,CACT,IAAME,EAAW/L,SAASK,cAAc,QACxC0L,EAASzL,UAAUC,IAAI,gCACvBwL,EAASC,UAAYH,EACrBC,EAAKnL,YAAYoL,EACpB,CAED,GDwDkB,iBCxDLtF,EAAO,CAChB,IAAMwF,EAAWjM,SAASK,cAAc,QACxC4L,EAAS3L,UAAUC,IAAI,gCACvB0L,EAASrK,UAAY6E,EACrBqF,EAAKnL,YAAYsL,EAC7B,MAAe,GAAI5F,EAAWI,GAAO,CACzB,IAAIyF,EAAQzF,EAAK0F,KAAKnH,OD0D3B,SAAiBsB,GACpB,OAAO8F,MAAMC,QAAQ/F,EACzB,EC3DiB+F,CAAQH,KACTA,EAAQ,CAACA,IAEbA,EAAMI,KAAKC,GAAQT,EAAKnL,YAAY4L,IACvC,CAGD,GAAI5E,EAAe,CACf,IAAM7F,EAAQ9B,SAASK,cAAc,SACrCyB,EAAMN,KAAO,QACbuI,OAAOM,OAAOvI,EAAMtB,MAAO,CACvBuF,MAAO,EACPE,OAAQ,EACRuG,QAAS,EACTC,OAAQ,IAERpG,EAAWK,KACXoF,EAAK3J,iBAAiB,SAAUrB,GAAMA,EAAEC,oBACxCe,EAAMK,iBACF,SACA,KACIuE,EAAQyF,KAAKnH,KAAMlD,EAAML,MAAM,IAEnC,IAGRqK,EAAKnL,YAAYmB,EAC7B,MACYuE,EAAWK,IAAYoF,EAAK3J,iBAAiB,QAASuE,EAAQoC,KAAK9D,OAAO,GAE9E,OAAO8G,CACV,EC1QL,IAAMY,EAAYC,EAAMC,OAAO,mBACzBC,EAAYF,EAAMC,OAAO,aAE/B,MAAME,UAAwBJ,EAC1BK,QAAAA,GACIC,MAAMD,WACN,IAAM1I,EAAOW,KAAKX,KAEN,MAARA,GACAA,EAAKD,OAASY,MACdX,EAAK4I,QAAQlO,WAAaiG,KAAKiI,QAAQlO,UACvCsF,EAAKa,QAAQgI,UAAYlI,KAAKE,QAAQgI,UAEtC7I,EAAK8I,aAAanI,MAClBX,EAAKjD,SAEZ,CAEDgM,QAAAA,CAASC,EAAO1N,GACE,IAAV0N,GAAe1N,IAAWqF,KAAKrF,UAC/BqF,KAAKsI,OAAOlM,SAEhB4D,KAAKuI,SAASC,UAAUH,EAAO1N,GAAQ,SAAUE,EAAO4N,EAAQ9N,GAC5DE,EAAMuN,SAASK,EAAQ9N,EACnC,GACK,EAELmN,EAAgB/N,SAAWA,EAC3B+N,EAAgBI,QAAU,QAC1BJ,EAAgBY,MAAQb,EAAUc,MAAMC,WC7BxC,IAAMlB,EAAYC,EAAMC,OAAO,mBACzBC,EAAYF,EAAMC,OAAO,aAE/B,MAAMiB,UAAoBnB,EACtB,aAAOoB,GAEH,OADad,MAAMc,QAEtB,CAEDC,YAAAA,CAAaC,EAAMC,GACXD,EAAKf,QAAQlO,UAAYiG,KAAKiI,QAAQlO,SACtCiO,MAAMe,aAAaC,EAAKT,SAASW,KAAMD,GAEvCjB,MAAMe,aAAaC,EAAMC,EAEhC,CAEDE,MAAAA,CAAO/C,EAAM3J,GACTuD,KAAKuI,SAASa,KAAKD,OAAO/C,EAAM3J,EACnC,CAED4M,OAAAA,CAAQtO,GACJ,GAAIA,EAAOkN,QAAQlO,WAAaiG,KAAKiI,QAAQlO,SAAU,CACnD,IAAM4D,EAAOkK,EAAUiB,OAAO9I,KAAKiI,QAAQqB,cAC3CvO,EAAOoN,aAAaxK,GACpBqC,KAAKrE,YAAYgC,EACpB,CACoB,MAAjB5C,EAAOuN,QACXN,MAAMqB,QAAQtO,EACjB,EAGL8N,EAAY9O,SAAWA,EACvB8O,EAAYX,QAAU,UACtBW,EAAYH,MAAQb,EAAUc,MAAMC,WACpCC,EAAYS,aAAe,QClC3B,IAAMzB,EAAYF,EAAMC,OAAO,aAE/B,MAAM2B,UAA6BV,EAC/B,aAAOC,CAAOrM,GACV,IAAQ+M,EAAmD/M,EAAnD+M,QAASC,EAA0ChN,EAA1CgN,MAAOC,EAAmCjN,EAAnCiN,MAAOC,EAA4BlN,EAA5BkN,QAASC,EAAmBnN,EAAnBmN,QAASpO,EAAUiB,EAAVjB,MAC3CsL,EAAOkB,MAAMc,SAOnB,OANAhC,EAAK+C,QAAQL,QAAUA,EACvB1C,EAAK+C,QAAQJ,MAAQA,EACrB3C,EAAK+C,QAAQH,MAAQA,EACrB5C,EAAK+C,QAAQF,QAAUA,GAAW,EAClC7C,EAAK+C,QAAQD,QAAUA,GAAW,EAClC9C,EAAKgD,OAAStO,EACPsL,CACV,CAGDiD,eAAAA,GACI/J,KAAKuI,SAASyB,SAASnP,IACnBA,EAAMoP,MAAQ,EAAE,GAEvB,CAED,SAAIR,GACA,OAAOzJ,KAAKE,QAAQ2J,QAAQJ,KAC/B,CACD,SAAIC,GACA,OAAO1J,KAAKE,QAAQ2J,QAAQH,KAC/B,CACD,WAAIC,GACA,OAAO/J,OAAOI,KAAKE,QAAQ2J,QAAQF,QACtC,CACD,WAAIA,CAAQlN,GACRuD,KAAKsI,SAAWtI,KAAKsI,OAAOqB,QAAUlN,GACtCuD,KAAKE,QAAQ2J,QAAQF,QAAUlN,EAC/BuD,KAAK+J,iBACR,CACD,WAAIH,GACA,OAAOhK,OAAOI,KAAKE,QAAQ2J,QAAQD,QACtC,CACD,WAAIA,CAAQnN,GACRuD,KAAKsI,SAAWtI,KAAKsI,OAAOsB,QAAUnN,GACtCuD,KAAKE,QAAQ2J,QAAQD,QAAUnN,EAC/BuD,KAAK+J,iBACR,CACD,SAAIvO,CAAMiB,GACNuD,KAAKsI,OAAO9M,MAAQiB,EACpBuD,KAAKE,QAAQ4J,OAAS9J,KAAKsI,OAAO9M,MAClCwE,KAAK+J,iBACR,CAEDV,OAAAA,CAAQtO,GACJ,GAAIA,EAAOkN,QAAQlO,WAAaiG,KAAKiI,QAAQlO,SAAU,CACnD,IAAMmQ,EAAcnP,EAAOoP,QAC3BpP,EAAOoN,aAAa+B,GACpBlK,KAAKrE,YAAYuO,GACjBnP,EAAOuN,OAAOS,aAAa/I,KAAMjF,EAAOsE,MACxCtE,EAAOqB,QACnB,MACY4L,MAAMqB,QAAQtO,EAErB,CAEDoO,MAAAA,CAAO/C,EAAM3J,GACTuL,MAAMmB,OAAO/C,EAAM3J,GACnBuD,KAAK+J,iBACR,CAEDK,OAAAA,GACI,IAAAC,EAAoDrK,KAAKE,QAAQ2J,QAAzDL,EAAOa,EAAPb,QAASC,EAAKY,EAALZ,MAAOC,EAAKW,EAALX,MAAOC,EAAOU,EAAPV,QAASC,EAAOS,EAAPT,QACxC,MAAO,CACH,CAAC5J,KAAKiI,QAAQlO,UAAW,CACrByP,UACAC,QACAC,QACAC,UACAC,UACApO,MAAOwE,KAAKE,QAAQ4J,QAG/B,CAED/B,QAAAA,GACIC,MAAMD,WAEN,IAAMO,EAAStI,KAAKsI,OAEpBgC,EAAoDtK,KAAKE,QAAQ2J,QAAzDL,EAAOc,EAAPd,QAASE,EAAKY,EAALZ,MAAOD,EAAKa,EAALb,MAAOE,EAAOW,EAAPX,QAASC,EAAOU,EAAPV,QACxC,GAAc,MAAVtB,GAAkBA,EAAOL,QAAQlO,UAAYA,EAAoB,CACjE,IAAMiE,EAAO6J,EAAUiB,OAAO,SAE9B9I,KAAKsI,OAAOS,aAAa/K,EAAMgC,KAAKX,MACpC,IAAMkL,EAAe1C,EAAUiB,OAAO/O,EAAuByP,GACvDjG,EAAQsE,EAAUiB,OAAO/O,EAAgByP,GACzCgB,EAAY3C,EAAUiB,OAAO/O,GAC7B0Q,EAAK5C,EAAUiB,OAAO/O,EAAmB0P,GACzCiB,EAAK7C,EAAUiB,OAAO/O,EAAoB,CAC5CyP,UACAC,QACAC,QACAC,UACAC,UACApO,MAAOwE,KAAKE,QAAQ4J,SAGxBY,EAAG/O,YAAYqE,MACfyK,EAAG9O,YAAY+O,GACfF,EAAU7O,YAAY8O,GACtBlH,EAAM5H,YAAY6O,GAClBD,EAAa5O,YAAY4H,GAEzBgH,EAAalB,QAAQrL,EACxB,CAED,IAAMqB,EAAOW,KAAKX,KAEN,MAARA,GAAgBA,EAAKD,OAASY,MAAQX,EAAK4I,QAAQlO,WAAaiG,KAAKiI,QAAQlO,WAC7EsF,EAAK8I,aAAanI,MAClBX,EAAKjD,SAEZ,EAGLmN,EAAqBxP,SAAWA,EAChCwP,EAAqBrB,QAAU,IAC/BqB,EAAqBoB,UAAY,sBC5HjC,IAAM9C,EAAYF,EAAMC,OAAO,aACzBF,EAAYC,EAAMC,OAAO,mBAE/B,MAAMgD,UAAwBlD,EAC1B,aAAOoB,CAAOrM,GACV,IAAQgN,EAA0ChN,EAA1CgN,MAAOC,EAAmCjN,EAAnCiN,MAAOC,EAA4BlN,EAA5BkN,QAASC,EAAmBnN,EAAnBmN,QAASpO,EAAUiB,EAAVjB,MAClCsL,EAAOkB,MAAMc,SAMnB,OALAhC,EAAK+C,QAAQJ,MAAQA,EACrB3C,EAAK+C,QAAQH,MAAQA,EACrB5C,EAAK9J,aAAa,UAAW2M,GAAW,GACxC7C,EAAK9J,aAAa,UAAW4M,GAAW,GACxC9C,EAAKtL,MAAMqP,QAAUrP,EACdsL,CACV,CAED,SAAI2C,GACA,OAAOzJ,KAAKE,QAAQ2J,QAAQJ,KAC/B,CACD,SAAIC,GACA,OAAO1J,KAAKE,QAAQ2J,QAAQH,KAC/B,CACD,WAAIC,GACA,OAAO/J,OAAOI,KAAKE,QAAQ4K,aAAa,WAC3C,CACD,WAAInB,CAAQlN,GACRuD,KAAKE,QAAQlD,aAAa,UAAWP,EACxC,CACD,WAAImN,GACA,OAAOhK,OAAOI,KAAKE,QAAQ4K,aAAa,WAC3C,CACD,WAAIlB,CAAQnN,GACRuD,KAAKE,QAAQlD,aAAa,UAAWP,EACxC,CACD,SAAIjB,GACA,OAAOwE,KAAKE,QAAQ1E,MAAMqP,OAC7B,CACD,SAAIrP,CAAMiB,GACNsI,OAAOM,OAAOrF,KAAKE,QAAQ1E,MAAOiB,EACrC,CAEDsO,YAAAA,GACI,OAAO/K,KAAKgL,YAAYzB,GAAsB,EACjD,CAEDxB,QAAAA,GACIC,MAAMD,WACN,IAAAkD,EAAyBjL,KAAKE,QAAQ2J,QAA9BH,EAAKuB,EAALvB,MAAOD,EAAKwB,EAALxB,MACTpK,EAAOW,KAAKX,KAEN,MAARA,GACAA,EAAKD,OAASY,MACdX,EAAK4I,QAAQlO,WAAaiG,KAAKiI,QAAQlO,UACvCsF,EAAKa,QAAQ2J,QAAQJ,QAAUA,GAC/BpK,EAAKa,QAAQ2J,QAAQH,QAAUA,IAE/BrK,EAAK8I,aAAanI,MAClBX,EAAKjD,SAEZ,CAEDgM,QAAAA,CAASC,EAAO1N,GACZ,GAAc,IAAV0N,GAAe1N,IAAWqF,KAAKrF,SAAU,CACzC,IAAMoL,EAAO/F,KAAKX,MAAQW,KAAKZ,KACzB8L,EAAYnF,GAAQA,EAAKgF,eAI/B,OAHIG,IACAA,EAAUtB,SAAW5J,KAAK4J,SAEvB5J,KAAK5D,QACf,CACD4D,KAAKuI,SAASC,UAAUH,EAAO1N,GAAQ,SAAUE,EAAO4N,EAAQ9N,GAC5DE,EAAMuN,SAASK,EAAQ9N,EACnC,GACK,EAGLiQ,EAAgB7Q,SAAWA,EAC3B6Q,EAAgB1C,QAAU,KAC1B0C,EAAgBD,UAAY,gBAC5BC,EAAgBlC,MAAQb,EAAUc,MAAMC,WC/ExC,IAAMf,EAAYF,EAAMC,OAAO,aACZD,EAAMC,OAAO,qBAClBD,EAAMC,OAAO,eACTD,EAAMC,OAAO,mBAG/B,MAAMuD,UAAuBtC,EACzB,aAAOC,CAAOrM,GACV,IAAQsE,EAAgCtE,EAAhCsE,MAAOyI,EAAyB/M,EAAzB+M,QAASE,EAAgBjN,EAAhBiN,MAAO0B,EAAS3O,EAAT2O,KACzBtE,EAAOkB,MAAMc,SAMnB,OALAhC,EAAK9J,aAAa,WAAO6I,OAAKwF,WAAWtK,IAAM8E,OAAGuF,EAAO,IAAM,OAC/DA,GAAQtE,EAAK9J,aAAa,YAAaoO,GACvCtE,EAAK+C,QAAQL,QAAUA,EACvB1C,EAAK+C,QAAQH,MAAQA,EACrB5C,EAAK9J,aAAa,mBAAmB,GAC9B8J,CACV,CAED,SAAI/F,GACA,IAAMA,EAAQf,KAAKE,QAAQ4K,aAAa,SACxC,OAAOO,WAAWtK,EACrB,CACD,SAAIA,CAAMtE,GACN,IAAMsE,EAAQsK,WAAW5O,GACzB,OAAOuD,KAAKE,QAAQlD,aAAa,QAAO6I,GAAAA,OAAK9E,GAAK8E,OAAG7F,KAAKoL,KAAO,IAAM,MAC1E,CAED,SAAI1B,GACA,OAAO1J,KAAKE,QAAQ2J,QAAQH,KAC/B,CAED,QAAI0B,GACA,OAAOpL,KAAKE,QAAQoL,aAAa,YACpC,CAEDlB,OAAAA,GACI,IAAAmB,EAA2BvL,KAAKE,QAAQ2J,QAAhCL,EAAO+B,EAAP/B,QAASE,EAAK6B,EAAL7B,MACjB,MAAO,CACH,CAAC1J,KAAKiI,QAAQlO,UAAW,CACrByP,UACAE,QACA3I,MAAOf,KAAKE,QAAQ4K,aAAa,SACjCM,KAAMpL,KAAKE,QAAQoL,aAAa,cAG3C,CAEDvD,QAAAA,GACIC,MAAMD,WAEN,IAAMO,EAAStI,KAAKsI,OACpB,GAAc,MAAVA,GAAkBA,EAAOL,QAAQlO,UAAYA,EAAwB,CACrE,IAAMiE,EAAO6J,EAAUiB,OAAO,SAC9B9I,KAAKsI,OAAOS,aAAa/K,EAAMgC,KAAKX,MAEpC,IAAMkL,EAAe1C,EAAUiB,OAAO/O,EAAuBiG,KAAKE,QAAQ2J,QAAQL,SAC5EjG,EAAQsE,EAAUiB,OAAO/O,EAAgBiG,KAAKE,QAAQ2J,QAAQL,SAEpExJ,KAAKoL,OAAS7H,EAAM6H,MAAO,GAE3B,IAAMI,EAAgB3D,EAAUiB,OAAO/O,GAEvCyR,EAAc7P,YAAYqE,MAC1BuD,EAAM5H,YAAY6P,GAClBjB,EAAa5O,YAAY4H,GAEzBgH,EAAalB,QAAQrL,EACxB,CACD,IAAMqB,EAAOW,KAAKX,KAClBoM,EAA6CzL,KAAKE,QAAQ2J,QAAzC6B,EAAQD,EAAjBjC,QAA0BmC,EAAMF,EAAb/B,MAEf,MAARrK,GACAA,EAAK4I,QAAQlO,WAAaiG,KAAKiI,QAAQlO,UACvCsF,EAAKa,QAAQgI,UAAYlI,KAAKE,QAAQgI,SACtC7I,EAAKa,QAAQ2J,QAAQL,UAAYkC,GACjCrM,EAAKa,QAAQ2J,QAAQH,QAAUiC,IAE/BtM,EAAK8I,aAAanI,MAClBX,EAAKjD,SAEZ,EAEL+O,EAAepR,SAAWA,EAC1BoR,EAAejD,QAAU,MACzBiD,EAAezC,MAAQb,EAAUc,MAAMC,WCpFvC,IAAMlB,EAAYC,EAAMC,OAAO,mBACzBC,EAAYF,EAAMC,OAAO,aAE/B,MAAMgE,UAA4BlE,EAC9BK,QAAAA,GACIC,MAAMD,WACN,IAAM1I,EAAOW,KAAKX,KAEN,MAARA,GACAA,EAAKD,OAASY,MACdX,EAAK4I,QAAQlO,WAAaiG,KAAKiI,QAAQlO,UACvCsF,EAAKa,QAAQgI,UAAYlI,KAAKE,QAAQgI,UAEtC7I,EAAK8I,aAAanI,MAClBX,EAAKjD,SAEZ,CAEDyP,OAAAA,CAAQxD,GAIJ,IAHA,IAEIyD,EAFEzM,EAAOW,KAAKuI,SAASwD,WACvBC,EAAI,GAEAF,EAAMzM,MACN2M,IAAM3D,GAGV2D,IAEJ,OAAOF,CACV,EAELF,EAAoB7R,SAAWA,EAC/B6R,EAAoB1D,QAAU,WAC9B0D,EAAoBlD,MAAQb,EAAUc,MAAMC,WChC5C,IAAMlB,EAAYC,EAAMC,OAAO,mBACzBC,EAAYF,EAAMC,OAAO,aAE/B,MAAMqE,UAAuBvE,EACzB,aAAOoB,CAAOrM,GACV,IAAMqK,EAAOkB,MAAMc,SAEnB,OADAhC,EAAK+C,QAAQJ,MAAQhN,EACdqK,CACV,CAEDiB,QAAAA,GACIC,MAAMD,WACN,IAAM1I,EAAOW,KAAKX,KAEN,MAARA,GACAA,EAAKD,OAASY,MACdX,EAAK4I,QAAQlO,WAAaiG,KAAKiI,QAAQlO,UACvCsF,EAAKa,QAAQ2J,QAAQJ,QAAUzJ,KAAKE,QAAQ2J,QAAQJ,QAEpDpK,EAAK8I,aAAanI,MAClBX,EAAKjD,SAEZ,CAED,SAAIqN,GACA,OAAOzJ,KAAKE,QAAQ2J,QAAQJ,KAC/B,CAEDyC,gBAAAA,CAAiBC,GAIb,IAHA,IAEIL,EAFEzM,EAAOW,KAAKuI,SAASwD,WACvBC,EAAI,EAEAF,EAAMzM,KAAS,CAEnB,GAAI8M,EADqDhH,EAArC2G,EAAId,YAAYzB,GAAqB,GAAzC,GACIyC,KAAM,KAC7B,CACJ,EAGLC,EAAelS,SAAWA,EAC1BkS,EAAe/D,QAAU,KACzB+D,EAAetB,UAAY,eAC3BsB,EAAevD,MAAQb,EAAUc,MAAMC,WCzCvC,IAAMlB,EAAYC,EAAMC,OAAO,mBACzBC,EAAYF,EAAMC,OAAO,aAE/B,MAAMwE,WAAoB1E,EACtBrE,WAAAA,CAAYnD,EAASzD,GACjBuL,MAAM9H,EAASzD,GAEfuD,KAAKqM,kBACR,CAED,aAAOvD,CAAOrM,GACV,IAAMqK,EAAOkB,MAAMc,SAOnB,OALAhC,EAAK+C,QAAQL,QAAU/M,EACvBqK,EAAKxL,UAAUC,IAAI,YACnBuL,EAAK9J,aAAa,cAAe,GACjC8J,EAAK9J,aAAa,cAAe,GAE1B8J,CACV,CAEDwF,iBAAAA,GACI,IAAItM,KAAKoL,KAAT,CACA,IAAMmB,EAAWvM,KAAKuI,SAASW,KAC/B,GAAKqD,GAAYA,EAAStE,QAAQlO,WAAaA,EAA/C,CACA,IAAMyS,EAAYD,EAAShE,SAASkE,QAAO,CAACC,EAAKvO,IAAQA,EAAI4C,MAAQ2L,GAAK,GAC1E,OAAkB,IAAdF,GAAmB3M,MAAM2M,IAAcxM,KAAKoL,KAAa,MAC7DpL,KAAKE,QAAQ1E,MAAMuF,MAAQyL,EAAY,KAChCA,EAJgE,CAFxD,CAOlB,CAEDH,gBAAAA,GACIM,YAAW,KACP3M,KAAKsM,mBAAmB,GACzB,EACN,CAED,WAAI9C,GACA,OAAOxJ,KAAKE,QAAQ2J,QAAQL,OAC/B,CACD,QAAI4B,GACA,OAAOpL,KAAKE,QAAQoL,aAAa,YACpC,CACD,QAAIF,CAAK3O,GACLuD,KAAKE,QAAQzD,EAAQ,eAAiB,mBAAmB,YAAa,GACzE,CAEDmQ,OAAAA,GACI,OAAO5M,KAAKgL,YAAYiB,EAC3B,CACDY,SAAAA,GACI,OAAO7M,KAAK4M,UAAUtF,KAAKwF,GAAMA,EAAErD,OACtC,CAEDsD,OAAAA,GACI,OAAO/M,KAAKgL,YAAYG,EAC3B,CACD6B,SAAAA,GACI,OAAOhN,KAAK+M,UAAUzF,KAAKwF,GAAMA,EAAEpD,OACtC,CAED3B,QAAAA,GACIC,MAAMD,WACN,IAAI1I,EAAOW,KAAKX,KAEJ,MAARA,GACAA,EAAKD,OAASY,MACdX,EAAK4I,QAAQlO,WAAaiG,KAAKiI,QAAQlO,UACvCsF,EAAKa,QAAQgI,UAAYlI,KAAKE,QAAQgI,SACtC7I,EAAKa,QAAQ2J,QAAQL,UAAYxJ,KAAKE,QAAQ2J,QAAQL,UAEtDnK,EAAK8I,aAAanI,MAClBX,EAAKjD,SAEZ,EAGLgQ,GAAYrS,SAAWA,EACvBqS,GAAYlE,QAAU,QACtBkE,GAAY1D,MAAQb,EAAUc,MAAMC,WCjFpC,IAAMlB,GAAYC,EAAMC,OAAO,mBACzBC,GAAYF,EAAMC,OAAO,aAE/B,MAAMqF,WAA2BvF,GAC7B,aAAOoB,CAAOrM,GACV,IAAMqK,EAAOkB,MAAMc,SAqBnB,OAnBAhC,EAAK+C,QAAQL,QAAU/M,EAEvBqK,EAAK3J,iBACD,aACCrB,IACGA,EAAEoR,iBACFpR,EAAEC,iBAAiB,IAEvB,GAGJ+K,EAAKqG,OAAUrR,IACXA,EAAEoR,gBAAgB,EAGtBpG,EAAKsG,WAActR,IACfA,EAAEoR,iBACFpR,EAAEuR,aAAaC,WAAa,MAAM,EAE/BxG,CACV,CAED,WAAI0C,GACA,OAAOxJ,KAAKE,QAAQ2J,QAAQL,OAC/B,CAEDT,YAAAA,CAAaC,EAAMC,GACXD,EAAKf,QAAQlO,UAAYiG,KAAKiI,QAAQlO,SAEtCiO,MAAMe,aAAaC,EAAKT,SAASW,KAAMD,GAChCjJ,KAAKiI,QAAQsF,gBAAgBC,MAAM3S,GAAUA,EAAMd,WAAaiP,EAAKf,QAAQlO,WAEpFiO,MAAMe,aAAaC,EAAMC,GAGrBA,EACAjJ,KAAKZ,KAAOY,KAAKZ,KAAK2J,aAAaC,EAAM,MAAQhJ,KAAKsI,OAAOS,aAAaC,EAAMhJ,MAEhFA,KAAKX,KAAOW,KAAKX,KAAK0J,aAAaC,EAAMC,GAAOjJ,KAAKsI,OAAO3M,YAAYqN,EAGnF,CAEDjB,QAAAA,GACIC,MAAMD,WACN,IAAI1I,EAAOW,KAAKX,KAEJ,MAARA,GACAA,EAAKD,OAASY,MACdX,EAAK4I,QAAQlO,WAAaiG,KAAKiI,QAAQlO,UACvCsF,EAAKa,QAAQgI,UAAYlI,KAAKE,QAAQgI,SACtC7I,EAAKa,QAAQ2J,QAAQL,UAAYxJ,KAAKE,QAAQ2J,QAAQL,UAEtDnK,EAAK8I,aAAanI,MAClBX,EAAKjD,SAEZ,CAEDgM,QAAAA,CAASC,EAAO1N,GAAQ,IAAA8S,EACpBzF,MAAMI,SAASC,EAAO1N,GAEsD,QAA5E8S,EAAAzS,SAASyC,cAAa,oCAAAoI,OAAqC7F,KAAKwJ,QAAO,cAAK,IAAAiE,GAAW,QAAXA,EAA5EA,EAA8EnS,iBAAS,IAAAmS,GAAvFA,EAAyFlS,IAAI,YAChG,EAEL0R,GAAmBlT,SAAWA,EAC9BkT,GAAmB/E,QAAU,IAC7B+E,GAAmBtC,UAAY,mBAC/BsC,GAAmBvE,MAAQb,GAAUc,MAAMC,WC1E3C,IAAMf,GAAYF,EAAMC,OAAO,aACzB8F,GAAW/F,EAAMC,OAAO,qBAE9B,MAAM+F,WAAwBD,GAC1BE,WAAAA,CAAYxH,EAAM3J,GAEd,GADAuD,KAAKsI,OAAOuF,QAAQ7N,KAAKyI,OAAOzI,KAAKsI,QAAStI,KAAKrF,UAC/CyL,IAASpG,KAAKsI,OAAOL,QAAQlO,SAE7B,OADAiG,KAAKsI,OAAOsF,YAAYxH,EAAM3J,GACvBuD,KAEP,GAAIoG,IAASrM,EAAyB,CAClC,IAAI+T,EAA8B,iBAAT1H,EAAoByB,GAAUiB,OAAO1C,EAAM3J,GAAS2J,EAG7E,OAFA0H,EAAYzE,QAAQrJ,KAAKsI,QACzBtI,KAAK+N,WAAWC,KAAKF,GACdA,CACV,CACD,OAAO9F,MAAM4F,YAAYxH,EAAM3J,EAEtC,ECdL,IAAIwR,GAAgB,UAQb,MAAMC,GACT7K,WAAAA,CAAYE,EAAO3B,GAAqB,IAAdrF,EAAO7B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAA,EAChC,IAAK6I,EAAO,OAAO,KACnBvD,KAAKuD,MAAQA,EACbvD,KAAK4B,MAAQA,EACb5B,KAAKzD,QAAUA,EACfyD,KAAKmO,eAELnO,KAAK2D,SAAW,GAEhB3D,KAAK+C,YAAc,GACnB/C,KAAKoO,UAAW,EAChBpO,KAAKqO,iBAAmBrO,KAAKsO,iBAAiBxK,KAAK9D,MACnDA,KAAKuO,WAAa,KAClBvO,KAAKwO,cAAgB,GACrBxO,KAAKyO,mBAEkB,IAAIC,gBAAgB1J,IACvChF,KAAK2O,gBAAgB,IAEVC,QAAQ5O,KAAK4B,MAAMiN,MAElC7O,KAAK4B,MAAMiN,KAAK1R,iBAAiB,YAAa6C,KAAKqO,kBAAkB,GACrErO,KAAK8O,aAAe9O,KAAK2O,eAAe7K,KAAK9D,MAC7CA,KAAK4B,MAAMmN,GAAGpH,EAAMqH,OAAOC,YAAajP,KAAK8O,aAChD,CAEDX,YAAAA,GAAe,IAAAe,GACCA,QAAZA,EAAIlP,KAACzD,mBAAO2S,SAAZA,EAAcC,gBAAiBlB,GAAgBjO,KAAKzD,QAAQ4S,aAC/D,CAEDC,cAAAA,CAAeC,EAAKC,GAChBD,EAAIlS,iBAAiB,SAAUmS,GAC/BtP,KAAKwO,cAAce,KAAK,CAACF,EAAKC,GACjC,CAEDE,gBAAAA,GACI,IAAK,IAAIxD,EAAI,EAAGA,EAAIhM,KAAKwO,cAAc7T,OAAQqR,IAAK,CAChD,IAAAyD,EAAAtK,EAAoBnF,KAAKwO,cAAcxC,GAAE,GAApCqD,EAAGI,EAAA,GAAEH,EAAMG,EAAA,GAChBJ,EAAI1I,oBAAoB,SAAU2I,EACrC,CACDtP,KAAKwO,cAAgB,EACxB,CAGDC,gBAAAA,GACIzO,KAAKuO,WAAavO,KAAK4B,MAAM8N,aAAa,2BAC1CzP,EAAID,KAAKuO,WAAY,CACjB,eAAgBN,IAEvB,CAEDK,gBAAAA,CAAiBxS,GACb,GAAiB,IAAbA,EAAE6T,QAAiB7T,EAAEf,OAAO6U,QAAQ,aAAxC,CACA,IAAMC,EAAe/T,EAAEf,OAAO6U,QAAQ,aAAa/F,QAAQL,QAErDsG,EAAoBhU,IAEtB,GACiB,IAAbA,EAAE6T,QACD7T,EAAEf,OAAO6U,QAAQ,cAClB9T,EAAEf,OAAO6U,QAAQ,aAAa/F,QAAQL,UAAYqG,EAHtD,CAOA,IAAME,EAAQjU,EAAEf,OAAO6U,QAAQ,mBACzBI,EAAY3P,EAAgB0P,EAAMtP,wBAAyBT,KAAK4B,MAAMiN,KAAKoB,YACjFjQ,KAAK2D,SAAWzC,EAAyBgP,EAAaF,GACtDhQ,KAAKmQ,kBACLnQ,KAAK+C,YAAc/C,KAAKoQ,qBACxBpQ,KAAKqQ,sBAEDC,IAAYP,GACZ/P,KAAK4B,MAAM2O,MAVX,CAWH,EAGCC,EAAkB1U,IACpBd,SAASC,KAAK0L,oBAAoB,YAAamJ,GAAkB,GACjE9U,SAASC,KAAK0L,oBAAoB,UAAW6J,GAAgB,GAC7DxQ,KAAKoO,UAAW,CAAK,EAGzBpT,SAASC,KAAKkC,iBAAiB,YAAa2S,GAAkB,GAC9D9U,SAASC,KAAKkC,iBAAiB,UAAWqT,GAAgB,GAE1D,IAAMF,EAAUxU,EAAEf,OAAO6U,QAAQ,mBAC3BM,EAAc7P,EAAgBiQ,EAAQ7P,wBAAyBT,KAAK4B,MAAMiN,KAAKoB,YACrFjQ,KAAKoO,UAAW,EAChBpO,KAAK2D,SAAWzC,EAAyBgP,EAAaA,GACtDlQ,KAAKmQ,kBACLnQ,KAAK+C,YAAc/C,KAAKoQ,qBACxBpQ,KAAKqQ,sBAELrQ,KAAKoP,eAAepP,KAAKuD,MAAM0M,YAAY,KAEvCjQ,KAAKqQ,qBAAqB,IAG9B,IAAMI,EAAaA,KACfzQ,KAAK2O,iBACL3O,KAAK4B,MAAMiN,KAAKlI,oBAAoB,SAAU8J,EAAW,EAE7DzQ,KAAK4B,MAAMiN,KAAK1R,iBAAiB,SAAUsT,EAlDW,CAmDzD,CAEDL,kBAAAA,GAKI,OAJuBzI,EAAM6F,KAAKxN,KAAKuD,OAELyH,YAAYJ,GAE5B6B,QAAO,CAACiE,EAAeC,KACrC,IAAAC,EAA8BvQ,EAC1BsQ,EAAUzQ,QAAQO,wBAClBT,KAAK4B,MAAMiN,KAAKoB,YAFdvP,EAACkQ,EAADlQ,EAAGE,EAACgQ,EAADhQ,EAAGG,EAAK6P,EAAL7P,MAAOE,EAAM2P,EAAN3P,OAcnB,OATIP,EA5HI,GA4HeV,KAAK2D,SAASjD,GACjCA,EA7HI,EA6HcK,GAASf,KAAK2D,SAAS7C,IACzCF,EA9HI,GA8HeZ,KAAK2D,SAAS/C,GACjCA,EA/HI,EA+HcK,GAAUjB,KAAK2D,SAAS3C,IAG1C0P,EAAcnB,KAAKoB,EAAU5F,gBAG1B2F,CAAa,GACrB,GACN,CAEDP,eAAAA,GAE2BxI,EAAM6F,KAAKxN,KAAKuD,OACLyH,YAAYJ,GAEnCZ,SAAS2G,IAChB,IAAAE,EAAgCxQ,EAC5BsQ,EAAUzQ,QAAQO,wBAClBT,KAAK4B,MAAMiN,KAAKoB,YAFZvP,EAACmQ,EAADnQ,EAAGE,EAACiQ,EAADjQ,EAAGG,EAAK8P,EAAL9P,MAAOE,EAAM4P,EAAN5P,QAMfP,EArJE,GAqJiBV,KAAK2D,SAASjD,GAAKA,EArJpC,GAqJuDV,KAAK2D,SAAS7C,IACpEJ,EAtJD,EAsJmBK,GAASf,KAAK2D,SAASjD,GAAKA,EAtJ/C,EAsJiEK,GAASf,KAAK2D,SAAS7C,MAC1FF,EAvJE,GAuJiBZ,KAAK2D,SAAS/C,GAAKA,EAvJpC,GAuJuDZ,KAAK2D,SAAS3C,IACpEJ,EAxJD,EAwJmBK,GAAUjB,KAAK2D,SAAS/C,GAAKA,EAxJhD,EAwJkEK,GAAUjB,KAAK2D,SAAS3C,MAG9FhB,KAAK2D,SAAWzC,EAAyBlB,KAAK2D,SAAU,CAAEjD,IAAGE,IAAGG,QAAOE,WAC1E,IAELjB,KAAK8Q,QAAU9Q,KAAKuD,MAAM0M,WAAWtP,UACxC,CAED0P,mBAAAA,GACI,IAAMU,EAAsB/Q,KAAKuD,MAAM0M,WAAWtP,WAC5CE,EAAYb,KAAK4B,MAAMiN,KAAKoB,WAAWpP,UAE7CZ,EAAID,KAAKuO,WAAY,CACjByC,QAAS,QACTxL,QAAIK,OAAK7F,KAAK2D,SAASjD,GAAKV,KAAK8Q,QAAUC,GAAuB,EAAK,MACvEtL,IAAGI,GAAAA,OAAiB,EAAZhF,EAAgBb,KAAK2D,SAAS/C,EAAK,MAC3CG,MAAK,GAAA8E,OAAK7F,KAAK2D,SAAS5C,MAAQ,EAAK,MACrCE,OAAM,GAAA4E,OAAK7F,KAAK2D,SAAS1C,OAAS,EAAC,OAE1C,CAED0N,cAAAA,GACI3O,KAAK2D,SAAW,GAChB3D,KAAK+C,YAAc,GAEnB/C,KAAKuO,YACDtO,EAAID,KAAKuO,WAAY,CACjByC,QAAS,SAEjBhR,KAAKwP,kBACR,CAED3L,OAAAA,GASI,OARA7D,KAAK2O,iBACL3O,KAAKuO,WAAWnS,SAChB4D,KAAKuO,WAAa,KAClBvO,KAAKwP,mBAELxP,KAAK4B,MAAMiN,KAAKlI,oBAAoB,YAAa3G,KAAKqO,kBAAkB,GACxErO,KAAK4B,MAAMqP,IAAItJ,EAAMqH,OAAOC,YAAajP,KAAK8O,cAEvC,IACV,ECtML,IAAIoC,GAAa,GAOV,MAAMC,GACT9N,WAAAA,CAAYzB,GAAqB,IAAdrF,EAAO7B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAE0W,mBA6JpB,KACP,IAAMC,EAAOhR,EAAgBL,KAAKuD,MAAMrD,QAAQO,wBAAyBT,KAAK4B,MAAMiN,MAC9EyC,EAAWtR,KAAKuD,MAAMrD,QAAQqR,UAC9BC,EAAgBxR,KAAK4B,MAAMiN,KAAKhO,UACtCZ,EAAID,KAAK6O,KAAM,CACXpJ,IAAG,GAAAI,OAAKyL,EAAWE,EAAgBN,GAAc,MACjD1L,KAAM6L,EAAK3Q,EAAI,MACjB,IAnKFV,KAAK4B,MAAQA,EACb5B,KAAKzD,QAAUA,EACfyD,KAAKmO,eAELnO,KAAKyR,yBAA2B,GAChCzR,KAAKuK,aAAe,KACpBvK,KAAKuD,MAAQ,KACbvD,KAAK0R,WAAa,GAClB1R,KAAK2R,kBAAmB,EACxB3R,KAAK4R,UAAY,GACjB5R,KAAKwO,cAAgB,GAErBxO,KAAK6O,KAAO7O,KAAK4B,MAAM8N,aAAa,oBACpC1P,KAAK6O,KAAKrT,MAAMyF,OAASiQ,GAAa,KAEf,IAAIxC,gBAAgB1J,IACvChF,KAAK6R,OACL7R,KAAK2R,kBAAmB,EACxB3R,KAAK0R,WAAa,EAAE,IAET9C,QAAQ5O,KAAK4B,MAAMiN,MAElC7O,KAAK8R,SAAW,iBAAkBC,OAClC/R,KAAKgS,cAAgBhS,KAAK8R,SACpB,CAAEG,KAAM,aAAcC,KAAM,YAAaC,GAAI,YAC7C,CAAEF,KAAM,YAAaC,KAAM,YAAaC,GAAI,WAElDnS,KAAK6R,OACL7R,KAAKoS,QACR,CAEDjE,YAAAA,GAAe,IAAAkE,EAAAC,GACCD,QAAZA,EAAIrS,KAACzD,mBAAO8V,SAAZA,EAAcE,aAAcrB,GAAalR,KAAKzD,QAAQgW,WACtDpB,GAAaqB,iBAAmBpL,MAAMqL,KAClC,IAAIC,IAAI,IAAIvB,GAAaqB,6BAAsBF,EAAAtS,KAAKzD,eAAO,IAAA+V,OAAA,EAAZA,EAAcE,mBAAoB,KAExF,CAEDJ,MAAAA,GACIpS,KAAK4B,MAAMmN,GAAGpH,EAAMqH,OAAO2D,eAAgBC,IACvC,GAAIA,IAAcjL,EAAMqH,OAAOC,YAC3B,OAAOjP,KAAK6R,OAEhB,IAAMgB,EAAQ7S,KAAK4B,MAAMkR,eAEzB,GAAa,MAATD,EAGA,OAFA7S,KAAK6R,YACL7R,KAAK+S,kBAGT,IAAOxI,EAA6EpF,EAA7DnF,KAAK4B,MAAMoR,OAAOC,WAAWhG,GAAoB4F,EAAMxK,OAAM,GAAjE,GACnB,GAAqB,OAAjBkC,EAAuB,CAAA,IAAA2I,EAEvBlT,KAAKmT,mBAELnT,KAAKuK,aAAeA,EACpBvK,KAAKuD,MAAQgH,EAAahC,SAASW,KAGnC,IADA,IAAIkK,EAAQ7I,EAAahC,SAASa,KAC3BgK,GAASA,EAAMnL,QAAQlO,WAAaA,GAAoB,CAAA,IAAAsZ,EAC3DD,EAAsB,QAAjBC,EAAGD,EAAM7K,gBAAQ,IAAA8K,OAAA,EAAdA,EAAgBjK,IAC3B,CAED,IAAMwI,EAAsCsB,QAA7BA,EAAG3I,EAAahC,SAASW,gBAAIgK,WAAAA,EAA1BA,EAA4B3K,gBAAQ,IAAA2K,OAAA,EAApCA,EAAsChK,KACpD0I,EAAU3J,QAAQlO,WAAaA,GAA0B6X,EAAUrJ,SAAS5N,OAC5EqF,KAAK4R,UAAYA,EAAUrJ,SAASjB,KAAKnJ,GAAQA,IAEjD6B,KAAK4R,UAAY,GAGrB,IAAIF,EAAanH,EAAahC,SAASW,KAAKM,QAc5C,OAbIxJ,KAAK0R,aAAeA,IACpB1R,KAAKwP,mBACLxP,KAAK2R,kBAAmB,EAExB3R,KAAKoP,eACDpP,KAAKuK,aAAarK,QAClBF,KAAKsT,WAAWxP,KAAK9D,KAAMA,KAAKuK,aAAarK,WAGrDF,KAAK0R,WAAaA,EAElB1R,KAAKuT,YACLvT,KAAKgG,UAErB,CACgBhG,KAAK+S,kBAET/S,KAAK6R,MAAM,GAElB,CAEDsB,gBAAAA,GACInT,KAAKwT,0BAA0B,OAE/B,IAAMC,EAAUzT,KAAK4B,MAAMC,UAAU,WAErC,IAAI4R,EAAQC,eAAZ,CACAD,EAAQC,gBAAiB,EACjC,IAC4DC,EAD5DC,koBAAAC,CAC+B1C,GAAaqB,kBAAgB,IAApD,IAAAoB,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAsD,CAAA,IAA3C/Z,EAAQ0Z,EAAAlX,MACfuD,KAAKyR,yBAAyBxX,GAAYwZ,EAAQQ,SAASha,GAE3DwZ,EAAQQ,SAASha,GAAY,MAChC,CAAA,CAAA,MAAAia,GAAAN,EAAA9X,EAAAoY,EAAA,CAAA,QAAAN,EAAAO,GAAA,CAP2B,CAQ/B,CAEDpB,eAAAA,GACI/S,KAAKwT,0BAA0B,UAE/B,IAAMC,EAAUzT,KAAK4B,MAAMC,UAAU,WAErC,IAAK,IAAM5H,KAAY+F,KAAKyR,yBACxBgC,EAAQQ,SAASha,GAAY+F,KAAKyR,yBAAyBxX,GAE/D+F,KAAKyR,yBAA2B,GAChCgC,EAAQC,gBAAiB,CAC5B,CAODF,yBAAAA,CAA0BhX,GACtB,IAAMiX,EAAUzT,KAAK4B,MAAMC,UAAU,WACrC4R,EAAQW,SAAS9M,KAAI+M,IAAiB,IAEcC,EAFdC,EAAApP,EAAAkP,EAAA,GAAfjO,EAAImO,EAAA,GAAEC,EAAGD,EAAA,GACxBpD,GAAaqB,iBAAiBiC,SAASrO,KACL,WAA9BoO,EAAItM,QAAQwM,cAEqC,QADjDJ,EAAAb,EAAQlT,UACH9C,cAAaoI,cAAAA,OAAe2O,EAAI7J,mBAAY,IAAA2J,GADjDA,EAEMhZ,UAAUkB,GAAM,qBAEtBgY,EAAIlZ,UAAUkB,GAAM,qBAE3B,GAER,CAED8W,UAAAA,CAAWjE,EAAKvT,GACZkE,KAAK6O,KAAKlO,WAAa0O,EAAI1O,UAC9B,CAEDyO,cAAAA,CAAeC,EAAKC,GAChBD,EAAIlS,iBAAiB,SAAUmS,GAC/BtP,KAAKwO,cAAce,KAAK,CAACF,EAAKC,GACjC,CAEDE,gBAAAA,GACI,IAAK,IAAIxD,EAAI,EAAGA,EAAIhM,KAAKwO,cAAc7T,OAAQqR,IAAK,CAChD,IAAA2I,EAAAxP,EAAsBnF,KAAKwO,cAAcxC,GAAE,GAApCqD,EAAGsF,EAAA,GAAErF,EAAMqF,EAAA,GAClBtF,EAAI1I,oBAAoB,SAAU2I,EACrC,CACDtP,KAAKwO,cAAgB,EACxB,CAYD+E,IAAAA,GAEI,GAAKvT,KAAK4R,UAAUjX,OAApB,CAIA,GAAIqF,KAAK2R,iBAAkB,CACvB,IAAMiD,EAAmB5U,KAAKuK,aAAarK,QAAQO,wBAEnDT,KAAK6O,KAAKhF,QAAQL,QAAUxJ,KAAKuK,aAAaf,QAC9CxJ,KAAK6O,KAAK7H,UAAY,IAAIhH,KAAK4R,WAC1BtK,KAAKnJ,IACF,IAAI4C,EAAQ5C,EAAI4C,OAASf,KAAKuD,MAAM6H,KAAO,IAAM,MAIjD,OAHKjN,EAAI4C,QACLA,EAAQ5C,EAAI+B,QAAQO,wBAAwBM,MAAQ,MAExD,kDAAA8E,OAAyD9E,EAAK,6EAAA8E,OACd+O,EAAiB3T,OAASiQ,GAAa,2CAG1F2D,KAAK,IAEV7U,KAAK2R,kBAAmB,EACxB5M,OAAOM,OAAOrF,KAAK6O,KAAKrT,MAAO,CAC3BuF,MAAO6T,EAAiB7T,MAAQ,OAGpCf,KAAK8U,UACR,CACDnI,YAAW,KACP3M,KAAKsT,WAAWtT,KAAKuK,aAAarK,QAAQ,GAC3C,GACHF,KAAK6O,KAAKvT,UAAUc,OAAO,aAE3B,IAAMqU,EAAaA,KACfzQ,KAAK6R,OACL7R,KAAK4B,MAAMiN,KAAKlI,oBAAoB,SAAU8J,EAAW,EAE7DzQ,KAAK4B,MAAMiN,KAAK1R,iBAAiB,SAAUsT,EAlC1C,CAmCJ,CAEDoB,IAAAA,GACI7R,KAAK6O,KAAKvT,UAAUC,IAAI,YAC3B,CAEDuZ,QAAAA,GACI,IAAIC,EAAc,KACdC,GAAe,EACfC,EAAgB7N,MAAMqL,KAAKzS,KAAK6O,KAAKqG,uBAAuB,wBAC5DC,EAAyB/N,MAAMqL,KAAKzS,KAAK6O,KAAKqG,uBAAuB,2BACnE9Z,EAAWJ,SAASC,KAGpBma,EAAmBtZ,IAErB,IAAMuV,EAAO4D,EAAcD,GAAavU,wBAClC4U,EAAarV,KAAKuD,MAAMrD,QAAQO,wBAAwBM,MAC1DuU,EAAOtV,KAAK8R,SAAWhW,EAAEyZ,eAAe,GAAGC,QAAU1Z,EAAE0Z,QAE3D,GAAIxV,KAAKuD,MAAM6H,KAAM,CAEjB,IAAMqK,EAAYC,IAAsBL,EAClCM,EACFL,EAAOjE,EAAKuE,MACNX,EAAcD,EAAc,GACxBC,EAAcD,EAAc,GAAGvU,wBAAwBmV,MAAQH,EAC/DpE,EAAKuE,MAAQH,EACjBI,IACJC,EAAWzE,EAAK3Q,EAAI+U,EAE1BH,EAAOnb,KAAK+C,IAAI/C,KAAK8C,IAAIqY,EAAMQ,GAAWH,EAC1D,MACoBL,EAAOjE,EAAK3Q,ECxPF,KDyPV4U,EAAOjE,EAAK3Q,ECzPF,ID4PlB4U,EAAOnb,KAAK4b,MAAMT,GAClBP,EAAYvZ,MAAMgK,KAAO8P,EAAO,KAChCP,EAAYlL,QAAQmM,EAAIV,EAAOjE,EAAK3Q,CAAC,EAEnCuV,EAAiBna,IACnB,IAAIka,EAAIE,SAASnB,EAAYlL,QAAQmM,GAErC,GAAIhW,KAAKuD,MAAM6H,KAAM,CAEjB,IAAI+K,EAAOH,EAAIhW,KAAKuD,MAAMrD,QAAQO,wBAAwBM,MAAS,IAC/DqV,EAAcpW,KAAK4R,UAAUoD,GAAajU,MAC9C,GAAIoV,EAAMC,EAAa,CAInB,IAAMC,EAAOD,GADbD,EAAMhc,KAAK8C,IC5QH,ED4QqBkZ,IAEzBnW,KAAK4R,UAAUoD,EAAc,GAC7BhV,KAAK4R,UAAUoD,EAAc,GAAGjU,MAAK,GAAA8E,OAAM7F,KAAK4R,UAAUoD,EAAc,GAAGjU,MAAQsV,EAAO,KACnFrW,KAAK4R,UAAUoD,EAAc,GACpChV,KAAK4R,UAAUoD,EAAc,GAAGjU,MAAK,GAAA8E,OAAM7F,KAAK4R,UAAUoD,EAAc,GAAGjU,MAAQsV,EAAO,KAE1FF,EAAM,IAEVnW,KAAK4R,UAAUoD,GAAajU,MAAK8E,GAAAA,OAAMsQ,EAAM,IACjE,MAGoB,GAAInW,KAAK4R,UAAUoD,EAAc,GAAI,CACjC,IAAMsB,EAAoBF,EAAcpW,KAAK4R,UAAUoD,EAAc,GAAGjU,MACxEoV,EAAMhc,KAAK+C,IAAIoZ,EC3RX,ED2R6CH,GACjDnW,KAAK4R,UAAUoD,GAAajU,MAAK8E,GAAAA,OAAMsQ,EAAM,KAC7CnW,KAAK4R,UAAUoD,EAAc,GAAGjU,SAAK8E,OAAMyQ,EAAoBH,EAAM,IACxE,CAErB,MACgBnW,KAAKuD,MAAMrD,QAAQ1E,MAAMuF,MACrBsK,WAAWrL,KAAKuD,MAAMrD,QAAQ1E,MAAMuF,OACpCsK,WAAW4J,EAAcD,GAAaxZ,MAAMuF,OAC5CiV,EACA,KACJf,EAAcD,GAAaxZ,MAAMuF,MAAK8E,GAAAA,OAAMmQ,EAAK,MACjDhW,KAAK4R,UAAUoD,GAAajU,MAAK8E,GAAAA,OAAMmQ,EAAK,MAEhDhW,KAAKuD,MAAM8I,mBAEXjR,EAASmb,YAAYxB,GACrBA,EAAc,KACdC,GAAe,EACfha,SAAS2L,oBAAoB3G,KAAKgS,cAAcG,GAAI8D,GACpDjb,SAAS2L,oBAAoB3G,KAAKgS,cAAcE,KAAMkD,GAElCpV,KAAK4B,MAAMC,UAAU5H,GAC7B8H,gBAAgB,EAE1ByU,EAAkBA,CAACxK,EAAGlQ,KACxBd,SAASmC,iBAAiB6C,KAAKgS,cAAcG,GAAI8D,GACjDjb,SAASmC,iBAAiB6C,KAAKgS,cAAcE,KAAMkD,GACnDJ,EAAchJ,EAEd,IAAMyK,EAASzb,SAASK,cAAc,OACtCob,EAAOnb,UAAUC,IAAI,sBAErB,IAAMmb,EAAY1W,KAAKuK,aAAarK,QAAQO,wBAC5CR,EAAIwW,EAAQ,CACRhR,IAAG,GAAAI,OAAK6Q,EAAU9V,EAAIsQ,GAAc,MACpC1L,QAAIK,OAAK7F,KAAK8R,SAAWhW,EAAEyZ,eAAe,GAAGC,QAAU1Z,EAAE0Z,QAAW,MACpEvU,UAAM4E,OAAK6Q,EAAUzV,OAASiQ,GAAU,QAE5C9V,EAASO,YAAY8a,GAEjB1B,GAAa3Z,EAASmb,YAAYxB,GACtCA,EAAc0B,CAAM,EAExBtB,EAAuB7N,KAAI,CAACqP,EAAI3K,KAC5B2K,EAAGxZ,iBAAiB6C,KAAKgS,cAAcC,KAAMuE,EAAgB1S,KAAK9D,KAAMgM,IAExE2K,EAAGxZ,iBAAiB,aAAcrB,IAC9BA,EAAEoR,gBAAgB,GACpB,GAET,EAILiE,GAAaqB,iBAAmB,CAACvY,kQElV3B4N,GAAYF,EAAMC,OAAO,aACzBgP,GAAQjP,EAAMC,OAAO,SACrBiP,GAAalP,EAAMC,OAAO,qBAC1BkP,GAAQnP,EAAMC,OAAO,eACrBF,GAAYC,EAAMC,OAAO,mBACzBmP,GAAQpP,EAAMC,OAAO,YAgB3BiB,EAAY0E,gBAAkB,CAACuJ,GAAOD,GAAYnP,IAElDuF,GAAmBM,gBAAkB,CAACnB,IAEtCA,GAAYmB,gBAAkB,CAACzF,EAAiB8D,GAChDQ,GAAY4K,kBAAoB/J,GAEhCnF,EAAgByF,gBAAkB,CAACtB,GACnCnE,EAAgBkP,kBAAoB5K,GAEpCR,EAAoB2B,gBAAkB,CAACpC,GACvCS,EAAoBoL,kBAAoB5K,GAExCH,EAAesB,gBAAkB,CAAC3C,GAClCqB,EAAe+K,kBAAoBlP,EAEnC8C,EAAgB2C,gBAAkB,CAAChE,GAEnCA,EAAqBD,aAAe,QAIpC3B,EAAMsP,SACF,CACI,CAAA,WAAApR,OAAYgD,EAAY9O,WAAa8O,EAErC,CAAA,WAAAhD,OAAY0D,EAAqBxP,WAAawP,EAC9C,CAAA,WAAA1D,OAAY+E,EAAgB7Q,WAAa6Q,EACzC,CAAA,WAAA/E,OAAYoG,EAAelS,WAAakS,EACxC,CAAA,WAAApG,OAAYiC,EAAgB/N,WAAa+N,EACzC,CAAA,WAAAjC,OAAYuG,GAAYrS,WAAaqS,GACrC,CAAA,WAAAvG,OAAYoH,GAAmBlT,WAAakT,GAE5C,CAAA,WAAApH,OAAY+F,EAAoB7R,WAAa6R,EAC7C,CAAA,WAAA/F,OAAYsF,EAAepR,WAAaoR,IAE5C,GAOJ,MAAM+L,GACF7T,WAAAA,CAAYzB,EAAOrF,GACfyD,KAAK4B,MAAQA,EACb5B,KAAKzD,QAAUA,EAEfyD,KAAKmX,YAAc,KACnBnX,KAAKoX,8BAAgC,KAErC,IAAM3D,EAAUzT,KAAK4B,MAAMC,UAAU,WACrC,GAAI4R,EAAS,CACT,IAAM3U,EAAU2U,EAAQW,SAAS5G,MAAK6J,GAAAlS,EAAAkS,EAAA,GAAM,KAAeH,GAAYjd,WACvE,GAAI6E,EAAS,CAGa,IAAAwY,EAAtB,GAFAtX,KAAKmX,YAAcrY,EAAQ,GAAGmR,WAAWxS,cAAc,uBAEnDuC,KAAKmX,aACmEG,QAA7DA,EAAGtX,KAAKmX,YAAYjC,uBAAuB,8BAAkBoC,SAA1DA,EAA6D,IACrEtQ,UAAYuQ,QAElBvX,KAAKmX,YAAcrY,EAAQ,GAE/BkB,KAAKwX,kBAAkBxX,KAAKzD,QAAQkb,aAAc3Y,EAAQ,GAAGoJ,QAAQwM,cAAe1U,KAAKzD,QAAQmb,cACjGjE,EAAQkE,WAAWT,GAAYjd,SAAU+F,KAAK4X,oBAAoB9T,KAAK9D,MAC1E,CACJ,CACDA,KAAK6X,oBAGL7X,KAAK4B,MAAMiN,KAAK1R,iBACZ,SACC2a,IAAQ,IAAAC,EACCC,EAAOF,EAAIE,MAASF,EAAIG,cAAgBH,EAAIG,eAClD,GAAKD,KAAQA,EAAKrd,QAAU,GAA5B,CAEA,IAAMud,EAIJH,QAJaA,EAAGC,EAAKG,QAAQrR,GAEvBA,EAAKoB,SAA0C,UAA/BpB,EAAKoB,QAAQkQ,eAA6BtR,EAAKxL,UAAUkC,SAAS,yBAExFua,SAJgBA,EAIb,GAEL,GAAIG,EAAW,CACX,GAAIlY,KAAKuD,QAAU2U,EAAW,OAC1BlY,KAAKuD,OAAOvD,KAAK+B,iBACrB/B,KAAKqY,eAAeH,EAAWtW,EAAO5B,KAAKzD,QAAQ+b,UACvE,MAA2BtY,KAAKuD,OACZvD,KAAK+B,gBAbsB,CAc9B,IAEL,GAGJ/B,KAAK4B,MAAMiN,KAAK1R,iBAAiB,eAAgB2a,IAAQ,IAAAS,EACrD,IAAKvY,KAAKuD,MAAO,OAAO,EACxBuU,EAAI5K,iBAEJ,IAAM8K,EAAOF,EAAIE,MAASF,EAAIG,cAAgBH,EAAIG,eAClD,GAAKD,KAAQA,EAAKrd,QAAU,GAA5B,CAEA,IAAMud,EAAYF,EAAKG,QAClBrR,GAASA,EAAKoB,SAA0C,UAA/BpB,EAAKoB,QAAQkQ,eAA6BtR,EAAKxL,UAAUkC,SAAS,cAC9F,GAEF,GAAI0a,WAASK,EAAIvY,KAAKwD,sBAAc,IAAA+U,GAAa,QAAbA,EAAnBA,EAAqBxV,mBAArBwV,IAAgCA,GAAhCA,EAAkC5d,OAAQ,CACnDqF,KAAKwY,qBAAoBxY,KAAKwY,mBAAqBxY,KAAKwY,mBAAmB3U,WAE/E,IAAM4U,EAAUT,EAAKG,QAChBrR,GAASA,EAAKoB,SAA0C,OAA/BpB,EAAKoB,QAAQkQ,eAA0BtR,EAAKgE,aAAa,iBACrF,GAEI4N,EAAWV,EAAKG,QACjBrR,GAASA,EAAKoB,SAA0C,OAA/BpB,EAAKoB,QAAQkQ,eAA0BtR,EAAKgE,aAAa,iBACrF,GAEF9K,KAAKwY,mBAAqB,IAAIpV,EAC1B,CACIG,MAAO2U,EACPha,IAAKua,EACL1S,KAAM2S,EACNlT,KAAMsS,EAAItC,QACV/P,IAAKqS,EAAIa,SAEb/W,EACA5B,KAAKzD,QAAQqc,cAEpB,CA5B8B,CA4B9B,IAEL5Y,KAAK4B,MAAMiX,MAAM1H,aAAe,IAAIA,GAAanR,KAAK4B,MAAO5B,KAAKzD,QAAQuc,aAC7E,CAEDT,cAAAA,CAAe9U,EAAO3B,EAAOrF,GACzByD,KAAKuD,MAAQA,EACbvD,KAAKwD,eAAiB,IAAI0K,GAAe3K,EAAO3B,EAAOrF,EAC1D,CAEDwF,cAAAA,GACI/B,KAAKwD,gBAAkBxD,KAAKwD,eAAeK,UAC3C7D,KAAKwY,oBAAsBxY,KAAKwY,mBAAmB3U,UAC/C7D,KAAK4B,MAAMiX,MAAM1H,eACjBnR,KAAK4B,MAAMiX,MAAM1H,aAAaO,WAAa,KAC3C1R,KAAK4B,MAAMiX,MAAM1H,aAAaU,QAElC7R,KAAKwD,eAAiB,KACtBxD,KAAKwY,mBAAqB,KAC1BxY,KAAKuD,MAAQ,IAChB,CAIDsU,iBAAAA,GACI,IAAIrO,EAAUtP,IACVuP,EAAQvP,IACR6e,EAAS,GACTC,EAAY,EAIhBhZ,KAAK4B,MAAMqX,UAAUC,WAAWnf,GAAgB,CAAC+M,EAAMqS,KAAU,IAAAC,EAAAC,EAC7D,IAAKF,EAAMG,IAAI3e,OAAQ,OAAOwe,EAC9B,IACII,EADEC,IAAkC,QAAxBJ,EAACD,EAAMG,IAAI,GAAGvL,kBAAbqL,IAAuBA,IAAvBA,EAAyBjb,KAG3Bsb,EAAqB3S,EAAKrG,wBAAjCM,MACJ2Y,EAAS1Z,KAAKzD,QAAQod,UACtBH,IAAQE,IAA8BL,QAApBA,EAACF,EAAMG,IAAI,GAAGM,cAAMP,IAAAA,GAAKA,QAALA,EAAnBA,EAAqBlb,WAArBkb,IAAwBA,IAAxBA,EAA0BjO,OACjD,IAAMyO,EAAkBH,EAClBvf,KAAK8C,IAAI,IAAM8b,EAAOpe,OD5LZ,GC4LoC,IAC9CR,KAAK8C,IAAIwc,EAAmBV,EAAOpe,OD3LvB,IC2LiD,KAEnE,GAAK6e,EAaD,IAAK,IAAIxN,EAAI,EAAGA,EAAImN,EAAMG,IAAI3e,QACrBwe,EAAMG,IAAItN,GAAG+B,WAAWhU,GADKiS,IAIlCjH,OAAOM,OAAO8T,EAAMG,IAAItN,GAAG+B,WAAWhU,GAAoB,CACtDyP,UACAE,MAAOqP,EAAO/M,GACdZ,KAAMsO,EACN3Y,MAAQoY,EAAMG,IAAItN,GAAG+B,WAAWhU,GAAmBgH,MAE7CsK,WAAW8N,EAAMG,IAAItN,GAAG+B,WAAWhU,GAAmBgH,QAAU2Y,EAAS,IAAM,MAD/EG,SArBdN,EAAWR,EAAOtM,QAAO,CAAC8M,EAAUO,KAChCP,EAASK,OAAO,KAAM,CAClBG,CAAChgB,GAAoB,CACjB2P,MAAOoQ,EACPtQ,UACAzI,MAAO8Y,EACPzO,KAAMsO,KAGPH,IACR,IAAI3C,IA4BX,OAHApN,EAAUtP,IACV6e,EAAS,GACTC,EAAY,EACLO,EAAWA,EAAS1T,OAAOsT,GAASA,CAAK,IAGpDnZ,KAAK4B,MAAMqX,UAAUC,WAAWnf,GAAmB,CAAC+M,EAAMqS,KACtD1P,EAAQvP,IACR8e,EAAY,EACLG,KAGXnZ,KAAK4B,MAAMqX,UAAUC,WAAWnf,GAAoB,CAAC+M,EAAMqS,KAAU,IAAAa,EAC3DrQ,EAAU7C,EAAKgE,aAAa,YAAc,EAC1ClB,EAAU9C,EAAKgE,aAAa,YAAc,EAC1CmP,GAAYjB,IAAapP,EAAU,EACzC,IAAKmP,EAAOkB,GACR,IAAK,IAAIjO,EAAIiO,EAAUjO,GAAK,EAAGA,IACtB+M,EAAO/M,KAAI+M,EAAO/M,GAAK9R,KAGpC,IAAMwP,EAAQqP,EAAOkB,GAOrB,OANAjB,GAAa,EAE0C,QAAbgB,QAAtCA,EAAAb,EAAM7e,MAAM6e,EAAMxe,SAAW,GAAG2e,IAAI,UAApCU,IAAsCA,OAAtCA,EAAAA,EAAwCJ,SACxCT,EAAMS,OAAO,MAGVT,EAAMe,SACT,IAAItD,IAAQuD,OAAOhB,EAAMxe,SAAU,CAC/Byf,CAACrgB,GAA0B,CACvByP,UACAC,QACAC,QACAC,UACAC,UACApO,MAAOsL,EAAKgE,aAAa,YAGpC,GAER,CAEK0M,iBAAAA,CAAkBC,EAAcvP,EAASwP,GAAc,IAAA2C,EAAAra,KAAA,OAAAlC,EAAAC,IAAAC,eAAAsc,IAAA,IAAAjL,EAAAkL,EAAAnf,EAAA,OAAA2C,IAAAmB,MAAA,SAAAsb,GAAA,cAAAA,EAAApb,KAAAob,EAAAnb,MAAA,KAAA,EAEnB,IADhCgQ,EAAMrU,SAASK,cAAc,QAC/BC,UAAUC,IAAI,qBACDkc,IAAgBpW,EAAWoW,GAAa,CAAA+C,EAAAnb,KAAA,EAAA,KAAA,CAAA,OAAAmb,EAAAnb,KAAA,EAASoY,IAAc,KAAA,EAAA+C,EAAAC,GAAAD,EAAAE,KAAAF,EAAAnb,KAAA,EAAA,MAAA,KAAA,EAAAmb,EAAAC,GAAGJ,EAAKM,aAAajD,GAAa,KAAA,EAMjH,GANK6C,EAAQC,EAAAC,GACdpL,EAAI1T,YAAY4e,GAEZnf,EAAWif,EAAKlD,YACJ,WAAZjP,IACA9M,EAAWif,EAAKlD,YAAY1Z,cAAc,uBAEzCrC,EAAQ,CAAAof,EAAAnb,KAAA,GAAA,KAAA,CAAA,OAAAmb,EAAAlb,OAAA,UAAA,KAAA,GACbib,EAASpd,iBAAiBrD,GAAegC,IACrC,IAAA8e,EAAqB9e,EAAE+e,OAAf3c,EAAG0c,EAAH1c,IAAKC,EAAGyc,EAAHzc,IACRD,GAAQC,GACbkc,EAAKS,YAAY5c,EAAKC,EAAI,IAE9B/C,EAASO,YAAY0T,GAAK,KAAA,GAAA,IAAA,MAAA,OAAAmL,EAAA1a,OAAA,GAAAwa,EAAA,IAhB+Bxc,EAiB5D,CAEK8Z,mBAAAA,GAAsB,IAAAmD,EAAA/a,KAAA,OAAAlC,EAAAC,IAAAC,eAAAgd,IAAA,OAAAjd,IAAAmB,MAAA,SAAA+b,GAAA,cAAAA,EAAA7b,KAAA6b,EAAA5b,MAAA,KAAA,EACxB0b,EAAK5D,YAAY7b,UAAUC,IAAI,eAC/Bwf,EAAK5D,YAAYtN,QAAQqR,QAAS,EAClCnJ,OAAOpL,oBAAoB,QAASoU,EAAK3D,+BACzC2D,EAAK3D,8BAAiCtb,IAClC,IACMkQ,GADQlQ,EAAEmc,cAAgBnc,EAAEmc,gBAAmBnc,EAAEkc,MACxCmD,WAAWxE,GAAOA,IAAOoE,EAAK5D,eACzCnL,EAAI,IAAY,IAAPA,IACT+O,EAAKK,cACR,EAELrJ,OAAO5U,iBAAiB,QAAS4d,EAAK3D,+BAA+B,KAAA,EAAA,IAAA,MAAA,OAAA6D,EAAAnb,OAAA,GAAAkb,EAAA,IAX7Cld,EAY3B,CAED6c,YAAAA,CAAajD,GACT,Mf7H0BA,KAC9B,IAAM2D,EAAYrgB,SAASK,cAAc,OACzCggB,EAAU/f,UAAUC,IAAI,iBAExB,IAAM+f,EAActgB,SAASK,cAAc,OAC3CigB,EAAYhgB,UAAUC,IAAI,uBAE1B,IAAK,IAAIggB,EAAI,EAAGA,EAAI,EAAGA,IACnB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAMC,EAAazgB,SAASK,cAAc,OAC1CogB,EAAWngB,UAAUC,IAAI,4BACzBkgB,EAAW5R,QAAQ3L,IAAMqd,EAAI,EAC7BE,EAAW5R,QAAQ1L,IAAMqd,EAAI,EAC7BF,EAAY3f,YAAY8f,EAC3B,CAGL,IAAMC,EAAe1gB,SAASK,cAAc,OAC5CqgB,EAAapgB,UAAUC,IAAI,wBAC3BmgB,EAAa9e,UAAY8a,GAAgB,SAEzC2D,EAAU1f,YAAY2f,GACtBD,EAAU1f,YAAY+f,GAEtB,IAAMC,EAAgBC,IAAkB,IAAf1d,EAAG0d,EAAH1d,IAAKC,EAAGyd,EAAHzd,IAC1Bkd,EAAUQ,cAAc,IAAIC,YAAYhiB,EAAc,CAAE+gB,OAAQ,CAAE3c,IAAK0B,OAAO1B,GAAMC,IAAKyB,OAAOzB,MAAU,EAExG4d,EAAyBA,KAC3B,IAAAC,EAAqBX,EAAUxR,QAAvB3L,EAAG8d,EAAH9d,IAAKC,EAAG6d,EAAH7d,IAIb,GAHA,GAAG6L,QAAQ7C,KAAKmU,EAAYW,iBAAiB,YAAate,IACtDA,EAAKrC,UAAUc,OAAO,SAAS,IAE9B8B,GAAQC,EAEb,IADA,IAAM+d,EAAS9U,MAAMqL,KAAK6I,EAAY/S,UAC7ByD,EAAI,EAAGA,EAAIkQ,EAAOvhB,OAAQqR,IAAK,CACpC,GAAIkQ,EAAOlQ,GAAGnC,QAAQ3L,IAAMA,GAAOge,EAAOlQ,GAAGnC,QAAQ1L,IAAMA,EACvD,OAEA+d,EAAOlQ,GAAGnC,QAAQ3L,KAAOA,GAAOge,EAAOlQ,GAAGnC,QAAQ1L,KAAOA,EACzD+d,EAAOlQ,GAAG1Q,UAAUC,IAAI,UAExB2gB,EAAOlQ,GAAG1Q,UAAUc,OAAO,SAElC,GA0BL,OAxBAkf,EAAYne,iBAAiB,aAAcrB,IACvC,IAAAqgB,EAAqBrgB,EAAEf,OAAO8O,QAAtB3L,EAAGie,EAAHje,IAAKC,EAAGge,EAAHhe,IACRD,GAAQC,IACbkd,EAAUxR,QAAQ3L,IAAMA,EACxBmd,EAAUxR,QAAQ1L,IAAMA,EACxB4d,IAAwB,IAE5BT,EAAYne,iBAAiB,cAAerB,IACxCuf,EAAUe,gBAAgB,YAC1Bf,EAAUe,gBAAgB,YAC1BL,GAAwB,IAE5BT,EAAYne,iBAAiB,SAAS,KAClC,IAAAkf,EAAqBhB,EAAUxR,QAAvB3L,EAAGme,EAAHne,IAAKC,EAAGke,EAAHle,IACRD,GAAQC,GACbwd,EAAc,CAAEzd,MAAKC,OAAM,IAG/Bud,EAAave,iBAAiB,SAAS,KACnCS,IAAmB0e,MAAKC,IAAkB,IAAfre,EAAGqe,EAAHre,IAAKC,EAAGoe,EAAHpe,IAC5Bwd,EAAc,CAAEzd,MAAKC,OAAM,GAC7B,IAGCkd,CAAS,EewDLmB,CAAkB9E,EAC5B,CAED0D,YAAAA,GACIpb,KAAKmX,YAAY7b,UAAUc,OAAO,eAClC4D,KAAKmX,YAAYtN,QAAQqR,QAAS,EAClCnJ,OAAOpL,oBAAoB,QAAS3G,KAAKoX,8BAC5C,CAKD0D,WAAAA,CAAY2B,EAAMC,GACd,GAAID,GAAQ,KAAOC,GAAW,IAC1B,MAAM,IAAIC,MAAM,gDAGpB3c,KAAK4B,MAAMgb,QACX5c,KAAK6S,MAAQ7S,KAAK4B,MAAMkR,eACxB,IAAMD,EAAQ7S,KAAK6S,MACnB,GAAa,MAATA,EAAJ,CACA,IAAMgK,EAAc7c,KAAK4B,MAAMkb,QAAQjK,EAAMxK,OAAO,GAEpD,GAAI0U,GAAgBF,GAChB,MAAM,IAAIF,MAAM,4BAA8BE,EAAYrgB,KAAO,gCAGrEmQ,YAAW,KACP,IAAIwM,GAAQ,IAAIvC,IAAQuD,OAAOtH,EAAMxK,OACrC8Q,EAAMS,OAAO,MACb,IAAMpQ,EAAUtP,IACVwP,EAAQ,IAAItC,MAAMsV,GAASM,KAAK,GAAG1V,KAAI,IAAMpN,MAEnD+iB,EAA2ChhB,iBAAiB+D,KAAK4B,MAAMiN,MAAjE9N,EAAKkc,EAALlc,MAAOmc,EAAWD,EAAXC,YAAaC,EAAYF,EAAZE,aAC1Bpc,EAAQmV,SAASnV,GACjBmc,EAAchH,SAASgH,GACvBC,EAAejH,SAASiH,GACxBpc,EAAQA,EAAQmc,EAAcC,EAE9BhE,EAAQ,IAAI/R,MAAMsV,GAASM,KAAK,MAAMvQ,QAAO,CAAC2Q,EAAM3b,EAAMuK,KACtDoR,EAAKxD,OAAOnY,EAAM,CACdsY,CAAChgB,GAAoB,CACjBgH,MAAQf,KAAKzD,QAAQod,UAA0C9T,GAAAA,OAAW,EAAI6W,EAAW,IAAM,KAAjE7W,GAAAA,OAAM1L,KAAK4b,MAAMhV,EAAQ2b,GAAQ7W,MAC/D2D,UACAE,MAAOA,EAAMsC,GACbZ,KAAMpL,KAAKzD,QAAQod,aAGpByD,IACRjE,GAGHA,EAAQ,IAAI/R,MAAMqV,GAAMO,KAAK,GAAGvQ,QAAQ2Q,IACpC,IAAM3T,EAAQvP,IACd,OAAO,IAAIkN,MAAMsV,GAASM,KAAK,MAAMvQ,QAAO,CAAC2Q,EAAM3b,EAAMuK,KACrDoR,EAAKxD,OAAOnY,EAAM,CACd2Y,CAACrgB,GAA0B,CACvByP,UACAC,QACAC,MAAOA,EAAMsC,GACbrC,QAAS,EACTC,QAAS,KAGVwT,IACRA,EAAK,GACTjE,GAEHnZ,KAAK4B,MAAMyb,eAAelE,EAAOxR,EAAM2V,QAAQC,MAC/Cvd,KAAK4B,MAAM4b,aAAa3K,EAAMxK,MAAQqU,EAAUA,EAAUD,EAAO,EAAG9U,EAAM2V,QAAQG,KAClFzd,KAAK4B,MAAMgb,QAEX5c,KAAKob,cAAc,GACpB,EArDgB,CAsDtB,CAEDsC,SAAAA,CAAU1U,GAEN,IADA,IAAI8C,EAAM9C,EACH8C,EAAI7D,QAAQlO,WAAaA,GAA0B,OAAR+R,GAC9CA,EAAMA,EAAIxD,OAEd,OAAOwD,CACV,CAYD5J,SAAAA,CAAUyb,GACN,IAAMC,EAAY5d,KAAKwD,eAAeT,YACtC,GAAK6a,EAAUjjB,OAAf,CACA,IAAM4I,EAAQvD,KAAK0d,UAAUE,EAAU,IACjCC,EAASD,EAAUD,EAASC,EAAUjjB,OAAS,EAAI,GACrDmjB,EAASnW,EAAM6F,KAAKqQ,EAAO3d,QAAQ+P,WAAWA,YAClD,GAAI0N,EAEA,IADA,IAAII,EAAgBF,EAAOlU,QACpBoU,EAAgB,GACnBD,EAASA,EAAOze,KAChB0e,GAAiB,EAIzB,IAAMhF,EAASxV,EAAMyJ,YAEfgR,EAAY,IAAItL,IAAIqG,GACtBkF,EAAYN,EAASG,EAASA,EAAO1e,KACrC8e,EAAe,IAAI9W,MACnB+W,EAAY,EAMhB,IAJKF,IACDD,EAAUI,QACVF,EAAenF,GAEZiF,EAAUK,OACbF,GAAa,EACRF,IAGLA,EAAU/R,kBAAkBnG,IACxB,GAAKiY,EAAUM,IAAIvY,EAAK2D,OAAxB,CAEA,IAAI6U,EAAgB,CAACxY,EAAK2D,OAC1B,GAAI3D,EAAK6D,QAAU,EAAG,CAClB,IAAIvB,EAAQ0Q,EAAOoC,WAAWrB,GAAOA,IAAO/T,EAAK2D,SAClC,IAAXrB,IACAA,EAAQ,GAEZkW,EAAgBxF,EAAOze,MAAM+N,EAAOA,EAAQtC,EAAK6D,QACpD,CAEG7D,EAAK4D,QAAUwU,EACfpY,EAAK4D,SAAW,EAGhBuU,EAAa3O,QAAQgP,GAEzBA,EAAcjX,KAAKwS,GAAOkE,EAAUQ,OAAO1E,IAjBX,CAiBe,IAEnDmE,EAAYA,EAAU7e,KAQ1B,IALA,IAAMoK,EAAUjG,EAAMiG,QAChBiV,EAAWvkB,IACXwkB,EAAS7W,GAAUiB,OAAO/O,EAAmB0kB,GAC7CE,EAAc,IAAIjM,IAAIwL,GAEnBlS,EAAI,EAAGA,EAAI+M,EAAOpe,QAClBgkB,EAAYN,KADcrS,IAE/B,GAAI2S,EAAYL,IAAIvF,EAAO/M,IAAK,CAC5B,IAAMtB,EAAK7C,GAAUiB,OAAO/O,EAAoB,CAC5C0P,MAAOgV,EACP/U,MAAOqP,EAAO/M,GACdrC,QAAS,EACTC,QAAS,IAEPgV,EAAU/W,GAAUiB,OAAO/O,EAAyB,CACtDyP,UACAC,MAAOgV,EACP/U,MAAOqP,EAAO/M,GACdrC,QAAS,EACTC,QAAS,IAEPiV,EAAQhX,GAAUiB,OAAO,SAC/B+V,EAAMljB,YAAYkM,GAAUiB,OAAO,UACnC8V,EAAQjjB,YAAYkjB,GACpBnU,EAAG/O,YAAYijB,GACfF,EAAO/iB,YAAY+O,GACnBiU,EAAYH,OAAOzF,EAAO/M,GAC7B,CAGL8R,EAAOxV,OAAOS,aAAa2V,EAAQf,EAASG,EAAOze,KAAOye,EAjFnC,CAkF1B,CAaDxb,SAAAA,GACI,GAAKtC,KAAKwD,eAAeT,YAAYpI,OAArC,CACA,IAAMijB,EAAY5d,KAAKwD,eAAeT,YACtC+b,EAAqBlB,EAAUnR,QAC3B,CAAC0J,EAAKzL,KACGyL,EAAI,GAAGmI,IAAI5T,EAAGjB,SACf0M,EAAI,GAAG5a,IAAImP,EAAGjB,OACd0M,EAAI,GAAG5G,KAAK7E,EAAGpC,OAAOA,SAEnB6N,IAEX,CAAC,IAAIzD,IAAO,KACfqM,EAAA5Z,EAAA2Z,EAAA,GATIE,EAAMD,EAAA,GAAEtC,EAAIsC,EAAA,GAUjBC,EAAS5X,MAAMqL,KAAKuM,GAEpB,IAAMC,EAAY,IAAIC,IACtBzC,EAAKnV,KAAKmD,IACNA,EAAGyB,kBAAkBnG,IACjB,IAAMoZ,EAAqBH,EAAO7D,WAAWrB,GAAOA,IAAO/T,EAAK0D,QAC5D1D,EAAK4D,QAAUqV,EAAOrkB,OAASwkB,GAC/BF,EAAUG,IAAIrZ,EAAK2D,MAAO,CACtB3D,OACA4D,QAAS5D,EAAK4D,QAAUqV,EAAOrkB,OAASwkB,GAE/C,IAEL1U,EAAGrO,QAAQ,IAGf,IAAMmH,EAAQvD,KAAK0d,UAAUE,EAAU,IACjCpU,EAAUjG,EAAMiG,QAEtB,GAAIyV,EAAUZ,KAMV,IALA,IAAMgB,EAAU5C,EAAKA,EAAK9hB,OAAS,GAAG0E,KAEhC0Z,EAASxV,EAAMyJ,YAEjBsS,EAAS,KACJtT,EAAI,EAAGA,EAAI+M,EAAOpe,QAAU,CACjC,IAAM+P,EAAK2U,EAAQnf,QAAQzC,cAAaoI,mBAAAA,OAAoBkT,EAAO/M,UACnE,GAAItB,EAAI,CACJ,IAAM6U,EAAS5X,EAAM6F,KAAK9C,GAC1BsB,GAAKuT,EAAO3V,QACZ0V,EAASC,EAAOlgB,IACpC,KAAuB,CACH,IAAAmgB,EAA0BP,EAAUQ,IAAI1G,EAAO/M,IAAvCjG,EAAIyZ,EAAJzZ,KAAM4D,EAAO6V,EAAP7V,QACR+V,EAAQ7X,GAAUiB,OAAO/O,EAAoB,CAC/C0P,MAAO4V,EAAQ5V,MACfC,MAAOqP,EAAO/M,GACdrC,UACAC,QAAS7D,EAAK6D,UAEZ+V,EAAa9X,GAAUiB,OAAO/O,EAAyB,CACzDyP,UACAC,MAAO4V,EAAQ5V,MACfC,MAAOqP,EAAO/M,GACdrC,UACAC,QAAS7D,EAAK6D,UAElB7D,EAAKoC,aAAawX,GAClBD,EAAM/jB,YAAYgkB,GAClBN,EAAQtW,aAAa2W,EAAOJ,GAC5BtT,GAAKjG,EAAK6D,OACb,CACJ,CA/DwC,CAiEhD,CAgBD9H,SAAAA,CAAU8d,GACN,GAAK5f,KAAKwD,eAAeT,YAAYpI,OAArC,CACA,IAOIklB,EAPEjC,EAAY5d,KAAKwD,eAAeT,YAChCQ,EAAQvD,KAAK0d,UAAUE,EAAU,IACjCkC,EAAOvc,EAAMwJ,UACbgM,EAASxV,EAAMyJ,YACfyP,EAAOlZ,EAAMqJ,UACbmT,EAAW7lB,IAGjB,GAAI0lB,EAAS,CACT,IAAMN,EAAS1B,EAAUA,EAAUjjB,OAAS,GACtCqR,EAAI+M,EAAOoC,WAAWrB,GAAOA,IAAOwF,EAAO5V,QACjDmW,EAAY9G,EAAO/M,EAAIsT,EAAO1V,QAAU,EACpD,MACYiW,EAAYjC,EAAU,GAAGlU,MAG7B,IAAMsW,EAAeF,EAAK3E,WAAWhd,IACjC,GAAIA,EAAIuL,QAAUmW,EAAW,CACzB,IAAMI,EAASpY,GAAUiB,OAAO/O,EAAmB,CAC/CgH,MAAQf,KAAKzD,QAAQod,UAAsB,KAAV,QACjCvO,KAAMpL,KAAKzD,QAAQod,UACnBnQ,QAASjG,EAAMiG,QACfE,MAAOqW,IAEPG,EAAeN,EAAUzhB,EAAIkB,KAAOlB,EACxCA,EAAImK,OAAOS,aAAakX,EAAQC,GAC5BlgB,KAAKzD,QAAQod,YACRuG,IACDA,EAAeN,EAAUzhB,EAAMA,EAAIiB,MAEvC8gB,EAAanf,MAAQ5G,KAAK8C,IAAIijB,EAAanf,MAAQ,EDjmB3C,GCimB8D,IAE7E,CACD,OAAO5C,EAAIuL,QAAUmW,CAAS,IAElCtc,EAAM8I,mBAEN,IAAM8T,EAAYP,EAAUI,EAAe,EAAIA,EAC3CI,EAAU,EACd3D,EAAKnV,KAAKmD,IACN,IAAI4V,GAAkB,EAClBC,EAAa,KA0BjB,GAzBA7V,EAAGyB,kBAAkBnG,IAEjB,GAAIqa,EAAU,EAGV,OAFAA,GAAW,EACXC,GAAkB,GACX,EAEX,IAAME,EAAqBxH,EAAOoC,WAAWrB,GAAOA,IAAO/T,EAAK2D,QAChE,OAAI3D,EAAK6D,QAAU2W,EAAqBJ,IACpCG,EAAava,EAAKuC,OAGG,IAAjBvC,EAAK6D,SAAiB2W,IAAuBJ,IAC7Cpa,EAAK6D,SAAW,EAChByW,GAAkB,EAClBD,EAAUra,EAAK4D,QAAU,GAClB,GAIX4W,GAAsBJ,QAA1B,CAEC,KAGAE,EAAiB,CAClB,IAAMX,EAAQ7X,GAAUiB,OAAO/O,EAAoB,CAC/C0P,MAAOgB,EAAGhB,MACVC,MAAOqW,EACPpW,QAAS,EACTC,QAAS,IAEP+V,EAAa9X,GAAUiB,OAAO/O,EAAyB,CACzDyP,QAASjG,EAAMiG,QACfC,MAAOgB,EAAGhB,MACVC,MAAOqW,EACPpW,QAAS,EACTC,QAAS,IAEb8V,EAAM/jB,YAAYgkB,GAClBlV,EAAG1B,aAAa2W,EAAOY,EAC1B,IApFwC,CAsFhD,CAeDje,SAAAA,GACI,GAAKrC,KAAKwD,eAAeT,YAAYpI,OAArC,CACA,IAAM6lB,EAAMxgB,KAAKwD,eAAeT,YAC1BQ,EAAQvD,KAAK0d,UAAU1d,KAAKwD,eAAeT,YAAY,IACvDgW,EAASxV,EAAMyJ,YAErByT,EAAkDD,EAAI/T,QAClD,CAACsH,EAAG7I,KACA,IAAMc,EAAI+M,EAAOoC,WAAWrB,GAAOA,IAAO5O,EAAUxB,QACpD,MAAO,CAACvP,KAAK+C,IAAI6W,EAAE,GAAI/H,GAAI7R,KAAK8C,IAAI8W,EAAE,GAAI/H,EAAId,EAAUtB,QAAU,GAAG,GAEzE,CAACiM,KAAWA,MACf6K,EAAAvb,EAAAsb,EAAA,GANME,EAAmBD,EAAA,GAAEE,EAAkBF,EAAA,GAQjCnd,EAAMqJ,UACdtF,KAAKpJ,IACN,IAAI8N,EAAI,EACR9N,EAAIgO,kBAAkBnG,IAClB,GAAIiG,EAAI4U,EAAoB,OAAO,EACnC,IAAMhX,EAAU7D,EAAK6D,QACjBoC,EAAIpC,EAAU,EAAIgX,EAClB7a,EAAK6D,SAAWgX,EAAqBzmB,KAAK8C,IAAI+O,EAAG2U,GAAuB,EACjE3U,EAAI2U,GAAuB3U,EAAIpC,EAAU,GAAK+W,EACrD5a,EAAK6D,SAAWoC,EAAIpC,EAAU+W,EACvB3U,GAAK2U,GACZ5a,EAAK3J,SAGT4P,GAAKpC,CAAO,GACd,IAIN,IADA,IAAMkW,EAAOvc,EAAMwJ,UACVf,EAAI,EAAGA,EAAI8T,EAAKnlB,SACjBqR,GAAK2U,GAAuB3U,GAAK4U,GACjCd,EAAK9T,GAAG5P,WAER4P,EAAI4U,IAJqB5U,KAQjCzI,EAAM8I,kBAxCuC,CAyChD,CAED9J,WAAAA,GACI,IAAMqb,EAAY5d,KAAKwD,eAAeT,YACjC6a,EAAUjjB,QACfqF,KAAK0d,UAAUE,EAAU,IAAIxhB,QAChC,CAEDqG,UAAAA,GACI,GAAKzC,KAAKwD,eAAeT,YAAYpI,OAArC,CACA,IAAMijB,EAAY5d,KAAKwD,eAAeT,YAGhC8d,EAASjD,EAAUnR,QACrB,CAAC0J,EAAKjL,KAEF,IAAMxB,EAAQwB,EAAUxB,MACnByM,EAAI,GAAGzM,KAAQyM,EAAI,GAAGzM,GAAS,GACpCyM,EAAI,GAAGzM,IAAUwB,EAAUvB,QAE3B,IAAMF,EAAQyB,EAAUzB,MAGxB,OAFK0M,EAAI,GAAG1M,KAAQ0M,EAAI,GAAG1M,GAAS,GACpC0M,EAAI,GAAG1M,IAAUyB,EAAUtB,QACpBuM,CAAG,GAEd,CAAC,CAAA,EAAI,CAAA,IAIH2K,EAAW3mB,KAAK8C,OAAO8H,OAAOgc,OAAOF,EAAO,KAC5CG,EAAW7mB,KAAK8C,OAAO8H,OAAOgc,OAAOF,EAAO,KAQ5CI,EAAarD,EAAU,GAAGzT,QAChCyT,EAAU,GAAGtV,OAAO3M,YAAYslB,GAChCA,EAAWrX,QAAUoX,EACrBC,EAAWtX,QAAUmX,EACrB,IAAK,IAAI9U,EAAI,EAAGA,EAAI4R,EAAUjjB,OAAQqR,IAClC4R,EAAU5R,GAAG7D,aAAa8Y,GAC1BrD,EAAU5R,GAAG5P,SAEjB,IAAMmH,EAAQvD,KAAK0d,UAAUE,EAAU,IAQvC,GANuBra,EAAMyJ,YAAYrS,SAClBqmB,IACnBC,EAAWtX,QAAU,GAGFpG,EAAMsJ,YAAYlS,QACnBmmB,EAAU,CAM5B,IAHA,IAAMlP,EAAYrO,EAAMyH,YAAYG,GAChC+V,EAAcD,EAAWrX,QAAU,EACnCuX,EAAmB,KACdnV,EAAI,EAAGA,EAAI4F,EAAUjX,UACtBumB,GAAe,GADelV,IAGT,OAArBmV,IAE0C,OAAtCvP,EAAUuP,GAAkBpgB,OAAyC,OAAvB6Q,EAAU5F,GAAGjL,MAC3D6Q,EAAUuP,GAAkBpgB,MAAQ,KAEpC6Q,EAAUuP,GAAkBpgB,OAAS6Q,EAAU5F,GAAGjL,MAEtD6Q,EAAU5F,GAAG5P,SACb8kB,GAAe,GAEftP,EAAU5F,GAAGtC,QAAUuX,EAAWvX,QAClCyX,EAAmBnV,GAG3BiV,EAAWrX,QAAU,CACxB,CArE4C,CAsEhD,CAED/G,QAAAA,CAASue,EAAQC,GACRA,EAAM1mB,QACX0mB,EAAM/Z,KAAK4D,GAAeA,EAAU1P,MAAQ4lB,GAC/C,EAIO,IAACE,GAAkB,CAACvnB,GACnBwnB,GAAuBvY,GACzBsY,GAAgB7M,SAASzL,EAAKf,QAAQlO,UAGpCgjB,GAAmByE,MACrBA,IAAWA,EAAQlZ,YACpBiZ,GAAoBC,EAAQlZ,SAExByU,GAAgByE,EAAQlZ,SAItC4O,GAAYld,WAAaA,EACzBkd,GAAYjd,SAAWA,EAEvBid,GAAYuK,gBAAkB3nB,EAC9Bid,GAAMG,GAAYjd,UAAYsd,GAElB,IAACmK,GAAiBA,IAC1B/Z,EAAMsP,SACF,CACI,oBAAuBtJ,KAE3B"}