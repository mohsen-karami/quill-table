{"version":3,"file":"index.js","sources":["../src/assets/const/event.js","../src/assets/const/name.js","../src/utils/index.js","../src/module/TableOperationMenu.js","../src/format/TableBodyFormat.js","../src/blot/contain.js","../src/format/TableCellInnerFormat.js","../src/format/TableCellFormat.js","../src/format/TableColFormat.js","../src/format/TableColgroupFormat.js","../src/format/TableRowFormat.js","../src/format/TableFormat.js","../src/format/TableWrapperFormat.js","../src/format/rewrite/List.js","../src/module/TableSelection.js","../src/module/TableToolTip.js","../src/assets/const/vars.js","../src/index.js"],"sourcesContent":["export const CREATE_TABLE = 'createTable';\n","export const blotName = {\n    contain: 'contain',\n    tableWrapper: 'tableWrapper',\n    table: 'table',\n    tableColGroup: 'colgroup',\n    tableCol: 'col',\n    tableBody: 'tbody',\n    tableRow: 'tr',\n    tableCell: 'td',\n    tableCellInner: 'tableCellInner',\n};\nexport const moduleName = {\n    table: 'table',\n};\nexport const toolName = {\n    table: 'table',\n};\n","import { CREATE_TABLE } from '../assets/const';\n\nexport const randomId = () => Math.random().toString(36).slice(2);\n\nlet zindex = 8000;\nexport const dialog = ({ child, target = document.body, beforeClose = () => {} } = {}) => {\n    const appendTo = target;\n    const dialog = document.createElement('div');\n    dialog.classList.add('dialog');\n    dialog.style.zIndex = zindex;\n    const overlay = document.createElement('div');\n    overlay.classList.add('dialog_overlay');\n    dialog.appendChild(overlay);\n    if (child) {\n        const content = document.createElement('div');\n        content.classList.add('dialog_content');\n        content.appendChild(child);\n        overlay.appendChild(content);\n        content.onclick = (e) => {\n            e.stopPropagation();\n        };\n    }\n\n    const originOverflow = getComputedStyle(appendTo).overflow;\n    appendTo.style.overflow = 'hidden';\n\n    appendTo.appendChild(dialog);\n    const close = () => {\n        beforeClose();\n        dialog.remove();\n        appendTo.style.overflow = originOverflow;\n    };\n    dialog.onclick = close;\n    zindex += 1;\n\n    return { dialog, close };\n};\n\n/**\n * 创建一个带 label 的输入框\n *\n * @param {string} label - The label for the input item.\n * @param {object} options - The options for the input item.\n * @param {string} options.type - The type of the input.\n * @param {string} options.value - The initial value of the input.\n * @param {number} options.max - The maximum value allowed for the input.\n * @param {number} options.min - The minimum value allowed for the input.\n * @return {object} An object containing the input item, the input element, and an error tip function.\n */\nexport const createInputItem = (label, options) => {\n    options.type || (options.type = 'text');\n    options.value || (options.value = '');\n\n    const inputItem = document.createElement('div');\n    inputItem.classList.add('input_item');\n\n    if (label) {\n        const inputLabel = document.createElement('span');\n        inputLabel.classList.add('input_label');\n        inputLabel.innerText = label;\n        inputItem.appendChild(inputLabel);\n    }\n\n    const inputInput = document.createElement('div');\n    inputInput.classList.add('input_input');\n    const input = document.createElement('input');\n    for (const key in options) {\n        input.setAttribute(key, options[key]);\n    }\n    if (options.max || options.min) {\n        input.addEventListener('blur', () => {\n            if (options.max && options.max <= input.value) {\n                input.value = options.max;\n            }\n            if (options.min && options.min >= input.value) {\n                input.value = options.min;\n            }\n        });\n    }\n\n    inputInput.appendChild(input);\n    inputItem.appendChild(inputInput);\n\n    input.onfocus = () => {\n        inputInput.classList.add('focus');\n    };\n    input.onblur = () => {\n        inputInput.classList.remove('focus');\n    };\n\n    const errorTip = (msg) => {\n        if (inputInput.classList.contains('error')) {\n            inputInput.querySelector('.error_tip').innerText = msg;\n        } else {\n            const errorTip = document.createElement('span');\n            errorTip.classList.add('error_tip');\n            errorTip.innerText = msg;\n            inputInput.appendChild(errorTip);\n        }\n\n        inputInput.classList.add('error');\n\n        const removeError = () => {\n            inputInput.classList.remove('error');\n            errorTip.remove();\n        };\n        return { removeError };\n    };\n\n    return { item: inputItem, input, errorTip };\n};\n\n/**\n * 创建具有指定行数和列数的表格\n *\n * @param {number} row - The number of rows for the table (optional, default: 3)\n * @param {number} col - The number of columns for the table (optional, default: 3)\n * @return {Promise} A promise that resolves with an object containing the row and column values when the table creation is confirmed, or rejects if the dialog is closed without confirmation.\n */\nexport const showTableCreator = async (row = 3, col = 3) => {\n    const box = document.createElement('div');\n    box.classList.add('create_box');\n    const inputContent = document.createElement('div');\n    inputContent.classList.add('create_input_content');\n\n    const {\n        item: rowItem,\n        input: rowInput,\n        errorTip: rowErrorTip,\n    } = createInputItem('row', { type: 'number', value: row, max: 99 });\n    const {\n        item: colItem,\n        input: colInput,\n        errorTip: colErrorTip,\n    } = createInputItem('col', { type: 'number', value: col, max: 99 });\n\n    inputContent.appendChild(rowItem);\n    inputContent.appendChild(colItem);\n    box.appendChild(inputContent);\n\n    const control = document.createElement('div');\n    control.classList.add('create_control');\n\n    const confirmBtn = document.createElement('button');\n    confirmBtn.classList.add('create_control_btn', 'confirm');\n    confirmBtn.innerText = 'Confirm';\n\n    const cancelBtn = document.createElement('button');\n    cancelBtn.classList.add('create_control_btn', 'cancel');\n    cancelBtn.innerText = 'Cancel';\n\n    control.appendChild(confirmBtn);\n    control.appendChild(cancelBtn);\n    box.appendChild(control);\n\n    return new Promise((resolve, reject) => {\n        const { close } = dialog({ child: box, beforeClose: reject });\n\n        confirmBtn.onclick = async () => {\n            const row = Number(rowInput.value);\n            const col = Number(colInput.value);\n\n            if (isNaN(row) || row <= 0) {\n                return rowErrorTip('Invalid number');\n            }\n            if (isNaN(col) || col <= 0) {\n                return colErrorTip('Invalid number');\n            }\n            resolve({ row, col });\n            close();\n        };\n        cancelBtn.onclick = () => {\n            close();\n        };\n    });\n};\n\n/**\n * 显示表格选择器\n */\nexport const showTableSelector = (customButton) => {\n    const selectDom = document.createElement('div');\n    selectDom.classList.add('create_select');\n\n    const selectBlock = document.createElement('div');\n    selectBlock.classList.add('create_select_block');\n\n    for (let r = 0; r < 8; r++) {\n        for (let c = 0; c < 8; c++) {\n            const selectItem = document.createElement('div');\n            selectItem.classList.add('create_select_block_item');\n            selectItem.dataset.row = r + 1;\n            selectItem.dataset.col = c + 1;\n            selectBlock.appendChild(selectItem);\n        }\n    }\n\n    const selectCustom = document.createElement('div');\n    selectCustom.classList.add('create_select_custom');\n    selectCustom.innerText = customButton || '自定义行列数';\n\n    selectDom.appendChild(selectBlock);\n    selectDom.appendChild(selectCustom);\n\n    const sendTableData = ({ row, col }) => {\n        selectDom.dispatchEvent(new CustomEvent(CREATE_TABLE, { detail: { row: Number(row), col: Number(col) } }));\n    };\n    const updateSelectBlockItems = () => {\n        const { row, col } = selectDom.dataset;\n        [].forEach.call(selectBlock.querySelectorAll('.active'), (item) => {\n            item.classList.remove('active');\n        });\n        if (!row || !col) return;\n        const childs = Array.from(selectBlock.children);\n        for (let i = 0; i < childs.length; i++) {\n            if (childs[i].dataset.row > row && childs[i].dataset.col > col) {\n                return;\n            }\n            if (childs[i].dataset.row <= row && childs[i].dataset.col <= col) {\n                childs[i].classList.add('active');\n            } else {\n                childs[i].classList.remove('active');\n            }\n        }\n    };\n    selectBlock.addEventListener('mousemove', (e) => {\n        const { row, col } = e.target.dataset;\n        if (!row || !col) return;\n        selectDom.dataset.row = row;\n        selectDom.dataset.col = col;\n        updateSelectBlockItems();\n    });\n    selectBlock.addEventListener('mouseleave', (e) => {\n        selectDom.removeAttribute('data-row');\n        selectDom.removeAttribute('data-col');\n        updateSelectBlockItems();\n    });\n    selectBlock.addEventListener('click', () => {\n        const { row, col } = selectDom.dataset;\n        if (!row || !col) return;\n        sendTableData({ row, col });\n    });\n\n    selectCustom.addEventListener('click', () => {\n        showTableCreator().then(({ row, col }) => {\n            sendTableData({ row, col });\n        });\n    });\n\n    return selectDom;\n};\n\nexport function css(domNode, rules) {\n    if (typeof rules === 'object') {\n        for (let prop in rules) {\n            domNode.style[prop] = rules[prop];\n        }\n    }\n}\n\nexport function getRelativeRect(targetRect, container) {\n    let containerRect = container.getBoundingClientRect();\n\n    return {\n        x: targetRect.x - containerRect.x - container.scrollLeft,\n        y: targetRect.y - containerRect.y - container.scrollTop,\n        x1: targetRect.x - containerRect.x - container.scrollLeft + targetRect.width,\n        y1: targetRect.y - containerRect.y - container.scrollTop + targetRect.height,\n        width: targetRect.width,\n        height: targetRect.height,\n    };\n}\n\nexport function computeBoundaryFromRects(startRect, endRect) {\n    let x = Math.min(startRect.x, endRect.x, startRect.x + startRect.width - 1, endRect.x + endRect.width - 1);\n    let x1 = Math.max(startRect.x, endRect.x, startRect.x + startRect.width - 1, endRect.x + endRect.width - 1);\n    let y = Math.min(startRect.y, endRect.y, startRect.y + startRect.height - 1, endRect.y + endRect.height - 1);\n    let y1 = Math.max(startRect.y, endRect.y, startRect.y + startRect.height - 1, endRect.y + endRect.height - 1);\n\n    let width = x1 - x;\n    let height = y1 - y;\n\n    return { x, x1, y, y1, width, height };\n}\n\nexport function isString(val) {\n    return typeof val === 'string';\n}\nexport function isFunction(val) {\n    return typeof val === 'function';\n}\nexport function isUndefined(val) {\n    return val === undefined;\n}\nexport function isArray(val) {\n    return Array.isArray(val);\n}\n","import { css, isFunction, isString, isArray } from '../utils';\nimport { moduleName } from '../assets/const';\n\nconst MENU_ITEMS_DEFAULT = {\n    insertColumnLeft: {\n        text: '在左侧插入一列',\n        handler() {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.appendCol();\n            tableModule.hideTableTools();\n        },\n    },\n    insertColumnRight: {\n        text: '在右侧插入一列',\n        handler() {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.appendCol(true);\n            tableModule.hideTableTools();\n        },\n    },\n    insertRowTop: {\n        text: '在上方插入一行',\n        handler() {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.appendRow();\n            tableModule.hideTableTools();\n        },\n    },\n    insertRowBottom: {\n        text: '在下方插入一行',\n        groupEnd: true,\n        handler() {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.appendRow(true);\n            tableModule.hideTableTools();\n        },\n    },\n    removeCol: {\n        text: '删除所在列',\n        handler() {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.removeCol();\n            tableModule.hideTableTools();\n        },\n    },\n    removeRow: {\n        text: '删除所在行',\n        handler() {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.removeRow();\n            tableModule.hideTableTools();\n        },\n    },\n    removeTable: {\n        text: '删除表格',\n        groupEnd: true,\n        handler() {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.removeTable();\n            tableModule.hideTableTools();\n        },\n    },\n    mergeCell: {\n        text: '合并单元格',\n        groupEnd: true,\n        handler() {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.mergeCells();\n            tableModule.hideTableTools();\n        },\n    },\n    setBackgroundColor: {\n        text() {\n            const subTitle = document.createElement('span');\n            subTitle.innerText = '设置背景颜色';\n\n            const tableModule = this.quill.getModule(moduleName.table);\n            const input = document.createElement('input');\n            input.type = 'color';\n            input.addEventListener('click', (e) => {\n                e.stopPropagation();\n            });\n            const tempCells = tableModule.tableSelection.selectedTds;\n            input.addEventListener('input', () => {\n                tableModule.setStyle({ backgroundColor: input.value }, tempCells);\n            });\n            input.style.marginLeft = 'auto';\n            return [subTitle, input];\n        },\n    },\n    clearBackgroundColor: {\n        text: '清除背景颜色',\n        handler() {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.setStyle({ backgroundColor: null }, tableModule.tableSelection.selectedTds);\n        },\n    },\n    setBorderColor: {\n        text() {\n            const subTitle = document.createElement('span');\n            subTitle.innerText = '设置边框颜色';\n\n            const tableModule = this.quill.getModule(moduleName.table);\n            const input = document.createElement('input');\n            input.type = 'color';\n            input.addEventListener('click', (e) => {\n                e.stopPropagation();\n            });\n            const tempCells = tableModule.tableSelection.selectedTds;\n            input.addEventListener('input', () => {\n                tableModule.setStyle({ borderColor: input.value }, tempCells);\n            });\n            input.style.marginLeft = 'auto';\n            return [subTitle, input];\n        },\n    },\n    clearBorderColor: {\n        text: '清除边框颜色',\n        handler() {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.setStyle({ borderColor: null }, tableModule.tableSelection.selectedTds);\n        },\n    },\n};\nconst MENU_MIN_HEIHGT = 150;\n\n/*\n    options = {\n        items: {\n           functionName: {\n                text: '显示文字',\n                handle() {},    // 触发事件\n                iconSrc: string,    // icon url\n                groupEnd: boolean, // 是否显示分隔线\n                subTitle: '显示子标题',\n            }\n        }\n    }\n*/\nexport class TableOperationMenu {\n    constructor(params, quill, options = {}) {\n        this.table = params.table;\n        this.quill = quill;\n        this.options = options;\n        const tableModule = this.quill.getModule(moduleName.table);\n        this.tableSelection = tableModule.tableSelection;\n        this.menuItems = {};\n        this.optionsMerge();\n        this.optionsModify();\n\n        this.boundary = this.tableSelection.boundary;\n        this.selectedTds = this.tableSelection.selectedTds;\n\n        this.destroyHandler = this.destroy.bind(this);\n        this.menuInitial(params);\n\n        document.addEventListener('click', this.destroyHandler, false);\n    }\n\n    optionsMerge() {\n        if (this.options?.replaceItems) {\n            this.menuItems = this.options?.items ?? {};\n        } else if (!this.options?.modifyItems) {\n            this.menuItems = Object.assign({}, MENU_ITEMS_DEFAULT, this.options?.items ?? {});\n        } // The menuItems for the other condition is managed through the optionsModify function.\n    }\n    /**\n     * Rewrite the whole functionality in case of 'setBorderColor' and 'setBackgroundColor' buttons.\n     * @param {string} item The type of the button\n     * @param {object} itemNewOptions Contains the user-defined attributes get used to override the buttons' properties\n     */\n    overrideButton(item, itemNewOptions) {\n        MENU_ITEMS_DEFAULT[item] = {\n            text() {\n                const subTitle = document.createElement('span');\n                subTitle.innerText = itemNewOptions.text;\n                const tableModule = this.quill.getModule(moduleName.table);\n                const input = document.createElement('input');\n                input.type = 'color';\n                input.addEventListener('click', (e) => {\n                    e.stopPropagation();\n                });\n                const tempCells = tableModule.tableSelection.selectedTds;\n                input.addEventListener('input', () => {\n                    switch (item) {\n                        case 'setBorderColor':\n                            tableModule.setStyle({ borderColor: input.value }, tempCells);\n                            break;\n                        case 'setBackgroundColor':\n                            tableModule.setStyle({ backgroundColor: input.value }, tempCells);\n                            break;\n                    }\n                });\n                input.style.marginLeft = 'auto';\n                return [subTitle, input];\n            },\n        }\n    }\n    /**\n     * Override the attributes of the context menu items if they exist;\n     * otherwise, define a new one for them.\n     */\n    optionsModify() {\n        if (!this.options?.modifyItems) return;\n        for (const [item, itemNewOptions] of Object.entries(this.options?.items)) {\n            if (!MENU_ITEMS_DEFAULT.hasOwnProperty(item)) continue;\n            switch (item) {\n                case 'setBorderColor':\n                case 'setBackgroundColor':\n                    this.overrideButton(item, itemNewOptions);\n                    break;\n                default:\n                    const itemDefaultOptions = MENU_ITEMS_DEFAULT[item];\n                    Object.keys(itemNewOptions).forEach(option => {\n                        itemDefaultOptions[option] = itemNewOptions[option];\n                    });\n                    break;\n            }\n        }\n        this.menuItems = Object.assign({}, MENU_ITEMS_DEFAULT);\n    }\n\n    setMenuPosition({ left, top }) {\n        const containerRect = this.quill.container.getBoundingClientRect();\n        const menuRect = this.domNode.getBoundingClientRect();\n        let resLeft = left - containerRect.left;\n        let resTop = top - containerRect.top;\n        if (resLeft + menuRect.width > containerRect.width) {\n            resLeft = containerRect.width - menuRect.width;\n        }\n        if (resTop + menuRect.height > containerRect.height) {\n            resTop = containerRect.height - menuRect.height;\n        }\n        Object.assign(this.domNode.style, {\n            left: `${resLeft}px`,\n            top: `${resTop}px`,\n        });\n    }\n\n    menuInitial({ table, row, cell, left, top }) {\n        this.domNode = document.createElement('div');\n        this.domNode.classList.add('ql-table-operation-menu');\n\n        css(this.domNode, {\n            position: 'absolute',\n            'min-height': `${MENU_MIN_HEIHGT}px`,\n        });\n\n        for (const name in this.menuItems) {\n            if (this.menuItems[name]) {\n                if (this.menuItems[name].subTitle) {\n                    this.domNode.appendChild(subTitleCreator(this.menuItems[name].subTitle));\n                }\n\n                this.domNode.appendChild(\n                    this.menuItemCreator(Object.assign({}, MENU_ITEMS_DEFAULT[name], this.menuItems[name]))\n                );\n\n                if (this.menuItems[name].groupEnd) {\n                    this.domNode.appendChild(dividingCreator());\n                }\n            }\n        }\n\n        this.quill.container.appendChild(this.domNode);\n        this.setMenuPosition({ left, top });\n        // create dividing line\n        function dividingCreator() {\n            const dividing = document.createElement('div');\n            dividing.classList.add('ql-table-operation-menu-dividing');\n            return dividing;\n        }\n\n        // create subtitle for menu\n        function subTitleCreator(title) {\n            const subTitle = document.createElement('div');\n            subTitle.classList.add('ql-table-operation-menu-subtitle');\n            subTitle.innerText = title;\n            return subTitle;\n        }\n    }\n\n    destroy() {\n        this.domNode.remove();\n        document.removeEventListener('click', this.destroyHandler, false);\n        return null;\n    }\n\n    menuItemCreator({ text, iconSrc, handler }) {\n        const node = document.createElement('div');\n        node.classList.add('ql-table-operation-menu-item');\n\n        if (iconSrc) {\n            const iconSpan = document.createElement('span');\n            iconSpan.classList.add('ql-table-operation-menu-icon');\n            iconSpan.innerHTML = iconSrc;\n            node.appendChild(iconSpan);\n        }\n\n        if (isString(text)) {\n            const textSpan = document.createElement('span');\n            textSpan.classList.add('ql-table-operation-menu-text');\n            textSpan.innerText = text;\n            node.appendChild(textSpan);\n        } else if (isFunction(text)) {\n            let nodes = text.call(this);\n            if (!isArray(nodes)) {\n                nodes = [nodes];\n            }\n            nodes.map((sub) => node.appendChild(sub));\n        }\n\n        isFunction(handler) && node.addEventListener('click', handler.bind(this), false);\n        return node;\n    }\n}\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableBodyFormat extends Container {\r\n    optimize() {\r\n        super.optimize();\r\n        const next = this.next;\r\n        if (\r\n            next != null &&\r\n            next.prev === this &&\r\n            next.statics.blotName === this.statics.blotName &&\r\n            next.domNode.tagName === this.domNode.tagName\r\n        ) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n\r\n    deleteAt(index, length) {\r\n        if (index === 0 && length === this.length()) {\r\n            this.parent.remove();\r\n        }\r\n        this.children.forEachAt(index, length, function (child, offset, length) {\r\n            child.deleteAt(offset, length);\r\n        });\r\n    }\r\n}\r\nTableBodyFormat.blotName = blotName.tableBody;\r\nTableBodyFormat.tagName = 'tbody';\r\nTableBodyFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport { TableBodyFormat };\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass ContainBlot extends Container {\r\n    static create() {\r\n        const node = super.create();\r\n        return node;\r\n    }\r\n\r\n    insertBefore(blot, ref) {\r\n        if (blot.statics.blotName == this.statics.blotName) {\r\n            super.insertBefore(blot.children.head, ref);\r\n        } else {\r\n            super.insertBefore(blot, ref);\r\n        }\r\n    }\r\n\r\n    format(name, value) {\r\n        this.children.tail.format(name, value);\r\n    }\r\n\r\n    replace(target) {\r\n        if (target.statics.blotName !== this.statics.blotName) {\r\n            const item = Parchment.create(this.statics.defaultChild);\r\n            target.moveChildren(item);\r\n            this.appendChild(item);\r\n        }\r\n        if (target.parent == null) return;\r\n        super.replace(target);\r\n    }\r\n}\r\n\r\nContainBlot.blotName = blotName.contain;\r\nContainBlot.tagName = 'contain';\r\nContainBlot.scope = Parchment.Scope.BLOCK_BLOT;\r\nContainBlot.defaultChild = 'block';\r\n\r\nexport { ContainBlot };\r\n","import Quill from 'quill';\nimport { ContainBlot } from '../blot/contain';\nimport { blotName } from '../assets/const';\nconst Parchment = Quill.import('parchment');\n\nclass TableCellInnerFormat extends ContainBlot {\n    static create(value) {\n        const { tableId, rowId, colId, rowspan, colspan, style } = value;\n        const node = super.create();\n        node.dataset.tableId = tableId;\n        node.dataset.rowId = rowId;\n        node.dataset.colId = colId;\n        node.dataset.rowspan = rowspan || 1;\n        node.dataset.colspan = colspan || 1;\n        node._style = style;\n        return node;\n    }\n\n    // 仅 Block 存在 cache, 存在 cache 时不会获取最新 delta, cache 还会保存父级 format(bubbleFormats 函数), 需要清除以获取最新 delta\n    clearDeltaCache() {\n        this.children.forEach((child) => {\n            child.cache = {};\n        });\n    }\n\n    get rowId() {\n        return this.domNode.dataset.rowId;\n    }\n    get colId() {\n        return this.domNode.dataset.colId;\n    }\n    get rowspan() {\n        return Number(this.domNode.dataset.rowspan);\n    }\n    set rowspan(value) {\n        this.parent && (this.parent.rowspan = value);\n        this.domNode.dataset.rowspan = value;\n        this.clearDeltaCache();\n    }\n    get colspan() {\n        return Number(this.domNode.dataset.colspan);\n    }\n    set colspan(value) {\n        this.parent && (this.parent.colspan = value);\n        this.domNode.dataset.colspan = value;\n        this.clearDeltaCache();\n    }\n    set style(value) {\n        this.parent.style = value;\n        this.domNode._style = this.parent.style;\n        this.clearDeltaCache();\n    }\n\n    replace(target) {\n        if (target.statics.blotName !== this.statics.blotName) {\n            const cloneTarget = target.clone();\n            target.moveChildren(cloneTarget);\n            this.appendChild(cloneTarget);\n            target.parent.insertBefore(this, target.next);\n            target.remove();\n        } else {\n            super.replace(target);\n        }\n    }\n\n    format(name, value) {\n        super.format(name, value);\n        this.clearDeltaCache();\n    }\n\n    formats() {\n        const { tableId, rowId, colId, rowspan, colspan } = this.domNode.dataset;\n        return {\n            [this.statics.blotName]: {\n                tableId,\n                rowId,\n                colId,\n                rowspan,\n                colspan,\n                style: this.domNode._style,\n            },\n        };\n    }\n\n    optimize() {\n        super.optimize();\n\n        const parent = this.parent;\n        // 父级非表格，则将当前 blot 放入表格中\n        const { tableId, colId, rowId, rowspan, colspan } = this.domNode.dataset;\n        if (parent != null && parent.statics.blotName != blotName.tableCell) {\n            const mark = Parchment.create('block');\n\n            this.parent.insertBefore(mark, this.next);\n            const tableWrapper = Parchment.create(blotName.tableWrapper, tableId);\n            const table = Parchment.create(blotName.table, tableId);\n            const tableBody = Parchment.create(blotName.tableBody);\n            const tr = Parchment.create(blotName.tableRow, rowId);\n            const td = Parchment.create(blotName.tableCell, {\n                tableId,\n                rowId,\n                colId,\n                rowspan,\n                colspan,\n                style: this.domNode._style,\n            });\n\n            td.appendChild(this);\n            tr.appendChild(td);\n            tableBody.appendChild(tr);\n            table.appendChild(tableBody);\n            tableWrapper.appendChild(table);\n\n            tableWrapper.replace(mark);\n        }\n\n        const next = this.next;\n        // cell 下有多个 cellInner 全部合并\n        if (next != null && next.prev === this && next.statics.blotName === this.statics.blotName) {\n            next.moveChildren(this);\n            next.remove();\n        }\n    }\n}\n\nTableCellInnerFormat.blotName = blotName.tableCellInner;\nTableCellInnerFormat.tagName = 'p';\nTableCellInnerFormat.className = 'ql-table-cell-inner';\n\nexport { TableCellInnerFormat };\n","import Quill from 'quill';\nimport { blotName } from '../assets/const';\nimport { TableCellInnerFormat } from './TableCellInnerFormat';\nconst Parchment = Quill.import('parchment');\nconst Container = Quill.import('blots/container');\n\nclass TableCellFormat extends Container {\n    static create(value) {\n        const { rowId, colId, rowspan, colspan, style } = value;\n        const node = super.create();\n        node.dataset.rowId = rowId;\n        node.dataset.colId = colId;\n        node.setAttribute('rowspan', rowspan || 1);\n        node.setAttribute('colspan', colspan || 1);\n        node.style.cssText = style;\n        return node;\n    }\n\n    get rowId() {\n        return this.domNode.dataset.rowId;\n    }\n    get colId() {\n        return this.domNode.dataset.colId;\n    }\n    get rowspan() {\n        return Number(this.domNode.getAttribute('rowspan'));\n    }\n    set rowspan(value) {\n        this.domNode.setAttribute('rowspan', value);\n    }\n    get colspan() {\n        return Number(this.domNode.getAttribute('colspan'));\n    }\n    set colspan(value) {\n        this.domNode.setAttribute('colspan', value);\n    }\n    get style() {\n        return this.domNode.style.cssText;\n    }\n    set style(value) {\n        Object.assign(this.domNode.style, value);\n    }\n\n    getCellInner() {\n        return this.descendants(TableCellInnerFormat)[0];\n    }\n\n    optimize() {\n        super.optimize();\n        const { colId, rowId } = this.domNode.dataset;\n        const next = this.next;\n        if (\n            next != null &&\n            next.prev === this &&\n            next.statics.blotName === this.statics.blotName &&\n            next.domNode.dataset.rowId === rowId &&\n            next.domNode.dataset.colId === colId\n        ) {\n            next.moveChildren(this);\n            next.remove();\n        }\n    }\n\n    deleteAt(index, length) {\n        if (index === 0 && length === this.length()) {\n            const cell = this.next || this.prev;\n            const cellInner = cell && cell.getCellInner();\n            if (cellInner) {\n                cellInner.colspan += this.colspan;\n            }\n            return this.remove();\n        }\n        this.children.forEachAt(index, length, function (child, offset, length) {\n            child.deleteAt(offset, length);\n        });\n    }\n}\n\nTableCellFormat.blotName = blotName.tableCell;\nTableCellFormat.tagName = 'td';\nTableCellFormat.className = 'ql-table-cell';\nTableCellFormat.scope = Parchment.Scope.BLOCK_BLOT;\n\nexport { TableCellFormat };\n","import Quill from 'quill';\nimport { blotName } from '../assets/const';\nconst Parchment = Quill.import('parchment');\nconst BlockEmbed = Quill.import('blots/block/embed');\nconst Block = Quill.import('blots/block');\nconst Container = Quill.import('blots/container');\nimport { ContainBlot } from '../blot/contain';\n\nclass TableColFormat extends ContainBlot {\n    static create(value) {\n        const { width, tableId, colId, full } = value;\n        const node = super.create();\n        node.setAttribute('width', `${parseFloat(width)}${full ? '%' : 'px'}`);\n        full && node.setAttribute('data-full', full);\n        node.dataset.tableId = tableId;\n        node.dataset.colId = colId;\n        node.setAttribute('contenteditable', false);\n        return node;\n    }\n\n    get width() {\n        const width = this.domNode.getAttribute('width');\n        return parseFloat(width);\n    }\n    set width(value) {\n        const width = parseFloat(value);\n        return this.domNode.setAttribute('width', `${width}${this.full ? '%' : 'px'}`);\n    }\n\n    get colId() {\n        return this.domNode.dataset.colId;\n    }\n\n    get full() {\n        return this.domNode.hasAttribute('data-full');\n    }\n\n    formats() {\n        const { tableId, colId } = this.domNode.dataset;\n        return {\n            [this.statics.blotName]: {\n                tableId,\n                colId,\n                width: this.domNode.getAttribute('width'),\n                full: this.domNode.hasAttribute('data-full'),\n            },\n        };\n    }\n\n    optimize() {\n        super.optimize();\n\n        const parent = this.parent;\n        if (parent != null && parent.statics.blotName != blotName.tableColGroup) {\n            const mark = Parchment.create('block');\n            this.parent.insertBefore(mark, this.next);\n\n            const tableWrapper = Parchment.create(blotName.tableWrapper, this.domNode.dataset.tableId);\n            const table = Parchment.create(blotName.table, this.domNode.dataset.tableId);\n\n            this.full && (table.full = true);\n\n            const tableColgroup = Parchment.create(blotName.tableColGroup);\n\n            tableColgroup.appendChild(this);\n            table.appendChild(tableColgroup);\n            tableWrapper.appendChild(table);\n\n            tableWrapper.replace(mark);\n        }\n        const next = this.next;\n        const { tableId: ttableId, colId: tcolId } = this.domNode.dataset;\n        if (\n            next != null &&\n            next.statics.blotName === this.statics.blotName &&\n            next.domNode.tagName === this.domNode.tagName &&\n            next.domNode.dataset.tableId === ttableId &&\n            next.domNode.dataset.colId === tcolId\n        ) {\n            next.moveChildren(this);\n            next.remove();\n        }\n    }\n}\nTableColFormat.blotName = blotName.tableCol;\nTableColFormat.tagName = 'col';\nTableColFormat.scope = Parchment.Scope.BLOCK_BLOT;\n\nexport { TableColFormat };\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableColgroupFormat extends Container {\r\n    optimize() {\r\n        super.optimize();\r\n        const next = this.next;\r\n        if (\r\n            next != null &&\r\n            next.prev === this &&\r\n            next.statics.blotName === this.statics.blotName &&\r\n            next.domNode.tagName === this.domNode.tagName\r\n        ) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n\r\n    findCol(index) {\r\n        const next = this.children.iterator();\r\n        let i = 0;\r\n        let cur;\r\n        while ((cur = next())) {\r\n            if (i === index) {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        return cur;\r\n    }\r\n}\r\nTableColgroupFormat.blotName = blotName.tableColGroup;\r\nTableColgroupFormat.tagName = 'colgroup';\r\nTableColgroupFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport { TableColgroupFormat };\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nimport { TableCellInnerFormat } from './TableCellInnerFormat';\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableRowFormat extends Container {\r\n    static create(value) {\r\n        const node = super.create();\r\n        node.dataset.rowId = value;\r\n        return node;\r\n    }\r\n\r\n    optimize() {\r\n        super.optimize();\r\n        const next = this.next;\r\n        if (\r\n            next != null &&\r\n            next.prev === this &&\r\n            next.statics.blotName === this.statics.blotName &&\r\n            next.domNode.dataset.rowId === this.domNode.dataset.rowId\r\n        ) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n\r\n    get rowId() {\r\n        return this.domNode.dataset.rowId;\r\n    }\r\n\r\n    foreachCellInner(func) {\r\n        const next = this.children.iterator();\r\n        let i = 0;\r\n        let cur;\r\n        while ((cur = next())) {\r\n            const [tableCell] = cur.descendants(TableCellInnerFormat);\r\n            if (func(tableCell, i++)) break;\r\n        }\r\n    }\r\n}\r\n\r\nTableRowFormat.blotName = blotName.tableRow;\r\nTableRowFormat.tagName = 'tr';\r\nTableRowFormat.className = 'ql-table-row';\r\nTableRowFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport { TableRowFormat };\r\n","import Quill from 'quill';\nimport { blotName } from '../assets/const';\nimport { TableRowFormat } from './TableRowFormat';\nimport { TableColFormat } from './TableColFormat';\nconst Container = Quill.import('blots/container');\nconst Parchment = Quill.import('parchment');\n\nclass TableFormat extends Container {\n    constructor(domNode, value) {\n        super(domNode, value);\n\n        this.formatTableWidth();\n    }\n\n    static create(value) {\n        const node = super.create();\n\n        node.dataset.tableId = value;\n        node.classList.add('ql-table');\n        node.setAttribute('cellpadding', 0);\n        node.setAttribute('cellspacing', 0);\n\n        return node;\n    }\n\n    colWidthFillTable() {\n        if (this.full) return;\n        const colgroup = this.children.head;\n        if (!colgroup || colgroup.statics.blotName !== blotName.tableColGroup) return;\n        const colsWidth = colgroup.children.reduce((sum, col) => col.width + sum, 0);\n        if (colsWidth === 0 || isNaN(colsWidth) || this.full) return null;\n        this.domNode.style.width = colsWidth + 'px';\n        return colsWidth;\n    }\n\n    formatTableWidth() {\n        setTimeout(() => {\n            this.colWidthFillTable();\n        }, 0);\n    }\n\n    get tableId() {\n        return this.domNode.dataset.tableId;\n    }\n    get full() {\n        return this.domNode.hasAttribute('data-full');\n    }\n    set full(value) {\n        this.domNode[value ? 'setAttribute' : 'removeAttribute']('data-full', '');\n    }\n\n    getRows() {\n        return this.descendants(TableRowFormat);\n    }\n    getRowIds() {\n        return this.getRows().map((d) => d.rowId);\n    }\n\n    getCols() {\n        return this.descendants(TableColFormat);\n    }\n    getColIds() {\n        return this.getCols().map((d) => d.colId);\n    }\n\n    optimize() {\n        super.optimize();\n        let next = this.next;\n        if (\n            next != null &&\n            next.prev === this &&\n            next.statics.blotName === this.statics.blotName &&\n            next.domNode.tagName === this.domNode.tagName &&\n            next.domNode.dataset.tableId === this.domNode.dataset.tableId\n        ) {\n            next.moveChildren(this);\n            next.remove();\n        }\n    }\n}\n\nTableFormat.blotName = blotName.table;\nTableFormat.tagName = 'table';\nTableFormat.scope = Parchment.Scope.BLOCK_BLOT;\n\nexport { TableFormat };\n","import Quill from 'quill';\nimport { blotName } from '../assets/const';\nconst Container = Quill.import('blots/container');\nconst Parchment = Quill.import('parchment');\n\nclass TableWrapperFormat extends Container {\n    static create(value) {\n        const node = super.create();\n\n        node.dataset.tableId = value;\n\n        node.addEventListener(\n            'dragstart',\n            (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n            },\n            true\n        );\n        // 不允许拖拽进 table\n        node.ondrop = (e) => {\n            e.preventDefault();\n        };\n        // 修改拖拽进入时的鼠标样式\n        node.ondragover = (e) => {\n            e.preventDefault();\n            e.dataTransfer.dropEffect = 'none';\n        };\n        return node;\n    }\n\n    get tableId() {\n        return this.domNode.dataset.tableId;\n    }\n\n    insertBefore(blot, ref) {\n        if (blot.statics.blotName == this.statics.blotName) {\n            // 合并\n            super.insertBefore(blot.children.head, ref);\n        } else if (this.statics.allowedChildren.find((child) => child.blotName === blot.statics.blotName)) {\n            // 允许子 blot\n            super.insertBefore(blot, ref);\n        } else {\n            // 非允许子 blot, ref 为 null 是插入头, 否则插入尾\n            if (ref) {\n                this.prev ? this.prev.insertBefore(blot, null) : this.parent.insertBefore(blot, this);\n            } else {\n                this.next ? this.next.insertBefore(blot, ref) : this.parent.appendChild(blot);\n            }\n        }\n    }\n\n    optimize() {\n        super.optimize();\n        let next = this.next;\n        if (\n            next != null &&\n            next.prev === this &&\n            next.statics.blotName === this.statics.blotName &&\n            next.domNode.tagName === this.domNode.tagName &&\n            next.domNode.dataset.tableId === this.domNode.dataset.tableId\n        ) {\n            next.moveChildren(this);\n            next.remove();\n        }\n    }\n\n    deleteAt(index, length) {\n        super.deleteAt(index, length);\n        // 删除 table 时隐藏当前 table 的 tooltip\n        document.querySelector(`.ql-table-tooltip[data-table-id=\"${this.tableId}\"]`)?.classList?.add('ql-hidden');\n    }\n}\nTableWrapperFormat.blotName = blotName.tableWrapper;\nTableWrapperFormat.tagName = 'p';\nTableWrapperFormat.className = 'ql-table-wrapper';\nTableWrapperFormat.scope = Parchment.Scope.BLOCK_BLOT;\n\nexport { TableWrapperFormat };\n","import Quill from 'quill';\nimport { blotName } from '../../assets/const';\nconst Parchment = Quill.import('parchment');\nconst ListItem = Quill.import('formats/list/item');\n\nclass ListItemRewrite extends ListItem {\n    replaceWith(name, value) {\n        this.parent.isolate(this.offset(this.parent), this.length());\n        if (name === this.parent.statics.blotName) {\n            this.parent.replaceWith(name, value);\n            return this;\n        } else {\n            if (name === blotName.tableCellInner) {\n                let replacement = typeof name === 'string' ? Parchment.create(name, value) : name;\n                replacement.replace(this.parent);\n                this.attributes.copy(replacement);\n                return replacement;\n            }\n            return super.replaceWith(name, value);\n        }\n    }\n}\nexport { ListItemRewrite };\n","// 以 ql-better-table 的 table-selection.js 为修改基础\n\nimport Quill from 'quill';\nimport { TableCellFormat } from '../format';\nimport { css, getRelativeRect, computeBoundaryFromRects } from '../utils';\n\nlet PRIMARY_COLOR = '#0589f3';\nconst ERROR_LIMIT = 2;\n\n/*\n\toptions = {\n\t\tprimaryColor: Hex color code\n\t}\n*/\nexport class TableSelection {\n    constructor(table, quill, options = {}) {\n        if (!table) return null;\n        this.table = table;\n        this.quill = quill;\n        this.options = options;\n        this.optionsMerge();\n\n        this.boundary = {};\n        // 选中的 cell\n        this.selectedTds = [];\n        this.dragging = false;\n        this.selectingHandler = this.mouseDownHandler.bind(this);\n        this.cellSelect = null; // selection 显示边框\n        this.scrollHandler = [];\n        this.helpLinesInitial();\n\n        const resizeObserver = new ResizeObserver((entries) => {\n            this.clearSelection();\n        });\n        resizeObserver.observe(this.quill.root);\n\n        this.quill.root.addEventListener('mousedown', this.selectingHandler, false);\n        this.closeHandler = this.clearSelection.bind(this);\n        this.quill.on(Quill.events.TEXT_CHANGE, this.closeHandler);\n    }\n\n    optionsMerge() {\n        this.options?.primaryColor && (PRIMARY_COLOR = this.options.primaryColor);\n    }\n\n    addScrollEvent(dom, handle) {\n        dom.addEventListener('scroll', handle);\n        this.scrollHandler.push([dom, handle]);\n    }\n\n    clearScrollEvent() {\n        for (let i = 0; i < this.scrollHandler.length; i++) {\n            let [dom, handle] = this.scrollHandler[i];\n            dom.removeEventListener('scroll', handle);\n        }\n        this.scrollHandler = [];\n    }\n\n    // 初始化边框 dom\n    helpLinesInitial() {\n        this.cellSelect = this.quill.addContainer('ql-table-selection_line');\n        css(this.cellSelect, {\n            'border-color': PRIMARY_COLOR,\n        });\n    }\n\n    mouseDownHandler(e) {\n        if (e.button !== 0 || !e.target.closest('.ql-table')) return;\n        const startTableId = e.target.closest('.ql-table').dataset.tableId;\n\n        const mouseMoveHandler = (e) => {\n            // 根据 tableId 判断是否跨表格，跨表格不计算\n            if (\n                e.button !== 0 ||\n                !e.target.closest('.ql-table') ||\n                e.target.closest('.ql-table').dataset.tableId !== startTableId\n            )\n                return;\n\n            const endTd = e.target.closest('td[data-row-id]');\n            const endTdRect = getRelativeRect(endTd.getBoundingClientRect(), this.quill.root.parentNode);\n            this.boundary = computeBoundaryFromRects(startTdRect, endTdRect);\n            this.correctBoundary();\n            this.selectedTds = this.computeSelectedTds();\n            this.repositionHelpLines();\n\n            if (startTd !== endTd) {\n                this.quill.blur();\n            }\n        };\n\n        const mouseUpHandler = (e) => {\n            document.body.removeEventListener('mousemove', mouseMoveHandler, false);\n            document.body.removeEventListener('mouseup', mouseUpHandler, false);\n            this.dragging = false;\n        };\n\n        document.body.addEventListener('mousemove', mouseMoveHandler, false);\n        document.body.addEventListener('mouseup', mouseUpHandler, false);\n\n        const startTd = e.target.closest('td[data-row-id]');\n        const startTdRect = getRelativeRect(startTd.getBoundingClientRect(), this.quill.root.parentNode);\n        this.dragging = true;\n        this.boundary = computeBoundaryFromRects(startTdRect, startTdRect);\n        this.correctBoundary();\n        this.selectedTds = this.computeSelectedTds();\n        this.repositionHelpLines();\n\n        this.addScrollEvent(this.table.parentNode, () => {\n            // 处理 boundary, 使滚动时 left 等跟随滚动\n            this.repositionHelpLines();\n        });\n\n        const srcollHide = () => {\n            this.clearSelection();\n            this.quill.root.removeEventListener('scroll', srcollHide);\n        };\n        this.quill.root.addEventListener('scroll', srcollHide);\n    }\n\n    computeSelectedTds() {\n        const tableContainer = Quill.find(this.table);\n        // 选中范围计算任然使用 tableCell, tableCellInner 可滚动, width 会影响\n        const tableCells = tableContainer.descendants(TableCellFormat);\n\n        return tableCells.reduce((selectedCells, tableCell) => {\n            let { x, y, width, height } = getRelativeRect(\n                tableCell.domNode.getBoundingClientRect(),\n                this.quill.root.parentNode\n            );\n            let isCellIncluded =\n                x + ERROR_LIMIT >= this.boundary.x &&\n                x - ERROR_LIMIT + width <= this.boundary.x1 &&\n                y + ERROR_LIMIT >= this.boundary.y &&\n                y - ERROR_LIMIT + height <= this.boundary.y1;\n\n            if (isCellIncluded) {\n                selectedCells.push(tableCell.getCellInner());\n            }\n\n            return selectedCells;\n        }, []);\n    }\n\n    correctBoundary() {\n        // 边框计算任然使用 tableCell, 有 padding 会影响\n        const tableContainer = Quill.find(this.table);\n        const tableCells = tableContainer.descendants(TableCellFormat);\n\n        tableCells.forEach((tableCell) => {\n            const { x, y, width, height } = getRelativeRect(\n                tableCell.domNode.getBoundingClientRect(),\n                this.quill.root.parentNode\n            );\n\n            const isCellIntersected =\n                ((x + ERROR_LIMIT >= this.boundary.x && x + ERROR_LIMIT <= this.boundary.x1) ||\n                    (x - ERROR_LIMIT + width >= this.boundary.x && x - ERROR_LIMIT + width <= this.boundary.x1)) &&\n                ((y + ERROR_LIMIT >= this.boundary.y && y + ERROR_LIMIT <= this.boundary.y1) ||\n                    (y - ERROR_LIMIT + height >= this.boundary.y && y - ERROR_LIMIT + height <= this.boundary.y1));\n\n            if (isCellIntersected) {\n                this.boundary = computeBoundaryFromRects(this.boundary, { x, y, width, height });\n            }\n        });\n        this.scrollX = this.table.parentNode.scrollLeft;\n    }\n    // 边框样式显示\n    repositionHelpLines() {\n        const tableViewScrollLeft = this.table.parentNode.scrollLeft;\n        const scrollTop = this.quill.root.parentNode.scrollTop;\n\n        css(this.cellSelect, {\n            display: 'block',\n            left: `${this.boundary.x + (this.scrollX - tableViewScrollLeft) - 1}px`,\n            top: `${scrollTop * 2 + this.boundary.y}px`,\n            width: `${this.boundary.width + 1}px`,\n            height: `${this.boundary.height + 1}px`,\n        });\n    }\n\n    clearSelection() {\n        this.boundary = {};\n        this.selectedTds = [];\n\n        this.cellSelect &&\n            css(this.cellSelect, {\n                display: 'none',\n            });\n        this.clearScrollEvent();\n    }\n\n    destroy() {\n        this.clearSelection();\n        this.cellSelect.remove();\n        this.cellSelect = null;\n        this.clearScrollEvent();\n\n        this.quill.root.removeEventListener('mousedown', this.selectingHandler, false);\n        this.quill.off(Quill.events.TEXT_CHANGE, this.closeHandler);\n\n        return null;\n    }\n}\n","import Quill from 'quill';\nimport { TableWrapperFormat } from '../format';\nimport { css, getRelativeRect } from '../utils';\nimport { blotName, toolName, CELL_MIN_WIDTH, CELL_MIN_PRE } from '../assets/const';\nlet TIP_HEIGHT = 12;\n/*\n\toptions = {\n\t\ttipHeight: 12,\t// tooltip height\n\t\tdisableToolNames: [],\t// 表格内禁用项， toolbar 的 name\n\t}\n*/\nexport class TableTooltip {\n    constructor(quill, options = {}) {\n        this.quill = quill;\n        this.options = options;\n        this.optionsMerge();\n\n        this.tableDisableToolHandlers = {};\n        this.tableWrapper = null;\n        this.table = null;\n        this.curTableId = '';\n        this.focusTableChange = false;\n        this.tableCols = [];\n        this.scrollHandler = [];\n\n        this.root = this.quill.addContainer('ql-table-tooltip');\n        this.root.style.height = TIP_HEIGHT + 'px';\n\n        const resizeObserver = new ResizeObserver((entries) => {\n            this.hide();\n            this.focusTableChange = true;\n            this.curTableId = '';\n        });\n        resizeObserver.observe(this.quill.root);\n\n        this.isMobile = 'ontouchstart' in window;\n        this.handledEvents = this.isMobile\n            ? { down: 'touchstart', move: 'touchmove', up: 'touchend' }\n            : { down: 'mousedown', move: 'mousemove', up: 'mouseup' };\n\n        this.hide();\n        this.listen();\n    }\n\n    optionsMerge() {\n        this.options?.tipHeight && (TIP_HEIGHT = this.options.tipHeight);\n        TableTooltip.disableToolNames = Array.from(\n            new Set([...TableTooltip.disableToolNames, ...(this.options?.disableToolNames || [])])\n        );\n    }\n\n    listen() {\n        this.quill.on(Quill.events.EDITOR_CHANGE, (eventName) => {\n            if (eventName === Quill.events.TEXT_CHANGE) {\n                return this.hide();\n            }\n            const range = this.quill.getSelection();\n\n            if (range == null) {\n                this.hide();\n                this.enableFromTable();\n                return;\n            }\n            const [tableWrapper] = this.quill.scroll.descendant(TableWrapperFormat, range.index);\n            if (tableWrapper !== null) {\n                // 此时在 table 内, 禁用部分功能\n                this.disableFromTable();\n\n                this.tableWrapper = tableWrapper;\n                this.table = tableWrapper.children.head;\n                // 找到 tbody\n                let tbody = tableWrapper.children.tail;\n                while (tbody && tbody.statics.blotName !== blotName.tableBody) {\n                    tbody = tbody.children?.tail;\n                }\n\n                const tableCols = tableWrapper.children.head?.children?.head;\n                if (tableCols.statics.blotName === blotName.tableColGroup && tableCols.children.length) {\n                    this.tableCols = tableCols.children.map((col) => col);\n                } else {\n                    this.tableCols = [];\n                }\n\n                let curTableId = tableWrapper.children.head.tableId;\n                if (this.curTableId !== curTableId) {\n                    this.clearScrollEvent();\n                    this.focusTableChange = true;\n                    // 表格滚动同步事件\n                    this.addScrollEvent(\n                        this.tableWrapper.domNode,\n                        this.scrollSync.bind(this, this.tableWrapper.domNode)\n                    );\n                }\n                this.curTableId = curTableId;\n\n                this.show();\n                this.position();\n                return;\n            } else {\n                this.enableFromTable();\n            }\n            this.hide();\n        });\n    }\n\n    disableFromTable() {\n        this.toggleDisableToolbarTools('add');\n\n        const toolbar = this.quill.getModule('toolbar');\n        // 防止重复触发覆盖保存事件\n        if (toolbar.disableByTable) return;\n        toolbar.disableByTable = true;\n        // 去除 toolbar 对应 module 的 handler 事件, 保存在 tableDisableToolHandlers\n        for (const toolName of TableTooltip.disableToolNames) {\n            this.tableDisableToolHandlers[toolName] = toolbar.handlers[toolName];\n            // 不要设置为 null\n            toolbar.handlers[toolName] = () => {};\n        }\n    }\n\n    enableFromTable() {\n        this.toggleDisableToolbarTools('remove');\n\n        const toolbar = this.quill.getModule('toolbar');\n        // 根据 tableDisableToolHandlers 恢复 handler\n        for (const toolName in this.tableDisableToolHandlers) {\n            toolbar.handlers[toolName] = this.tableDisableToolHandlers[toolName];\n        }\n        this.tableDisableToolHandlers = {};\n        toolbar.disableByTable = false;\n    }\n\n    /**\n     * Toggles the disable state of toolbar tools.\n     *\n     * @param {'add' | 'remove'} type - The type of toggle action to perform.\n     */\n    toggleDisableToolbarTools(type) {\n        const toolbar = this.quill.getModule('toolbar');\n        toolbar.controls.map(([name, btn]) => {\n            if (TableTooltip.disableToolNames.includes(name)) {\n                if (btn.tagName.toLowerCase() === 'select') {\n                    toolbar.container\n                        .querySelector(`.ql-picker.${btn.className}`)\n                        ?.classList[type]('ql-disabled-table');\n                } else {\n                    btn.classList[type]('ql-disabled-table');\n                }\n            }\n        });\n    }\n\n    scrollSync(dom, e) {\n        this.root.scrollLeft = dom.scrollLeft;\n    }\n\n    addScrollEvent(dom, handle) {\n        dom.addEventListener('scroll', handle);\n        this.scrollHandler.push([dom, handle]);\n    }\n\n    clearScrollEvent() {\n        for (let i = 0; i < this.scrollHandler.length; i++) {\n            const [dom, handle] = this.scrollHandler[i];\n            dom.removeEventListener('scroll', handle);\n        }\n        this.scrollHandler = [];\n    }\n\n    position = () => {\n        const rect = getRelativeRect(this.table.domNode.getBoundingClientRect(), this.quill.root);\n        const tableTop = this.table.domNode.offsetTop;\n        const rootScrollTop = this.quill.root.scrollTop;\n        css(this.root, {\n            top: `${tableTop - rootScrollTop - TIP_HEIGHT}px`,\n            left: rect.x + 'px', // table 距离 editor 的 padding\n        });\n    };\n\n    show() {\n        // 若没有 colgroup col 元素，不显示\n        if (!this.tableCols.length) {\n            return;\n        }\n\n        if (this.focusTableChange) {\n            const tableWrapperRect = this.tableWrapper.domNode.getBoundingClientRect();\n            // 加 tableId 用于 table 删除时隐藏 tooltip\n            this.root.dataset.tableId = this.tableWrapper.tableId;\n            this.root.innerHTML = [...this.tableCols]\n                .map((col) => {\n                    let width = col.width + (this.table.full ? '%' : 'px');\n                    if (!col.width) {\n                        width = col.domNode.getBoundingClientRect().width + 'px';\n                    }\n                    return `<div class=\"ql-table-col-header\" style=\"width: ${width}\">\n            \t\t\t<div class=\"ql-table-col-separator\" style=\"height: ${tableWrapperRect.height + TIP_HEIGHT - 3}px\"></div>\n            \t\t</div>`; // -3 为 border-width: 2, top: 1\n                })\n                .join('');\n\n            this.focusTableChange = false;\n            Object.assign(this.root.style, {\n                width: tableWrapperRect.width + 'px',\n            });\n\n            this.bindDrag();\n        }\n        setTimeout(() => {\n            this.scrollSync(this.tableWrapper.domNode);\n        }, 0);\n        this.root.classList.remove('ql-hidden');\n\n        const srcollHide = () => {\n            this.hide();\n            this.quill.root.removeEventListener('scroll', srcollHide);\n        };\n        this.quill.root.addEventListener('scroll', srcollHide);\n    }\n\n    hide() {\n        this.root.classList.add('ql-hidden');\n    }\n\n    bindDrag() {\n        let tipColBreak = null;\n        let curColIndex = -1;\n        let tableColHeads = Array.from(this.root.getElementsByClassName('ql-table-col-header'));\n        let tableColHeadSeparators = Array.from(this.root.getElementsByClassName('ql-table-col-separator'));\n        const appendTo = document.body;\n        // 设置每个 drag 下标对应 col 下标，最右会多一个 drag, 与 better-table 的类似\n        // 根据当前的 col left 配合 clientX 计算, 使保证最小宽度\n        const handleMousemove = (e) => {\n            // getBoundingClientRect 的 top/bottom/left/right, 这是根据视口距离\n            const rect = tableColHeads[curColIndex].getBoundingClientRect();\n            const tableWidth = this.table.domNode.getBoundingClientRect().width;\n            let resX = this.isMobile ? e.changedTouches[0].clientX : e.clientX;\n\n            if (this.table.full) {\n                // 拖拽的最大宽度是当前 col 宽度 + next col 宽度, 最后一个 col 最大宽度是当前宽度\n                const minWidth = (CELL_MIN_PRE / 100) * tableWidth;\n                const maxRange =\n                    resX > rect.right\n                        ? tableColHeads[curColIndex + 1]\n                            ? tableColHeads[curColIndex + 1].getBoundingClientRect().right - minWidth\n                            : rect.right - minWidth\n                        : Infinity;\n                const minRange = rect.x + minWidth;\n\n                resX = Math.min(Math.max(resX, minRange), maxRange);\n            } else {\n                if (resX - rect.x < CELL_MIN_WIDTH) {\n                    resX = rect.x + CELL_MIN_WIDTH;\n                }\n            }\n            resX = Math.floor(resX);\n            tipColBreak.style.left = resX + 'px';\n            tipColBreak.dataset.w = resX - rect.x;\n        };\n        const handleMouseup = (e) => {\n            let w = parseInt(tipColBreak.dataset.w);\n            // table full 时处理不同\n            if (this.table.full) {\n                // 在调整一个后把所有 col 都变成百分比\n                let pre = (w / this.table.domNode.getBoundingClientRect().width) * 100;\n                let oldWidthPre = this.tableCols[curColIndex].width;\n                if (pre < oldWidthPre) {\n                    // 缩小时若不是最后一个, 则把减少的量加在后面一个\n                    // 若是最后一个则把减少的量加在前面一个\n                    pre = Math.max(CELL_MIN_PRE, pre);\n                    const last = oldWidthPre - pre;\n                    if (this.tableCols[curColIndex + 1]) {\n                        this.tableCols[curColIndex + 1].width = `${this.tableCols[curColIndex + 1].width + last}%`;\n                    } else if (this.tableCols[curColIndex - 1]) {\n                        this.tableCols[curColIndex - 1].width = `${this.tableCols[curColIndex - 1].width + last}%`;\n                    } else {\n                        pre = 100;\n                    }\n                    this.tableCols[curColIndex].width = `${pre}%`;\n                } else {\n                    // 增大时若不是最后一个, 则与后面一个的宽度合并, 最大不能超过合并的宽度, 增加的量来自后面一个的减少量\n                    // 若是最后一个则不处理\n                    if (this.tableCols[curColIndex + 1]) {\n                        const totalWidthNextPre = oldWidthPre + this.tableCols[curColIndex + 1].width;\n                        pre = Math.min(totalWidthNextPre - CELL_MIN_PRE, pre);\n                        this.tableCols[curColIndex].width = `${pre}%`;\n                        this.tableCols[curColIndex + 1].width = `${totalWidthNextPre - pre}%`;\n                    }\n                }\n            } else {\n                this.table.domNode.style.width =\n                    parseFloat(this.table.domNode.style.width) -\n                    parseFloat(tableColHeads[curColIndex].style.width) +\n                    w +\n                    'px';\n                tableColHeads[curColIndex].style.width = `${w}px`;\n                this.tableCols[curColIndex].width = `${w}px`;\n            }\n            this.table.formatTableWidth();\n\n            appendTo.removeChild(tipColBreak);\n            tipColBreak = null;\n            curColIndex = -1;\n            document.removeEventListener(this.handledEvents.up, handleMouseup);\n            document.removeEventListener(this.handledEvents.move, handleMousemove);\n\n            const tableModule = this.quill.getModule(toolName.table);\n            tableModule.hideTableTools();\n        };\n        const handleMousedown = (i, e) => {\n            document.addEventListener(this.handledEvents.up, handleMouseup);\n            document.addEventListener(this.handledEvents.move, handleMousemove);\n            curColIndex = i;\n\n            const divDom = document.createElement('div');\n            divDom.classList.add('ql-table-drag-line');\n\n            const tableRect = this.tableWrapper.domNode.getBoundingClientRect();\n            css(divDom, {\n                top: `${tableRect.y - TIP_HEIGHT}px`,\n                left: `${this.isMobile ? e.changedTouches[0].clientX : e.clientX}px`,\n                height: `${tableRect.height + TIP_HEIGHT}px`,\n            });\n            appendTo.appendChild(divDom);\n\n            if (tipColBreak) appendTo.removeChild(tipColBreak);\n            tipColBreak = divDom;\n        };\n        tableColHeadSeparators.map((el, i) => {\n            el.addEventListener(this.handledEvents.down, handleMousedown.bind(this, i));\n            // 防止拖拽使触发 drag 导致可以使此元素被插入表格\n            el.addEventListener('dragstart', (e) => {\n                e.preventDefault();\n            });\n        });\n    }\n}\n\n// 在 table 内时禁用的 tool 的 name\nTableTooltip.disableToolNames = [toolName.table];\n","// col 最小百分比宽度\nexport const CELL_MIN_PRE = 3;\n// col 最小 px 宽度\nexport const CELL_MIN_WIDTH = 26;\n","import Quill from 'quill';\nconst Parchment = Quill.import('parchment');\nconst Delta = Quill.import('delta');\nconst BlockEmbed = Quill.import('blots/block/embed');\nconst Block = Quill.import('blots/block');\nconst Container = Quill.import('blots/container');\nconst icons = Quill.import('ui/icons');\n\nimport { TableTooltip, TableSelection, TableOperationMenu } from './module';\nimport { ContainBlot } from './blot/contain';\nimport {\n    TableCellFormat,\n    TableRowFormat,\n    TableFormat,\n    TableWrapperFormat,\n    TableBodyFormat,\n    TableColgroupFormat,\n    TableColFormat,\n    TableCellInnerFormat,\n    ListItemRewrite,\n} from './format';\n\nContainBlot.allowedChildren = [Block, BlockEmbed, Container];\n\nTableWrapperFormat.allowedChildren = [TableFormat];\n\nTableFormat.allowedChildren = [TableBodyFormat, TableColgroupFormat];\nTableFormat.requiredContainer = TableWrapperFormat;\n\nTableBodyFormat.allowedChildren = [TableRowFormat];\nTableBodyFormat.requiredContainer = TableFormat;\n\nTableColgroupFormat.allowedChildren = [TableColFormat];\nTableColgroupFormat.requiredContainer = TableFormat;\n\nTableRowFormat.allowedChildren = [TableCellFormat];\nTableRowFormat.requiredContainer = TableBodyFormat;\n\nTableCellFormat.allowedChildren = [TableCellInnerFormat];\n\nTableCellInnerFormat.defaultChild = 'block';\n\nexport { ListItemRewrite };\n\nQuill.register(\n    {\n        [`formats/${ContainBlot.blotName}`]: ContainBlot,\n\n        [`formats/${TableCellInnerFormat.blotName}`]: TableCellInnerFormat,\n        [`formats/${TableCellFormat.blotName}`]: TableCellFormat,\n        [`formats/${TableRowFormat.blotName}`]: TableRowFormat,\n        [`formats/${TableBodyFormat.blotName}`]: TableBodyFormat,\n        [`formats/${TableFormat.blotName}`]: TableFormat,\n        [`formats/${TableWrapperFormat.blotName}`]: TableWrapperFormat,\n\n        [`formats/${TableColgroupFormat.blotName}`]: TableColgroupFormat,\n        [`formats/${TableColFormat.blotName}`]: TableColFormat,\n    },\n    true\n);\n\nimport { isFunction, randomId, showTableSelector } from './utils';\nimport { CREATE_TABLE, CELL_MIN_PRE, blotName, moduleName, toolName, CELL_MIN_WIDTH } from './assets/const';\nimport TableSvg from './assets/icons/table.svg';\n\nclass TableModule {\n    constructor(quill, options) {\n        this.quill = quill;\n        this.options = options;\n\n        this.controlItem = null;\n        this.tableInsertSelectCloseHandler = null;\n\n        const toolbar = this.quill.getModule('toolbar');\n        if (toolbar) {\n            const control = toolbar.controls.find(([name]) => name === TableModule.toolName);\n            if (control) {\n                this.controlItem = control[1].parentNode.querySelector('.ql-table.ql-picker');\n                // 使用 button 时会在点击后立刻聚焦输入, 若有横向滚动条会时视口锁定到 focus, 使用 select 就不会\n                if (this.controlItem) {\n                    const label = this.controlItem.getElementsByClassName('ql-picker-label')?.[0];\n                    label.innerHTML = TableSvg;\n                } else {\n                    this.controlItem = control[1];\n                }\n                this.buildCustomSelect(this.options.customSelect, control[1].tagName.toLowerCase(), this.options.customButton);\n                toolbar.addHandler(TableModule.toolName, this.handleSelectDisplay.bind(this));\n            }\n        }\n        this.pasteTableHandler();\n\n        // 绑定 table 的选择事件\n        this.quill.root.addEventListener(\n            'click',\n            (evt) => {\n                const path = evt.path || (evt.composedPath && evt.composedPath());\n                if (!path || path.length <= 0) return;\n\n                const tableNode = path.filter((node) => {\n                    return (\n                        node.tagName && node.tagName.toUpperCase() === 'TABLE' && node.classList.contains('ql-table')\n                    );\n                })?.[0];\n                // 结束位置位处于表格内不显示\n                if (tableNode) {\n                    if (this.table === tableNode) return;\n                    if (this.table) this.hideTableTools();\n                    this.showTableTools(tableNode, quill, this.options.selection);\n                } else if (this.table) {\n                    this.hideTableTools();\n                }\n            },\n            false\n        );\n        // 绑定 table 的右键插入、删除事件\n        this.quill.root.addEventListener('contextmenu', (evt) => {\n            if (!this.table) return true;\n            evt.preventDefault();\n\n            const path = evt.path || (evt.composedPath && evt.composedPath());\n            if (!path || path.length <= 0) return;\n\n            const tableNode = path.filter(\n                (node) => node.tagName && node.tagName.toUpperCase() === 'TABLE' && node.classList.contains('ql-table')\n            )[0];\n            // 如果没有选中任何单元格，不显示右键菜单\n            if (tableNode && this.tableSelection?.selectedTds?.length) {\n                if (this.tableOperationMenu) this.tableOperationMenu = this.tableOperationMenu.destroy();\n\n                const rowNode = path.filter(\n                    (node) => node.tagName && node.tagName.toUpperCase() === 'TR' && node.getAttribute('data-row-id')\n                )[0];\n\n                const cellNode = path.filter(\n                    (node) => node.tagName && node.tagName.toUpperCase() === 'TD' && node.getAttribute('data-row-id')\n                )[0];\n\n                this.tableOperationMenu = new TableOperationMenu(\n                    {\n                        table: tableNode,\n                        row: rowNode,\n                        cell: cellNode,\n                        left: evt.clientX,\n                        top: evt.clientY,\n                    },\n                    quill,\n                    this.options.operationMenu\n                );\n            }\n        });\n        this.quill.theme.TableTooltip = new TableTooltip(this.quill, this.options.tableToolTip);\n    }\n\n    showTableTools(table, quill, options) {\n        this.table = table;\n        this.tableSelection = new TableSelection(table, quill, options);\n    }\n\n    hideTableTools() {\n        this.tableSelection && this.tableSelection.destroy();\n        this.tableOperationMenu && this.tableOperationMenu.destroy();\n        if (this.quill.theme.TableTooltip) {\n            this.quill.theme.TableTooltip.curTableId = null;\n            this.quill.theme.TableTooltip.hide();\n        }\n        this.tableSelection = null;\n        this.tableOperationMenu = null;\n        this.table = null;\n    }\n\n    // 粘贴表格处理\n    // 需要带上 col 的 width, 处理 px 和 %\n    pasteTableHandler() {\n        let tableId = randomId();\n        let rowId = randomId();\n        let colIds = [];\n        let cellCount = 0;\n\n        // 重新生成 table 里的所有 id, cellFormat 和 colFormat 进行 table 的添加\n        // addMatcher 匹配的是标签字符串, 不是 blotName, 只是这些 blotName 设置的是标签字符串\n        this.quill.clipboard.addMatcher(blotName.table, (node, delta) => {\n            if (!delta.ops.length) return delta;\n            const hasCol = !!delta.ops[0].attributes?.col;\n            let colDelta;\n            // 粘贴表格若原本存在 col, 仅改变 id, 否则重新生成\n            const { width: originTableWidth } = node.getBoundingClientRect();\n            let isFull = this.options.fullWidth;\n            if (hasCol) isFull = !!delta.ops[0].insert?.col?.full;\n            const defaultColWidth = isFull\n                ? Math.max(100 / colIds.length, CELL_MIN_PRE) + '%'\n                : Math.max(originTableWidth / colIds.length, CELL_MIN_WIDTH) + 'px';\n\n            if (!hasCol) {\n                colDelta = colIds.reduce((colDelta, id) => {\n                    colDelta.insert('\\n', {\n                        [blotName.tableCol]: {\n                            colId: id,\n                            tableId,\n                            width: defaultColWidth,\n                            full: isFull,\n                        },\n                    });\n                    return colDelta;\n                }, new Delta());\n            } else {\n                for (let i = 0; i < delta.ops.length; i++) {\n                    if (!delta.ops[i].attributes[blotName.tableCol]) {\n                        break;\n                    }\n                    Object.assign(delta.ops[i].attributes[blotName.tableCol], {\n                        tableId,\n                        colId: colIds[i],\n                        full: isFull,\n                        width: !delta.ops[i].attributes[blotName.tableCol].width\n                            ? defaultColWidth\n                            : parseFloat(delta.ops[i].attributes[blotName.tableCol].width) + (isFull ? '%' : 'px'),\n                    });\n                    // delta.ops[i].attributes[blotName.tableCol].tableId = tableId;\n                    // delta.ops[i].attributes[blotName.tableCol].colId = colIds[i];\n                    // delta.ops[i].attributes[blotName.tableCol].full = isFull;\n                    // if (!delta.ops[i].attributes[blotName.tableCol].width) {\n                    //     delta.ops[i].attributes[blotName.tableCol].width = defaultColWidth;\n                    // } else {\n                    //     delta.ops[i].attributes[blotName.tableCol].width =\n                    //         parseFloat(delta.ops[i].attributes[blotName.tableCol].width) + (isFull ? '%' : 'px');\n                    // }\n                }\n            }\n            tableId = randomId();\n            colIds = [];\n            cellCount = 0;\n            return colDelta ? colDelta.concat(delta) : delta;\n        });\n\n        this.quill.clipboard.addMatcher(blotName.tableRow, (node, delta) => {\n            rowId = randomId();\n            cellCount = 0;\n            return delta;\n        });\n\n        this.quill.clipboard.addMatcher(blotName.tableCell, (node, delta) => {\n            const rowspan = node.getAttribute('rowspan') || 1;\n            const colspan = node.getAttribute('colspan') || 1;\n            const colIndex = +cellCount + +colspan - 1;\n            if (!colIds[colIndex]) {\n                for (let i = colIndex; i >= 0; i--) {\n                    if (!colIds[i]) colIds[i] = randomId();\n                }\n            }\n            const colId = colIds[colIndex];\n            cellCount += 1;\n\n            if (delta.slice(delta.length() - 1).ops[0]?.insert !== '\\n') {\n                delta.insert('\\n');\n            }\n\n            return delta.compose(\n                new Delta().retain(delta.length(), {\n                    [blotName.tableCellInner]: {\n                        tableId,\n                        rowId,\n                        colId,\n                        rowspan,\n                        colspan,\n                        style: node.getAttribute('style'),\n                    },\n                })\n            );\n        });\n    }\n\n    async buildCustomSelect(customSelect, tagName, customButton) {\n        const dom = document.createElement('div');\n        dom.classList.add('ql-custom-select');\n        const selector = customSelect && isFunction(customSelect) ? await customSelect() : this.createSelect(customButton);\n        dom.appendChild(selector);\n\n        let appendTo = this.controlItem;\n        if (tagName === 'select') {\n            appendTo = this.controlItem.querySelector('.ql-picker-options');\n        }\n        if (!appendTo) return;\n        selector.addEventListener(CREATE_TABLE, (e) => {\n            const { row, col } = e.detail;\n            if (!row || !col) return;\n            this.insertTable(row, col);\n        });\n        appendTo.appendChild(dom);\n    }\n\n    async handleSelectDisplay() {\n        this.controlItem.classList.add('ql-expanded');\n        this.controlItem.dataset.active = true;\n        window.removeEventListener('click', this.tableInsertSelectCloseHandler);\n        this.tableInsertSelectCloseHandler = (e) => {\n            const path = (e.composedPath && e.composedPath()) || e.path;\n            const i = path.findIndex((el) => el === this.controlItem);\n            if (i > 2 || i === -1) {\n                this.closeSelecte();\n            }\n        };\n        window.addEventListener('click', this.tableInsertSelectCloseHandler);\n    }\n\n    createSelect(customButton) {\n        return showTableSelector(customButton);\n    }\n\n    closeSelecte() {\n        this.controlItem.classList.remove('ql-expanded');\n        this.controlItem.dataset.active = false;\n        window.removeEventListener('click', this.tableInsertSelectCloseHandler);\n    }\n\n    // 以上为 toolbar table 按钮的选择生成器相关\n    // 以下为 table module 生成表格相关功能函数\n\n    insertTable(rows, columns) {\n        if (rows >= 100 || columns >= 100) {\n            throw new Error('Both rows and columns must be less than 100.');\n        }\n\n        this.quill.focus();\n        this.range = this.quill.getSelection();\n        const range = this.range;\n        if (range == null) return;\n        const currentBlot = this.quill.getLeaf(range.index)[0];\n\n        if (isForbidInTable(currentBlot)) {\n            throw new Error('Not supported nesting of ' + currentBlot.type + ' type object within a table.');\n        }\n\n        setTimeout(() => {\n            let delta = new Delta().retain(range.index);\n            delta.insert('\\n');\n            const tableId = randomId();\n            const colId = new Array(columns).fill(0).map(() => randomId());\n\n            let { width, paddingLeft, paddingRight } = getComputedStyle(this.quill.root);\n            width = parseInt(width);\n            paddingLeft = parseInt(paddingLeft);\n            paddingRight = parseInt(paddingRight);\n            width = width - paddingLeft - paddingRight;\n\n            delta = new Array(columns).fill('\\n').reduce((memo, text, i) => {\n                memo.insert(text, {\n                    [blotName.tableCol]: {\n                        width: !this.options.fullWidth ? `${Math.floor(width / columns)}px` : `${(1 / columns) * 100}%`,\n                        tableId,\n                        colId: colId[i],\n                        full: this.options.fullWidth,\n                    },\n                });\n                return memo;\n            }, delta);\n\n            // 直接生成 delta 的数据格式并插入\n            delta = new Array(rows).fill(0).reduce((memo) => {\n                const rowId = randomId();\n                return new Array(columns).fill('\\n').reduce((memo, text, i) => {\n                    memo.insert(text, {\n                        [blotName.tableCellInner]: {\n                            tableId,\n                            rowId,\n                            colId: colId[i],\n                            rowspan: 1,\n                            colspan: 1,\n                        },\n                    });\n                    return memo;\n                }, memo);\n            }, delta);\n            // console.log(columns, rows);\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(range.index + columns + columns * rows + 1, Quill.sources.API);\n            this.quill.focus();\n\n            this.closeSelecte();\n        }, 0);\n    }\n\n    findTable(blot) {\n        let cur = blot;\n        while (cur.statics.blotName !== blotName.table && cur !== null) {\n            cur = cur.parent;\n        }\n        return cur;\n    }\n\n    /*\n        基准行\n            向上: 选中 cell 的第一行\n            向下: 选中 cell 的最后一行\n        有无跨行单元格跨过选中基准行\n            找到所有 colId, 根据若遍历行内的某 colId 跨行至基准行, 则添加至新的 cell 中, 否则:\n                向上: 从当前行向前查找所有 cell, 若 cell rowspan + index > 基准行 index, 则此 cell rowspan + 1\n                向下: 从当前行向后查找所有 cell, 若 cell rowspan - index < 基准行 index, 则此 cell rowspan + 1\n            直到所有 colId 都遍历完, 则生成新的 cell 并插入到当前行的下方/上方\n     */\n    appendRow(isDown) {\n        const selectTds = this.tableSelection.selectedTds;\n        if (!selectTds.length) return;\n        const table = this.findTable(selectTds[0]);\n        const findTd = selectTds[isDown ? selectTds.length - 1 : 0];\n        let baseTr = Quill.find(findTd.domNode.parentNode.parentNode);\n        if (isDown) {\n            let baseTrRowspan = findTd.rowspan;\n            while (baseTrRowspan > 1) {\n                baseTr = baseTr.next;\n                baseTrRowspan -= 1;\n            }\n        }\n\n        const colIds = table.getColIds();\n        // 用于判断有哪些 col 已被遍历\n        const allColIds = new Set(colIds);\n        let foreachTr = isDown ? baseTr : baseTr.prev;\n        let newCellColId = new Array();\n        let indexDiff = 0;\n        // 第一行向上插入时 baseTr 是 null, 不需要判断\n        if (!foreachTr) {\n            allColIds.clear();\n            newCellColId = colIds;\n        }\n        while (allColIds.size) {\n            indexDiff += 1;\n            if (!foreachTr) {\n                break;\n            }\n            foreachTr.foreachCellInner((cell) => {\n                if (!allColIds.has(cell.colId)) return;\n                // 找到当前 cell 跨列的所有 colId\n                let curCellColIds = [cell.colId];\n                if (cell.colspan > 1) {\n                    let index = colIds.findIndex((id) => id === cell.colId);\n                    if (index === -1) {\n                        index = 0;\n                    }\n                    curCellColIds = colIds.slice(index, index + cell.colspan);\n                }\n                // 若跨行过基准行, 则更新 rowspan\n                if (cell.rowspan > indexDiff) {\n                    cell.rowspan += 1;\n                } else {\n                    // 未包含基准行, 要添加所有的包含的 col\n                    newCellColId.push(...curCellColIds);\n                }\n                curCellColIds.map((id) => allColIds.delete(id));\n            });\n            foreachTr = foreachTr.prev;\n        }\n        // 生成新的 cell\n        const tableId = table.tableId;\n        const newRowId = randomId();\n        const newRow = Parchment.create(blotName.tableRow, newRowId);\n        const insertColId = new Set(newCellColId);\n        // 保持 colId 顺序\n        for (let i = 0; i < colIds.length; i++) {\n            if (!insertColId.size) break;\n            if (insertColId.has(colIds[i])) {\n                const td = Parchment.create(blotName.tableCell, {\n                    rowId: newRowId,\n                    colId: colIds[i],\n                    rowspan: 1,\n                    colspan: 1,\n                });\n                const tdInner = Parchment.create(blotName.tableCellInner, {\n                    tableId,\n                    rowId: newRowId,\n                    colId: colIds[i],\n                    rowspan: 1,\n                    colspan: 1,\n                });\n                const block = Parchment.create('block');\n                block.appendChild(Parchment.create('break'));\n                tdInner.appendChild(block);\n                td.appendChild(tdInner);\n                newRow.appendChild(td);\n                insertColId.delete(colIds[i]);\n            }\n        }\n\n        baseTr.parent.insertBefore(newRow, isDown ? baseTr.next : baseTr);\n    }\n\n    /*\n        第一种情况选中行中没有跨行, 或跨行没有超出选中范围. \n            直接删除\n        第二种情况选中行内有跨行, 且跨行结束行在选中范围外.\n            遍历选中行, 找到所有跨行超出范围的 cell 记录 colId 与超出 rowspan, 之后在选中最后一行的后一行插入对应的 cell\n        第三种情况选中行之前有跨行, 且跨行结束行在选中范围内. \n            从选中行前一行开始遍历 cell, 找到所有的 col, 若 cell 跨行进入了选中范围(rowsapn - index > 0), rowspan = index\n        第四种情况选中行之前有跨行, 且跨行范围包含选中范围.\n            选中行前一行开始遍历 cell, 找到所有的 col, 若 cell 跨行进入了选中范围(rowsapn - index > 0), rowspan = rowspan - deleteTrs.length\n            \n    */\n    removeRow() {\n        if (!this.tableSelection.selectedTds.length) return;\n        const selectTds = this.tableSelection.selectedTds;\n        let [rowIds, rows] = selectTds.reduce(\n            (pre, td) => {\n                if (!pre[0].has(td.rowId)) {\n                    pre[0].add(td.rowId);\n                    pre[1].push(td.parent.parent);\n                }\n                return pre;\n            },\n            [new Set(), []]\n        );\n        rowIds = Array.from(rowIds);\n\n        const afterCell = new Map();\n        rows.map((tr) => {\n            tr.foreachCellInner((cell) => {\n                const rowIndexInSelected = rowIds.findIndex((id) => id === cell.rowId);\n                if (cell.rowspan > rowIds.length - rowIndexInSelected) {\n                    afterCell.set(cell.colId, {\n                        cell,\n                        rowspan: cell.rowspan - rowIds.length + rowIndexInSelected,\n                    });\n                }\n            });\n            tr.remove();\n        });\n\n        const table = this.findTable(selectTds[0]);\n        const tableId = table.tableId;\n        // 需要添加的跨行 cell\n        if (afterCell.size) {\n            const nextRow = rows[rows.length - 1].next;\n\n            const colIds = table.getColIds();\n            // 标记插入位置\n            let lastTd = null;\n            for (let i = 0; i < colIds.length; ) {\n                const td = nextRow.domNode.querySelector(`td[data-col-id=\"${colIds[i]}\"]`);\n                if (td) {\n                    const tdBlot = Quill.find(td);\n                    i += tdBlot.colspan;\n                    lastTd = tdBlot.next;\n                } else {\n                    const { cell, rowspan } = afterCell.get(colIds[i]);\n                    const newTd = Parchment.create(blotName.tableCell, {\n                        rowId: nextRow.rowId,\n                        colId: colIds[i],\n                        rowspan,\n                        colspan: cell.colspan,\n                    });\n                    const newTdInner = Parchment.create(blotName.tableCellInner, {\n                        tableId,\n                        rowId: nextRow.rowId,\n                        colId: colIds[i],\n                        rowspan,\n                        colspan: cell.colspan,\n                    });\n                    cell.moveChildren(newTdInner);\n                    newTd.appendChild(newTdInner);\n                    nextRow.insertBefore(newTd, lastTd);\n                    i += cell.colspan;\n                }\n            }\n        }\n    }\n\n    /*\n        基准列\n            向左: 选中 cell 的第一列 id, index\n            向右: 选中 cell 的最后一列 id, index\n        找到所有 rowId, 开始遍历行内 cell 至(向右: 基准行 colId)(向左: 基准行前一行 colId) \n            有无单元格跨列超过基准列\n                // 因为 colspan 最少为 1, 判断时需要 + 1\n                向右: 若 colspan + i > 1 + index, 则 colspan + 1 \n                向左: 若 colspan + i > 1 + index, 则 colspan + 1 \n                colspan + 1 后判断是否跨行, 若跨行则之后 rowspan 行不进行循环\n                break\n            无 \n                找到 index 所在 cell，insertBefore\n    */\n    appendCol(isRight) {\n        if (!this.tableSelection.selectedTds.length) return;\n        const selectTds = this.tableSelection.selectedTds;\n        const table = this.findTable(selectTds[0]);\n        const cols = table.getCols();\n        const colIds = table.getColIds();\n        const rows = table.getRows();\n        const newColId = randomId();\n\n        let baseColId;\n        if (isRight) {\n            const lastTd = selectTds[selectTds.length - 1];\n            const i = colIds.findIndex((id) => id === lastTd.colId);\n            baseColId = colIds[i + lastTd.colspan - 1];\n        } else {\n            baseColId = selectTds[0].colId;\n        }\n        // 找到对应 col 下标，同时插入 col 元素\n        const baseColIndex = cols.findIndex((col) => {\n            if (col.colId === baseColId) {\n                const newCol = Parchment.create(blotName.tableCol, {\n                    width: !this.options.fullWidth ? '160px' : '6%',\n                    full: this.options.fullWidth,\n                    tableId: table.tableId,\n                    colId: newColId,\n                });\n                let beforeTarget = isRight ? col.next : col;\n                col.parent.insertBefore(newCol, beforeTarget);\n                if (this.options.fullWidth) {\n                    if (!beforeTarget) {\n                        beforeTarget = isRight ? col : col.prev;\n                    }\n                    beforeTarget.width = Math.max(beforeTarget.width - 6, CELL_MIN_PRE) + '%';\n                }\n            }\n            return col.colId === baseColId;\n        });\n        table.formatTableWidth();\n\n        const stopIndex = isRight ? baseColIndex + 1 : baseColIndex;\n        let skipRow = 0;\n        rows.map((tr) => {\n            let colspanIncrease = false;\n            let beforeCell = null;\n            tr.foreachCellInner((cell) => {\n                // 之前行有跨行且跨列的 cell 处理过, 直接跳过\n                if (skipRow > 0) {\n                    skipRow -= 1;\n                    colspanIncrease = true;\n                    return true;\n                }\n                const colIndexInSelected = colIds.findIndex((id) => id === cell.colId);\n                if (cell.colspan + colIndexInSelected > stopIndex) {\n                    beforeCell = cell.parent;\n\n                    // 当前 cell 跨列且不是终止位\n                    if (cell.colspan !== 1 && colIndexInSelected !== stopIndex) {\n                        cell.colspan += 1;\n                        colspanIncrease = true;\n                        skipRow = cell.rowspan - 1;\n                        return true;\n                    }\n                }\n\n                if (colIndexInSelected >= stopIndex) {\n                    return true;\n                }\n            });\n\n            if (!colspanIncrease) {\n                const newTd = Parchment.create(blotName.tableCell, {\n                    rowId: tr.rowId,\n                    colId: newColId,\n                    rowspan: 1,\n                    colspan: 1,\n                });\n                const newTdInner = Parchment.create(blotName.tableCellInner, {\n                    tableId: table.tableId,\n                    rowId: tr.rowId,\n                    colId: newColId,\n                    rowspan: 1,\n                    colspan: 1,\n                });\n                newTd.appendChild(newTdInner);\n                tr.insertBefore(newTd, beforeCell);\n            }\n        });\n    }\n\n    /*\n        找到需要删除的所有 colId\n            获取所有 colIds, 遍历选中 cell, 找到 cell 在 colIds 下标, while cell 的 colspan, 将对应 colId 加入 set. 同时保存第一个 col 的 index (first)和最后一个 col 的 index(last)\n        遍历所有 row, 遍历 row 中的 cell, 直到 cell i == index\n            if i > first && i + colspan > last\n                cell.colspan - (last - i + 1)\n            if i < first && i + colsapn > last\n                cell.colspan - (last - first + 1)\n            if i < first && i + colspan > first && i + colspan <= last\n                cell.colspan - (i + colspan - first)\n            if i >= first && i + colspan <= last\n                cell.remove\n    */\n    removeCol() {\n        if (!this.tableSelection.selectedTds.length) return;\n        const tds = this.tableSelection.selectedTds;\n        const table = this.findTable(this.tableSelection.selectedTds[0]);\n        const colIds = table.getColIds();\n\n        const [firstSelectColIndex, lastSelectColIndex] = tds.reduce(\n            (n, cellInner) => {\n                const i = colIds.findIndex((id) => id === cellInner.colId);\n                return [Math.min(n[0], i), Math.max(n[1], i + cellInner.colspan - 1)];\n            },\n            [Infinity, -Infinity]\n        );\n\n        const rows = table.getRows();\n        rows.map((row) => {\n            let i = 0;\n            row.foreachCellInner((cell) => {\n                if (i > lastSelectColIndex) return true;\n                const colspan = cell.colspan;\n                if (i + colspan - 1 > lastSelectColIndex) {\n                    cell.colspan -= lastSelectColIndex - Math.max(i, firstSelectColIndex) + 1;\n                } else if (i < firstSelectColIndex && i + colspan - 1 >= firstSelectColIndex) {\n                    cell.colspan -= i + colspan - firstSelectColIndex;\n                } else if (i >= firstSelectColIndex) {\n                    cell.remove();\n                }\n\n                i += colspan;\n            });\n        });\n\n        const cols = table.getCols();\n        for (let i = 0; i < cols.length; i++) {\n            if (i >= firstSelectColIndex && i <= lastSelectColIndex) {\n                cols[i].remove();\n            }\n            if (i > lastSelectColIndex) {\n                break;\n            }\n        }\n        table.formatTableWidth();\n    }\n\n    removeTable() {\n        const selectTds = this.tableSelection.selectedTds;\n        if (!selectTds.length) return;\n        this.findTable(selectTds[0]).remove();\n    }\n\n    mergeCells() {\n        if (!this.tableSelection.selectedTds.length) return;\n        const selectTds = this.tableSelection.selectedTds;\n\n        // 计算需要合并的单元格的行列数\n        const counts = selectTds.reduce(\n            (pre, cellInner) => {\n                // 此单元格所在列需要跨的行数\n                const colId = cellInner.colId;\n                if (!pre[0][colId]) pre[0][colId] = 0;\n                pre[0][colId] += cellInner.rowspan;\n                // 此单元格所在行需要跨的列数\n                const rowId = cellInner.rowId;\n                if (!pre[1][rowId]) pre[1][rowId] = 0;\n                pre[1][rowId] += cellInner.colspan;\n                return pre;\n            },\n            [{}, {}]\n        );\n        // counts[0] 记录的是 colId 对应的跨行数\n        // counts[1] 记录的是 rowId 对应的跨列数\n        const rowCount = Math.max(...Object.values(counts[0]));\n        const colCount = Math.max(...Object.values(counts[1]));\n\n        // console.log(counts);\n        // console.log('row', rowCount);\n        // console.log('col', colCount);\n        // 注意清除 block 的 cache.detla\n        // 若不清除 cache.detla 导致显示正常但在获取 quill.getContents() 时会有原 cellInner 未改变的情况\n        // 防止这种情况直接 clone\n        const mergedCell = selectTds[0].clone();\n        selectTds[0].parent.appendChild(mergedCell);\n        mergedCell.colspan = colCount;\n        mergedCell.rowspan = rowCount;\n        for (let i = 0; i < selectTds.length; i++) {\n            selectTds[i].moveChildren(mergedCell);\n            selectTds[i].remove();\n        }\n        const table = this.findTable(selectTds[0]);\n        // 当合并后的单元格跨列等于 table 的列数, row 可以合并为 1\n        const tableColLength = table.getColIds().length;\n        if (tableColLength === colCount) {\n            mergedCell.rowspan = 1;\n        }\n        // 当合并后的单元格跨行等于 table 的行数, col 可以合并为 1\n        const tableRowLength = table.getRowIds().length;\n        if (tableRowLength <= rowCount) {\n            // 最终将 colspan 合并为 1, 所以要删除 colspan - 1 个 col\n            // 遍历到合并单元格的 colId 后开始进行删除\n            const tableCols = table.descendants(TableColFormat);\n            let deleteCount = mergedCell.colspan - 1;\n            let startDeleteIndex = null;\n            for (let i = 0; i < tableCols.length; i++) {\n                if (deleteCount <= 0) break;\n                // 先删再判断, 防止删除合并后的最后一个单元格\n                if (startDeleteIndex !== null) {\n                    // 若合并 col 中存在 width 为 null, 则合并后的 col 为 null\n                    if (tableCols[startDeleteIndex].width === null || tableCols[i].width === null) {\n                        tableCols[startDeleteIndex].width = null;\n                    } else {\n                        tableCols[startDeleteIndex].width += tableCols[i].width;\n                    }\n                    tableCols[i].remove();\n                    deleteCount -= 1;\n                }\n                if (tableCols[i].colId === mergedCell.colId) {\n                    startDeleteIndex = i;\n                }\n            }\n            mergedCell.colspan = 1;\n        }\n    }\n\n    setStyle(styles, cells) {\n        if (!cells.length) return;\n        cells.map((cellInner) => (cellInner.style = styles));\n    }\n}\n\n// 不可插入至表格的 blot\nexport const tableCantInsert = [blotName.tableCell];\nexport const isForbidInTableBlot = (blot) => {\n    return tableCantInsert.includes(blot.statics.blotName);\n};\n\nexport const isForbidInTable = (current) => {\n    return current && current.parent\n        ? isForbidInTableBlot(current.parent)\n            ? true\n            : isForbidInTable(current.parent)\n        : false;\n};\n\nTableModule.moduleName = moduleName.table;\nTableModule.toolName = toolName.table;\n\nTableModule.createEventName = CREATE_TABLE;\nicons[TableModule.toolName] = TableSvg;\n\nexport const rewirteFormats = () =>\n    Quill.register(\n        {\n            [`formats/list/item`]: ListItemRewrite,\n        },\n        true\n    );\nexport default TableModule;\n"],"names":["CREATE_TABLE","blotName","moduleName","toolName","randomId","Math","random","toString","slice","zindex","dialog","_ref","arguments","length","undefined","child","_ref$target","target","document","body","_ref$beforeClose","beforeClose","appendTo","createElement","classList","add","style","zIndex","overlay","appendChild","content","onclick","e","stopPropagation","originOverflow","getComputedStyle","overflow","close","remove","createInputItem","label","options","type","value","inputItem","inputLabel","innerText","inputInput","input","key","setAttribute","max","min","addEventListener","onfocus","onblur","errorTip","msg","contains","querySelector","removeError","item","showTableCreator","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","row","col","box","inputContent","_createInputItem","rowItem","rowInput","rowErrorTip","_createInputItem2","colItem","colInput","colErrorTip","control","confirmBtn","cancelBtn","_args2","wrap","_context2","prev","next","abrupt","Promise","resolve","reject","_callee","_context","Number","isNaN","stop","apply","this","css","domNode","rules","prop","getRelativeRect","targetRect","container","containerRect","getBoundingClientRect","x","scrollLeft","y","scrollTop","x1","width","y1","height","computeBoundaryFromRects","startRect","endRect","isFunction","val","MENU_ITEMS_DEFAULT","insertColumnLeft","text","handler","tableModule","quill","getModule","appendCol","hideTableTools","insertColumnRight","insertRowTop","appendRow","insertRowBottom","groupEnd","removeCol","removeRow","removeTable","mergeCell","mergeCells","setBackgroundColor","subTitle","tempCells","tableSelection","selectedTds","setStyle","backgroundColor","marginLeft","clearBackgroundColor","setBorderColor","borderColor","clearBorderColor","TableOperationMenu","constructor","params","table","menuItems","optionsMerge","optionsModify","boundary","destroyHandler","destroy","bind","menuInitial","_this$options","_this$options3","_this$options$items","_this$options2","replaceItems","items","modifyItems","_this$options$items2","_this$options4","Object","assign","overrideButton","itemNewOptions","_this$options5","_this","_loop","_Object$entries$_i","_slicedToArray","_Object$entries","_i","hasOwnProperty","itemDefaultOptions","keys","forEach","option","entries","_this$options6","setMenuPosition","_ref6","left","top","menuRect","resLeft","resTop","concat","_ref7","cell","name","position","subTitleCreator","menuItemCreator","dividingCreator","dividing","title","removeEventListener","_ref8","iconSrc","node","iconSpan","innerHTML","textSpan","nodes","call","Array","isArray","map","sub","Container","Quill","import","Parchment","TableBodyFormat","optimize","super","statics","tagName","moveChildren","deleteAt","index","parent","children","forEachAt","offset","scope","Scope","BLOCK_BLOT","ContainBlot","create","insertBefore","blot","ref","head","format","tail","replace","defaultChild","TableCellInnerFormat","tableId","rowId","colId","rowspan","colspan","dataset","_style","clearDeltaCache","cache","cloneTarget","clone","formats","_this$domNode$dataset","_this$domNode$dataset2","tableWrapper","tableBody","tr","td","className","TableCellFormat","cssText","getAttribute","getCellInner","descendants","_this$domNode$dataset3","cellInner","TableColFormat","full","parseFloat","hasAttribute","_this$domNode$dataset4","tableColgroup","_this$domNode$dataset5","ttableId","tcolId","TableColgroupFormat","findCol","cur","iterator","i","TableRowFormat","foreachCellInner","func","TableFormat","formatTableWidth","colWidthFillTable","colgroup","colsWidth","reduce","sum","setTimeout","getRows","getRowIds","d","getCols","getColIds","TableWrapperFormat","preventDefault","ondrop","ondragover","dataTransfer","dropEffect","allowedChildren","find","_document$querySelect","ListItem","ListItemRewrite","replaceWith","isolate","replacement","attributes","copy","PRIMARY_COLOR","TableSelection","dragging","selectingHandler","mouseDownHandler","cellSelect","scrollHandler","helpLinesInitial","ResizeObserver","clearSelection","observe","root","closeHandler","on","events","TEXT_CHANGE","_this$options7","primaryColor","addScrollEvent","dom","handle","push","clearScrollEvent","_this$scrollHandler$i","addContainer","button","closest","startTableId","mouseMoveHandler","endTd","endTdRect","parentNode","startTdRect","correctBoundary","computeSelectedTds","repositionHelpLines","startTd","blur","mouseUpHandler","srcollHide","selectedCells","tableCell","_getRelativeRect","_getRelativeRect2","scrollX","tableViewScrollLeft","display","off","TIP_HEIGHT","TableTooltip","_defineProperty","rect","tableTop","offsetTop","rootScrollTop","tableDisableToolHandlers","curTableId","focusTableChange","tableCols","hide","isMobile","window","handledEvents","down","move","up","listen","_this$options8","_this$options9","tipHeight","disableToolNames","from","Set","EDITOR_CHANGE","eventName","range","getSelection","enableFromTable","scroll","descendant","_tableWrapper$childre","disableFromTable","tbody","_tbody$children","scrollSync","show","toggleDisableToolbarTools","toolbar","disableByTable","_step","_iterator","_createForOfIteratorHelper","s","n","done","handlers","err","f","controls","_ref9","_toolbar$container$qu","_ref10","btn","includes","toLowerCase","_this$scrollHandler$i2","tableWrapperRect","join","bindDrag","tipColBreak","curColIndex","tableColHeads","getElementsByClassName","tableColHeadSeparators","handleMousemove","tableWidth","resX","changedTouches","clientX","minWidth","CELL_MIN_PRE","maxRange","right","Infinity","minRange","floor","w","handleMouseup","parseInt","pre","oldWidthPre","last","totalWidthNextPre","removeChild","handleMousedown","divDom","tableRect","el","Delta","BlockEmbed","Block","icons","requiredContainer","register","TableModule","controlItem","tableInsertSelectCloseHandler","_ref11","_this$controlItem$get","TableSvg","buildCustomSelect","customSelect","customButton","addHandler","handleSelectDisplay","pasteTableHandler","evt","_path$filter","path","composedPath","tableNode","filter","toUpperCase","showTableTools","selection","_this$tableSelection","tableOperationMenu","rowNode","cellNode","clientY","operationMenu","theme","tableToolTip","colIds","cellCount","clipboard","addMatcher","delta","_delta$ops$0$attribut","_delta$ops$0$insert","ops","colDelta","hasCol","originTableWidth","isFull","fullWidth","insert","defaultColWidth","id","blotName_tableCol","_delta$slice$ops$","colIndex","compose","retain","blotName_tableCellInner","_this2","_callee3","selector","_context3","t0","sent","createSelect","_e$detail","detail","insertTable","_this3","_callee4","_context4","active","findIndex","closeSelecte","selectDom","selectBlock","r","c","selectItem","selectCustom","sendTableData","_ref4","dispatchEvent","CustomEvent","updateSelectBlockItems","_selectDom$dataset","querySelectorAll","childs","_e$target$dataset","removeAttribute","_selectDom$dataset2","then","_ref5","showTableSelector","rows","columns","Error","focus","currentBlot","getLeaf","isForbidInTable","fill","_getComputedStyle","paddingLeft","paddingRight","memo","updateContents","sources","USER","setSelection","API","findTable","isDown","selectTds","findTd","baseTr","baseTrRowspan","allColIds","foreachTr","newCellColId","indexDiff","clear","size","has","curCellColIds","delete","newRowId","newRow","insertColId","tdInner","block","_selectTds$reduce","_selectTds$reduce2","rowIds","afterCell","Map","rowIndexInSelected","set","nextRow","lastTd","tdBlot","_afterCell$get","get","newTd","newTdInner","isRight","baseColId","cols","newColId","baseColIndex","newCol","beforeTarget","stopIndex","skipRow","colspanIncrease","beforeCell","colIndexInSelected","tds","_tds$reduce","_tds$reduce2","firstSelectColIndex","lastSelectColIndex","counts","rowCount","values","colCount","mergedCell","deleteCount","startDeleteIndex","styles","cells","tableCantInsert","isForbidInTableBlot","current","createEventName","rewirteFormats"],"mappings":"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"}