{"version":3,"file":"index.js","sources":["../src/assets/const/name.js","../src/format/TableWrapperFormat.js","../src/assets/const/event.js","../src/utils/index.js","../src/module/TableToolTip.js","../src/blot/contain.js","../src/format/TableCellInnerFormat.js","../src/format/TableCellFormat.js","../src/module/TableSelection.js","../src/module/TableOperationMenu.js","../src/format/TableRowFormat.js","../src/format/TableColFormat.js","../src/format/TableFormat.js","../src/format/TableBodyFormat.js","../src/format/TableColgroupFormat.js","../src/index.js"],"sourcesContent":["export const blotName = {\r\n    contain: 'contain',\r\n    tableWrapper: 'tableWrapper',\r\n    table: 'table',\r\n    tableColGroup: 'colgroup',\r\n    tableCol: 'col',\r\n    tableBody: 'tbody',\r\n    tableRow: 'tr',\r\n    tableCell: 'td',\r\n    tableCellInner: 'tableCellInner',\r\n};\r\nexport const moduleName = {\r\n    table: 'table',\r\n};\r\nexport const toolName = {\r\n    table: 'table',\r\n};\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const/name';\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableWrapperFormat extends Container {\r\n    static create(value) {\r\n        const node = super.create();\r\n\r\n        node.dataset.tableId = value;\r\n\r\n        node.addEventListener(\r\n            'dragstart',\r\n            (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            },\r\n            true\r\n        );\r\n        // 不允许拖拽进 table\r\n        node.ondrop = (e) => {\r\n            e.preventDefault();\r\n        };\r\n        // 修改拖拽进入时的鼠标样式\r\n        node.ondragover = (e) => {\r\n            e.preventDefault();\r\n            e.dataTransfer.dropEffect = 'none';\r\n        };\r\n        return node;\r\n    }\r\n\r\n    get tableId() {\r\n        return this.domNode.dataset.tableId;\r\n    }\r\n\r\n    insertBefore(blot, ref) {\r\n        if (blot.statics.blotName == this.statics.blotName) {\r\n            // 合并\r\n            super.insertBefore(blot.children.head, ref);\r\n        } else if (this.statics.allowedChildren.find((child) => child.blotName === blot.statics.blotName)) {\r\n            // 允许子 blot\r\n            super.insertBefore(blot, ref);\r\n        } else {\r\n            // 非允许子 blot, ref 为 null 是插入头, 否则插入尾\r\n            if (ref) {\r\n                this.prev ? this.prev.insertBefore(blot, null) : this.parent.insertBefore(blot, this);\r\n            } else {\r\n                this.next ? this.next.insertBefore(blot, ref) : this.parent.appendChild(blot);\r\n            }\r\n        }\r\n    }\r\n\r\n    optimize() {\r\n        super.optimize();\r\n        let next = this.next;\r\n        if (\r\n            next != null &&\r\n            next.prev === this &&\r\n            next.statics.blotName === this.statics.blotName &&\r\n            next.domNode.tagName === this.domNode.tagName &&\r\n            next.domNode.dataset.tableId === this.domNode.dataset.tableId\r\n        ) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n\r\n    deleteAt(index, length) {\r\n        super.deleteAt(index, length);\r\n        // 删除 table 时隐藏当前 table 的 tooltip\r\n        document.querySelector(`.ql-table-tooltip[data-table-id=\"${this.tableId}\"]`)?.classList?.add('ql-hidden');\r\n    }\r\n}\r\nTableWrapperFormat.blotName = blotName.tableWrapper;\r\nTableWrapperFormat.tagName = 'p';\r\nTableWrapperFormat.className = 'ql-table-wrapper';\r\nTableWrapperFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport default TableWrapperFormat;\r\n","export const CREATE_TABLE = 'createTable';\r\n","import { CREATE_TABLE } from '../assets/const/event';\r\n\r\nexport const randomId = () => Math.random().toString(36).slice(2);\r\n\r\nlet zindex = 8000;\r\nexport const dialog = ({ child, target = document.body, beforeClose = () => {} } = {}) => {\r\n    const appendTo = target;\r\n    const dialog = document.createElement('div');\r\n    dialog.classList.add('dialog');\r\n    dialog.style.zIndex = zindex;\r\n    const overlay = document.createElement('div');\r\n    overlay.classList.add('dialog_overlay');\r\n    dialog.appendChild(overlay);\r\n    if (child) {\r\n        const content = document.createElement('div');\r\n        content.classList.add('dialog_content');\r\n        content.appendChild(child);\r\n        overlay.appendChild(content);\r\n        content.onclick = (e) => {\r\n            e.stopPropagation();\r\n        };\r\n    }\r\n\r\n    const originOverflow = getComputedStyle(appendTo).overflow;\r\n    appendTo.style.overflow = 'hidden';\r\n\r\n    appendTo.appendChild(dialog);\r\n    const close = () => {\r\n        beforeClose();\r\n        dialog.remove();\r\n        appendTo.style.overflow = originOverflow;\r\n    };\r\n    dialog.onclick = close;\r\n    zindex += 1;\r\n\r\n    return { dialog, close };\r\n};\r\n\r\n/**\r\n * 创建一个带 label 的输入框\r\n *\r\n * @param {string} label - The label for the input item.\r\n * @param {object} options - The options for the input item.\r\n * @param {string} options.type - The type of the input.\r\n * @param {string} options.value - The initial value of the input.\r\n * @param {number} options.max - The maximum value allowed for the input.\r\n * @param {number} options.min - The minimum value allowed for the input.\r\n * @return {object} An object containing the input item, the input element, and an error tip function.\r\n */\r\nexport const createInputItem = (label, options) => {\r\n    options.type || (options.type = 'text');\r\n    options.value || (options.value = '');\r\n\r\n    const inputItem = document.createElement('div');\r\n    inputItem.classList.add('input_item');\r\n\r\n    if (label) {\r\n        const inputLabel = document.createElement('span');\r\n        inputLabel.classList.add('input_label');\r\n        inputLabel.innerText = label;\r\n        inputItem.appendChild(inputLabel);\r\n    }\r\n\r\n    const inputInput = document.createElement('div');\r\n    inputInput.classList.add('input_input');\r\n    const input = document.createElement('input');\r\n    for (const key in options) {\r\n        input.setAttribute(key, options[key]);\r\n    }\r\n    if (options.max || options.min) {\r\n        input.addEventListener('blur', () => {\r\n            if (options.max && options.max <= input.value) {\r\n                input.value = options.max;\r\n            }\r\n            if (options.min && options.min >= input.value) {\r\n                input.value = options.min;\r\n            }\r\n        });\r\n    }\r\n\r\n    inputInput.appendChild(input);\r\n    inputItem.appendChild(inputInput);\r\n\r\n    input.onfocus = () => {\r\n        inputInput.classList.add('focus');\r\n    };\r\n    input.onblur = () => {\r\n        inputInput.classList.remove('focus');\r\n    };\r\n\r\n    const errorTip = (msg) => {\r\n        if (inputInput.classList.contains('error')) {\r\n            inputInput.querySelector('.error_tip').innerText = msg;\r\n        } else {\r\n            const errorTip = document.createElement('span');\r\n            errorTip.classList.add('error_tip');\r\n            errorTip.innerText = msg;\r\n            inputInput.appendChild(errorTip);\r\n        }\r\n\r\n        inputInput.classList.add('error');\r\n\r\n        const removeError = () => {\r\n            inputInput.classList.remove('error');\r\n            errorTip.remove();\r\n        };\r\n        return { removeError };\r\n    };\r\n\r\n    return { item: inputItem, input, errorTip };\r\n};\r\n\r\n/**\r\n * 创建具有指定行数和列数的表格\r\n *\r\n * @param {number} row - The number of rows for the table (optional, default: 3)\r\n * @param {number} col - The number of columns for the table (optional, default: 3)\r\n * @return {Promise} A promise that resolves with an object containing the row and column values when the table creation is confirmed, or rejects if the dialog is closed without confirmation.\r\n */\r\nexport const showTableCreator = async (row = 3, col = 3) => {\r\n    const box = document.createElement('div');\r\n    box.classList.add('create_box');\r\n    const inputContent = document.createElement('div');\r\n    inputContent.classList.add('create_input_content');\r\n\r\n    const {\r\n        item: rowItem,\r\n        input: rowInput,\r\n        errorTip: rowErrorTip,\r\n    } = createInputItem('row', { type: 'number', value: row, max: 99 });\r\n    const {\r\n        item: colItem,\r\n        input: colInput,\r\n        errorTip: colErrorTip,\r\n    } = createInputItem('col', { type: 'number', value: col, max: 99 });\r\n\r\n    inputContent.appendChild(rowItem);\r\n    inputContent.appendChild(colItem);\r\n    box.appendChild(inputContent);\r\n\r\n    const control = document.createElement('div');\r\n    control.classList.add('create_control');\r\n\r\n    const confirmBtn = document.createElement('button');\r\n    confirmBtn.classList.add('create_control_btn', 'confirm');\r\n    confirmBtn.innerText = 'Confirm';\r\n\r\n    const cancelBtn = document.createElement('button');\r\n    cancelBtn.classList.add('create_control_btn', 'cancel');\r\n    cancelBtn.innerText = 'Cancel';\r\n\r\n    control.appendChild(confirmBtn);\r\n    control.appendChild(cancelBtn);\r\n    box.appendChild(control);\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const { close } = dialog({ child: box, beforeClose: reject });\r\n\r\n        confirmBtn.onclick = async () => {\r\n            const row = Number(rowInput.value);\r\n            const col = Number(colInput.value);\r\n\r\n            if (isNaN(row) || row <= 0) {\r\n                return rowErrorTip('Invalid number');\r\n            }\r\n            if (isNaN(col) || col <= 0) {\r\n                return colErrorTip('Invalid number');\r\n            }\r\n            resolve({ row, col });\r\n            close();\r\n        };\r\n        cancelBtn.onclick = () => {\r\n            close();\r\n        };\r\n    });\r\n};\r\n\r\n/**\r\n * 显示表格选择器\r\n */\r\nexport const showTableSelector = () => {\r\n    const selectDom = document.createElement('div');\r\n    selectDom.classList.add('create_select');\r\n\r\n    const selectBlock = document.createElement('div');\r\n    selectBlock.classList.add('create_select_block');\r\n\r\n    for (let r = 0; r < 8; r++) {\r\n        for (let c = 0; c < 8; c++) {\r\n            const selectItem = document.createElement('div');\r\n            selectItem.classList.add('create_select_block_item');\r\n            selectItem.dataset.row = r + 1;\r\n            selectItem.dataset.col = c + 1;\r\n            selectBlock.appendChild(selectItem);\r\n        }\r\n    }\r\n\r\n    const selectCustom = document.createElement('div');\r\n    selectCustom.classList.add('create_select_custom');\r\n    selectCustom.innerText = '自定义行列数';\r\n\r\n    selectDom.appendChild(selectBlock);\r\n    selectDom.appendChild(selectCustom);\r\n\r\n    const sendTableData = ({ row, col }) => {\r\n        selectDom.dispatchEvent(new CustomEvent(CREATE_TABLE, { detail: { row: Number(row), col: Number(col) } }));\r\n    };\r\n    const updateSelectBlockItems = () => {\r\n        const { row, col } = selectDom.dataset;\r\n        [].forEach.call(selectBlock.querySelectorAll('.active'), (item) => {\r\n            item.classList.remove('active');\r\n        });\r\n        if (!row || !col) return;\r\n        const childs = Array.from(selectBlock.children);\r\n        for (let i = 0; i < childs.length; i++) {\r\n            if (childs[i].dataset.row > row && childs[i].dataset.col > col) {\r\n                return;\r\n            }\r\n            if (childs[i].dataset.row <= row && childs[i].dataset.col <= col) {\r\n                childs[i].classList.add('active');\r\n            } else {\r\n                childs[i].classList.remove('active');\r\n            }\r\n        }\r\n    };\r\n    selectBlock.addEventListener('mousemove', (e) => {\r\n        const { row, col } = e.target.dataset;\r\n        if (!row || !col) return;\r\n        selectDom.dataset.row = row;\r\n        selectDom.dataset.col = col;\r\n        updateSelectBlockItems();\r\n    });\r\n    selectBlock.addEventListener('mouseleave', (e) => {\r\n        selectDom.removeAttribute('data-row');\r\n        selectDom.removeAttribute('data-col');\r\n        updateSelectBlockItems();\r\n    });\r\n    selectBlock.addEventListener('click', () => {\r\n        const { row, col } = selectDom.dataset;\r\n        if (!row || !col) return;\r\n        sendTableData({ row, col });\r\n    });\r\n\r\n    selectCustom.addEventListener('click', () => {\r\n        showTableCreator().then(({ row, col }) => {\r\n            sendTableData({ row, col });\r\n        });\r\n    });\r\n\r\n    return selectDom;\r\n};\r\n\r\nexport function css(domNode, rules) {\r\n    if (typeof rules === 'object') {\r\n        for (let prop in rules) {\r\n            domNode.style[prop] = rules[prop];\r\n        }\r\n    }\r\n}\r\n\r\nexport function getRelativeRect(targetRect, container) {\r\n    let containerRect = container.getBoundingClientRect();\r\n\r\n    return {\r\n        x: targetRect.x - containerRect.x - container.scrollLeft,\r\n        y: targetRect.y - containerRect.y - container.scrollTop,\r\n        x1: targetRect.x - containerRect.x - container.scrollLeft + targetRect.width,\r\n        y1: targetRect.y - containerRect.y - container.scrollTop + targetRect.height,\r\n        width: targetRect.width,\r\n        height: targetRect.height,\r\n    };\r\n}\r\n\r\nexport function computeBoundaryFromRects(startRect, endRect) {\r\n    let x = Math.min(startRect.x, endRect.x, startRect.x + startRect.width - 1, endRect.x + endRect.width - 1);\r\n    let x1 = Math.max(startRect.x, endRect.x, startRect.x + startRect.width - 1, endRect.x + endRect.width - 1);\r\n    let y = Math.min(startRect.y, endRect.y, startRect.y + startRect.height - 1, endRect.y + endRect.height - 1);\r\n    let y1 = Math.max(startRect.y, endRect.y, startRect.y + startRect.height - 1, endRect.y + endRect.height - 1);\r\n\r\n    let width = x1 - x;\r\n    let height = y1 - y;\r\n\r\n    return { x, x1, y, y1, width, height };\r\n}\r\n\r\nexport function isString(val) {\r\n    return typeof val === 'string';\r\n}\r\nexport function isFunction(val) {\r\n    return typeof val === 'function';\r\n}\r\n","import Quill from 'quill';\r\nimport TableWrapperFormat from '../format/TableWrapperFormat';\r\nimport { css, getRelativeRect } from '../utils';\r\nimport { blotName, toolName } from '../assets/const/name';\r\n\r\nlet TIP_HEIGHT = 12;\r\nconst CELL_MIN_WIDTH = 26;\r\nconst MIN_PRE = 3;\r\n/*\r\n\toptions = {\r\n\t\ttipHeight: 12,\t// tooltip height\r\n\t\tdisableToolNames: [],\t// 表格内禁用项， toolbar 的 name\r\n\t}\r\n*/\r\nexport default class TableTooltip {\r\n    constructor(quill, options = {}) {\r\n        this.quill = quill;\r\n        this.options = options;\r\n        this.optionsMerge();\r\n\r\n        this.tableWrapper = null;\r\n        this.table = null;\r\n        this.curTableId = '';\r\n        this.focusTableChange = false;\r\n        this.tableCols = [];\r\n        this.scrollHandler = [];\r\n\r\n        this.tableDisableToolHandlers = {};\r\n\r\n        this.root = this.quill.addContainer('ql-table-tooltip');\r\n        this.root.style.height = TIP_HEIGHT + 'px';\r\n\r\n        const resizeObserver = new ResizeObserver((entries) => {\r\n            this.hide();\r\n            this.focusTableChange = true;\r\n            this.curTableId = '';\r\n        });\r\n        resizeObserver.observe(this.quill.root);\r\n\r\n        this.isMobile = 'ontouchstart' in window;\r\n        this.handledEvents = this.isMobile\r\n            ? { down: 'touchstart', move: 'touchmove', up: 'touchend' }\r\n            : { down: 'mousedown', move: 'mousemove', up: 'mouseup' };\r\n\r\n        this.hide();\r\n        this.listen();\r\n    }\r\n\r\n    optionsMerge() {\r\n        this.options?.tipHeight && (TIP_HEIGHT = this.options.tipHeight);\r\n        TableTooltip.disableToolNames = Array.from(\r\n            new Set([...TableTooltip.disableToolNames, ...(this.options?.disableToolNames || [])])\r\n        );\r\n    }\r\n\r\n    listen() {\r\n        this.quill.on(Quill.events.SELECTION_CHANGE, (range, oldRange, source) => {\r\n            if (range == null) return;\r\n            if (range.length === 0) {\r\n                const [tableWrapper, offset] = this.quill.scroll.descendant(TableWrapperFormat, range.index);\r\n                if (tableWrapper !== null) {\r\n                    // 此时在 table 内, 禁用部分功能\r\n                    this.disableFromTable();\r\n\r\n                    this.tableWrapper = tableWrapper;\r\n                    this.table = tableWrapper.children.head;\r\n                    // 找到 tbody\r\n                    let tbody = tableWrapper.children.tail;\r\n                    while (tbody && tbody.statics.blotName !== blotName.tableBody) {\r\n                        tbody = tbody.children?.tail;\r\n                    }\r\n\r\n                    const tableCols = tableWrapper.children.head?.children?.head;\r\n                    if (tableCols.statics.blotName === blotName.tableColGroup && tableCols.children.length) {\r\n                        this.tableCols = tableCols.children.map((col) => col);\r\n                    } else {\r\n                        this.tableCols = [];\r\n                    }\r\n\r\n                    let curTableId = tableWrapper.children.head.tableId;\r\n                    if (this.curTableId !== curTableId) {\r\n                        this.clearScrollEvent();\r\n                        this.focusTableChange = true;\r\n                        // 表格滚动同步事件\r\n                        this.addScrollEvent(\r\n                            this.tableWrapper.domNode,\r\n                            this.scrollSync.bind(this, this.tableWrapper.domNode)\r\n                        );\r\n                    }\r\n                    this.curTableId = curTableId;\r\n\r\n                    this.show();\r\n                    this.position();\r\n                    return;\r\n                }\r\n            }\r\n            this.hide();\r\n        });\r\n    }\r\n\r\n    disableFromTable() {\r\n        this.toggleDisableToolbarTools('add');\r\n\r\n        const toolbar = this.quill.getModule('toolbar');\r\n        // 防止重复触发覆盖保存事件\r\n        if (toolbar.disableByTable) return;\r\n        toolbar.disableByTable = true;\r\n\r\n        // 去除 toolbar 对应 module 的 handler 事件, 保存在 tableDisableToolHandlers\r\n        for (const toolName of TableTooltip.disableToolNames) {\r\n            this.tableDisableToolHandlers[toolName] = toolbar.handlers[toolName];\r\n            // 不要使用 delete 删除属性\r\n            toolbar.handlers[toolName] = () => {};\r\n        }\r\n    }\r\n\r\n    enableFromTable() {\r\n        this.toggleDisableToolbarTools('remove');\r\n\r\n        const toolbar = this.quill.getModule('toolbar');\r\n        // 根据 tableDisableToolHandlers 恢复 handler\r\n        for (const toolName in this.tableDisableToolHandlers) {\r\n            toolbar.handlers[toolName] = this.tableDisableToolHandlers[toolName];\r\n        }\r\n        this.tableDisableToolHandlers = {};\r\n        toolbar.disableByTable = false;\r\n    }\r\n\r\n    /**\r\n     * Toggles the disable state of toolbar tools.\r\n     *\r\n     * @param {'add' | 'remove'} type - The type of toggle action to perform.\r\n     */\r\n    toggleDisableToolbarTools(type) {\r\n        this.quill.getModule('toolbar').controls.map(([name, btn]) => {\r\n            if (TableTooltip.disableToolNames.includes(name)) {\r\n                if (btn.tagName.toLowerCase() === 'select') {\r\n                    document.querySelector(`.ql-select.${btn.className}`)?.classList[type]('ql-disabled-table');\r\n                } else {\r\n                    btn.classList[type]('ql-disabled-table');\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    scrollSync(dom, e) {\r\n        this.root.scrollLeft = dom.scrollLeft;\r\n    }\r\n\r\n    addScrollEvent(dom, handle) {\r\n        dom.addEventListener('scroll', handle);\r\n        this.scrollHandler.push([dom, handle]);\r\n    }\r\n\r\n    clearScrollEvent() {\r\n        for (let i = 0; i < this.scrollHandler.length; i++) {\r\n            const [dom, handle] = this.scrollHandler[i];\r\n            dom.removeEventListener('scroll', handle);\r\n        }\r\n        this.scrollHandler = [];\r\n    }\r\n\r\n    position = () => {\r\n        const rootLRelativeLeft = getComputedStyle(this.quill.root).paddingLeft;\r\n        const tableTop = this.table.domNode.offsetTop;\r\n        const rootScrollTop = this.quill.root.scrollTop;\r\n        css(this.root, {\r\n            top: `${tableTop - rootScrollTop - TIP_HEIGHT}px`,\r\n            left: rootLRelativeLeft, // editor 的 padding left\r\n        });\r\n    };\r\n\r\n    show() {\r\n        // 若没有 colgroup col 元素，不显示\r\n        if (!this.tableCols.length) {\r\n            return;\r\n        }\r\n\r\n        if (this.focusTableChange) {\r\n            const tableWrapperRect = this.tableWrapper.domNode.getBoundingClientRect();\r\n            // 加 tableId 用于 table 删除时隐藏 tooltip\r\n            this.root.dataset.tableId = this.tableWrapper.tableId;\r\n            this.root.innerHTML = [...this.tableCols]\r\n                .map((col) => {\r\n                    let width = col.width + (this.table.full ? '%' : 'px');\r\n                    if (!col.width) {\r\n                        width = col.domNode.getBoundingClientRect().width + 'px';\r\n                    }\r\n                    return `<div class=\"ql-table-col-header\" style=\"width: ${width}\">\r\n            \t\t\t<div class=\"ql-table-col-separator\" style=\"height: ${tableWrapperRect.height + TIP_HEIGHT - 3}px\"></div>\r\n            \t\t</div>`; // -3 为 border-width: 2, top: 1\r\n                })\r\n                .join('');\r\n\r\n            this.focusTableChange = false;\r\n            Object.assign(this.root.style, {\r\n                width: tableWrapperRect.width + 'px',\r\n            });\r\n\r\n            this.bindDrag();\r\n        }\r\n        setTimeout(() => {\r\n            this.scrollSync(this.tableWrapper.domNode);\r\n        }, 0);\r\n        this.root.classList.remove('ql-hidden');\r\n\r\n        const srcollHide = () => {\r\n            this.hide();\r\n            this.quill.root.removeEventListener('scroll', srcollHide);\r\n        };\r\n        this.quill.root.addEventListener('scroll', srcollHide);\r\n    }\r\n\r\n    hide() {\r\n        this.root.classList.add('ql-hidden');\r\n        this.enableFromTable();\r\n    }\r\n\r\n    bindDrag() {\r\n        let tipColBreak = null;\r\n        let curColIndex = -1;\r\n        let tableColHeads = Array.from(this.root.getElementsByClassName('ql-table-col-header'));\r\n        let tableColHeadSeparators = Array.from(this.root.getElementsByClassName('ql-table-col-separator'));\r\n        const appendTo = document.body;\r\n        // 设置每个 drag 下标对应 col 下标，最右会多一个 drag, 与 better-table 的类似\r\n        // 根据当前的 col left 配合 clientX 计算, 使保证最小宽度\r\n        const handleMousemove = (e) => {\r\n            // getBoundingClientRect 的 top/bottom/left/right, 这是根据视口距离\r\n            const rect = tableColHeads[curColIndex].getBoundingClientRect();\r\n            const tableWidth = this.table.domNode.getBoundingClientRect().width;\r\n            let resX = this.isMobile ? e.changedTouches[0].clientX : e.clientX;\r\n\r\n            if (this.table.full) {\r\n                // 拖拽的最大宽度是当前 col 宽度 + next col 宽度, 最后一个 col 最大宽度是当前宽度\r\n                const minWidth = (MIN_PRE / 100) * tableWidth;\r\n                const maxRange =\r\n                    resX > rect.right\r\n                        ? tableColHeads[curColIndex + 1]\r\n                            ? tableColHeads[curColIndex + 1].getBoundingClientRect().right - minWidth\r\n                            : rect.right - minWidth\r\n                        : Infinity;\r\n                const minRange = rect.x + minWidth;\r\n\r\n                resX = Math.min(Math.max(resX, minRange), maxRange);\r\n            } else {\r\n                if (resX - rect.x < CELL_MIN_WIDTH) {\r\n                    resX = rect.x + CELL_MIN_WIDTH;\r\n                }\r\n            }\r\n            resX = Math.floor(resX);\r\n            tipColBreak.style.left = resX + 'px';\r\n            tipColBreak.dataset.w = resX - rect.x;\r\n        };\r\n        const handleMouseup = (e) => {\r\n            let w = parseInt(tipColBreak.dataset.w);\r\n            // table full 时处理不同\r\n            if (this.table.full) {\r\n                // 在调整一个后把所有 col 都变成百分比\r\n                let pre = (w / this.table.domNode.getBoundingClientRect().width) * 100;\r\n                let oldWidthPre = this.tableCols[curColIndex].width;\r\n                if (pre < oldWidthPre) {\r\n                    // 缩小时若不是最后一个, 则把减少的量加在后面一个\r\n                    // 若是最后一个则把减少的量加在前面一个\r\n                    pre = Math.max(MIN_PRE, pre);\r\n                    const last = oldWidthPre - pre;\r\n                    if (this.tableCols[curColIndex + 1]) {\r\n                        this.tableCols[curColIndex + 1].width = `${this.tableCols[curColIndex + 1].width + last}%`;\r\n                    } else {\r\n                        this.tableCols[curColIndex - 1].width = `${this.tableCols[curColIndex - 1].width + last}%`;\r\n                    }\r\n                    this.tableCols[curColIndex].width = `${pre}%`;\r\n                } else {\r\n                    // 增大时若不是最后一个, 则与后面一个的宽度合并, 最大不能超过合并的宽度, 增加的量来自后面一个的减少量\r\n                    // 若是最后一个则不处理\r\n                    if (this.tableCols[curColIndex + 1]) {\r\n                        const totalWidthNextPre = oldWidthPre + this.tableCols[curColIndex + 1].width;\r\n                        pre = Math.min(totalWidthNextPre - MIN_PRE, pre);\r\n                        this.tableCols[curColIndex].width = `${pre}%`;\r\n                        this.tableCols[curColIndex + 1].width = totalWidthNextPre - pre + '%';\r\n                    }\r\n                }\r\n            } else {\r\n                this.table.domNode.style.width =\r\n                    parseFloat(this.table.domNode.style.width) -\r\n                    parseFloat(tableColHeads[curColIndex].style.width) +\r\n                    w +\r\n                    'px';\r\n                tableColHeads[curColIndex].style.width = w + 'px';\r\n                this.tableCols[curColIndex].width = w;\r\n            }\r\n\r\n            appendTo.removeChild(tipColBreak);\r\n            tipColBreak = null;\r\n            curColIndex = -1;\r\n            document.removeEventListener(this.handledEvents.up, handleMouseup);\r\n            document.removeEventListener(this.handledEvents.move, handleMousemove);\r\n\r\n            const tableModule = this.quill.getModule(toolName.table);\r\n            tableModule.hideTableTools();\r\n        };\r\n        const handleMousedown = (i, e) => {\r\n            document.addEventListener(this.handledEvents.up, handleMouseup);\r\n            document.addEventListener(this.handledEvents.move, handleMousemove);\r\n            curColIndex = i;\r\n\r\n            const divDom = document.createElement('div');\r\n            divDom.classList.add('ql-table-drag-line');\r\n\r\n            const tableRect = this.tableWrapper.domNode.getBoundingClientRect();\r\n            css(divDom, {\r\n                top: `${tableRect.y - TIP_HEIGHT}px`,\r\n                left: `${this.isMobile ? e.changedTouches[0].clientX : e.clientX}px`,\r\n                height: `${tableRect.height + TIP_HEIGHT}px`,\r\n            });\r\n            appendTo.appendChild(divDom);\r\n\r\n            if (tipColBreak) appendTo.removeChild(tipColBreak);\r\n            tipColBreak = divDom;\r\n        };\r\n        tableColHeadSeparators.map((el, i) => {\r\n            el.addEventListener(this.handledEvents.down, handleMousedown.bind(this, i));\r\n            // 防止拖拽使触发 drag 导致可以使此元素被插入表格\r\n            el.addEventListener('dragstart', (e) => {\r\n                e.preventDefault();\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\n// 在 table 内时禁用的 tool 的 name\r\nTableTooltip.disableToolNames = [toolName.table];\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const/name';\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass ContainBlot extends Container {\r\n    static create(value) {\r\n        const tagName = 'contain';\r\n        const node = super.create(tagName);\r\n        return node;\r\n    }\r\n\r\n    insertBefore(blot, ref) {\r\n        if (blot.statics.blotName == this.statics.blotName) {\r\n            super.insertBefore(blot.children.head, ref);\r\n        } else {\r\n            super.insertBefore(blot, ref);\r\n        }\r\n    }\r\n\r\n    format(name, value) {\r\n        this.domNode.lastChild.setAttribute(name, value);\r\n    }\r\n\r\n    formats() {\r\n        return { [this.statics.blotName]: this.statics.formats(this.domNode) };\r\n    }\r\n\r\n    replace(target) {\r\n        if (target.statics.blotName !== this.statics.blotName) {\r\n            const item = Parchment.create(this.statics.defaultChild);\r\n            target.moveChildren(item);\r\n            this.appendChild(item);\r\n        }\r\n        if (target.parent == null) return;\r\n        super.replace(target);\r\n    }\r\n}\r\n\r\nContainBlot.blotName = blotName.contain;\r\nContainBlot.tagName = 'contain';\r\nContainBlot.scope = Parchment.Scope.BLOCK_BLOT;\r\nContainBlot.defaultChild = 'block';\r\n\r\nexport default ContainBlot;\r\n","import Quill from 'quill';\r\nimport ContainBlot from '../blot/contain';\r\nimport { blotName } from '../assets/const/name';\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableCellInnerFormat extends ContainBlot {\r\n    static create(value) {\r\n        const { tableId, rowId, colId, rowspan, colspan, style } = value;\r\n        const node = super.create();\r\n        node.dataset.tableId = tableId;\r\n        node.dataset.rowId = rowId;\r\n        node.dataset.colId = colId;\r\n        node.dataset.rowspan = rowspan || 1;\r\n        node.dataset.colspan = colspan || 1;\r\n        node._style = style;\r\n        return node;\r\n    }\r\n\r\n    formats() {\r\n        const { tableId, rowId, colId, rowspan, colspan } = this.domNode.dataset;\r\n        return {\r\n            [this.statics.blotName]: {\r\n                tableId,\r\n                rowId,\r\n                colId,\r\n                rowspan,\r\n                colspan,\r\n                style: this.domNode._style,\r\n            },\r\n        };\r\n    }\r\n\r\n    updateDelta() {\r\n        this.children.forEach((child) => {\r\n            child.cache = {};\r\n        });\r\n    }\r\n\r\n    get rowId() {\r\n        return this.domNode.dataset.rowId;\r\n    }\r\n    get colId() {\r\n        return this.domNode.dataset.colId;\r\n    }\r\n    get rowspan() {\r\n        return Number(this.domNode.dataset.rowspan);\r\n    }\r\n    set rowspan(value) {\r\n        this.parent && (this.parent.rowspan = value);\r\n        this.domNode.dataset.rowspan = value;\r\n        this.updateDelta();\r\n    }\r\n    get colspan() {\r\n        return Number(this.domNode.dataset.colspan);\r\n    }\r\n    set colspan(value) {\r\n        this.parent && (this.parent.colspan = value);\r\n        this.domNode.dataset.colspan = value;\r\n        this.updateDelta();\r\n    }\r\n    set style(value) {\r\n        this.domNode._style = value;\r\n        this.parent.style = value;\r\n        this.updateDelta();\r\n    }\r\n\r\n    optimize() {\r\n        super.optimize();\r\n\r\n        const parent = this.parent;\r\n        // 父级非表格，则将当前 blot 放入表格中\r\n        const { tableId, colId, rowId, rowspan, colspan } = this.domNode.dataset;\r\n        if (parent != null && parent.statics.blotName != blotName.tableCell) {\r\n            const mark = Parchment.create('block');\r\n\r\n            this.parent.insertBefore(mark, this.next);\r\n            const tableWrapper = Parchment.create(blotName.tableWrapper, tableId);\r\n            const table = Parchment.create(blotName.table, tableId);\r\n            const tableBody = Parchment.create(blotName.tableBody);\r\n            const tr = Parchment.create(blotName.tableRow, rowId);\r\n            const td = Parchment.create(blotName.tableCell, {\r\n                tableId,\r\n                rowId,\r\n                colId,\r\n                rowspan,\r\n                colspan,\r\n                style: this.domNode._style,\r\n            });\r\n\r\n            td.appendChild(this);\r\n            tr.appendChild(td);\r\n            tableBody.appendChild(tr);\r\n            table.appendChild(tableBody);\r\n            tableWrapper.appendChild(table);\r\n\r\n            tableWrapper.replace(mark);\r\n        }\r\n\r\n        const next = this.next;\r\n        // cell 下有多个 cellInner 全部合并\r\n        if (next != null && next.prev === this && next.statics.blotName === this.statics.blotName) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n}\r\n\r\nTableCellInnerFormat.blotName = blotName.tableCellInner;\r\nTableCellInnerFormat.tagName = 'p';\r\nTableCellInnerFormat.className = 'ql-table-cell-inner';\r\nTableCellInnerFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport default TableCellInnerFormat;\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const/name';\r\nimport TableCellInnerFormat from './TableCellInnerFormat';\r\nconst Parchment = Quill.import('parchment');\r\nconst Container = Quill.import('blots/container');\r\n\r\nclass TableCellFormat extends Container {\r\n    static create(value) {\r\n        const { rowId, colId, rowspan, colspan, style } = value;\r\n        const node = super.create();\r\n        node.dataset.rowId = rowId;\r\n        node.dataset.colId = colId;\r\n        node.setAttribute('rowspan', rowspan || 1);\r\n        node.setAttribute('colspan', colspan || 1);\r\n        node.setAttribute('style', style || '');\r\n        return node;\r\n    }\r\n\r\n    get rowId() {\r\n        return this.domNode.dataset.rowId;\r\n    }\r\n    get colId() {\r\n        return this.domNode.dataset.colId;\r\n    }\r\n    get rowspan() {\r\n        return Number(this.domNode.getAttribute('rowspan'));\r\n    }\r\n    set rowspan(value) {\r\n        this.domNode.setAttribute('rowspan', value);\r\n    }\r\n    get colspan() {\r\n        return Number(this.domNode.getAttribute('colspan'));\r\n    }\r\n    set colspan(value) {\r\n        this.domNode.setAttribute('colspan', value);\r\n    }\r\n    set style(value) {\r\n        this.domNode.setAttribute('style', value);\r\n    }\r\n\r\n    getCellInner() {\r\n        return this.descendants(TableCellInnerFormat)[0];\r\n    }\r\n\r\n    optimize() {\r\n        super.optimize();\r\n        const { colId, rowId } = this.domNode.dataset;\r\n        const next = this.next;\r\n        if (\r\n            next != null &&\r\n            next.prev === this &&\r\n            next.statics.blotName === this.statics.blotName &&\r\n            next.domNode.dataset.rowId === rowId &&\r\n            next.domNode.dataset.colId === colId\r\n        ) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n\r\n    deleteAt(index, length) {\r\n        if (index === 0 && length === this.length()) {\r\n            const cell = this.next || this.prev;\r\n            const cellInner = cell && cell.getCellInner();\r\n            if (cellInner) {\r\n                cellInner.colspan += this.colspan;\r\n            }\r\n            return this.remove();\r\n        }\r\n        this.children.forEachAt(index, length, function (child, offset, length) {\r\n            child.deleteAt(offset, length);\r\n        });\r\n    }\r\n}\r\n\r\nTableCellFormat.blotName = blotName.tableCell;\r\nTableCellFormat.tagName = 'td';\r\nTableCellFormat.className = 'ql-table-cell';\r\nTableCellFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport default TableCellFormat;\r\n","// 以 ql-better-table 的 table-selection.js 为修改基础\r\n\r\nimport Quill from 'quill';\r\nimport TableCellFormat from '../format/TableCellFormat';\r\nimport { css, getRelativeRect, computeBoundaryFromRects } from '../utils';\r\n\r\nlet PRIMARY_COLOR = '#0589f3';\r\nconst ERROR_LIMIT = 2;\r\n\r\n/*\r\n\toptions = {\r\n\t\tprimaryColor: Hex color code\r\n\t}\r\n*/\r\nexport default class TableSelection {\r\n    constructor(table, quill, options = {}) {\r\n        if (!table) return null;\r\n        this.table = table;\r\n        this.quill = quill;\r\n        this.options = options;\r\n        this.optionsMerge();\r\n\r\n        this.boundary = {};\r\n        // 选中的 cell\r\n        this.selectedTds = [];\r\n        this.dragging = false;\r\n        this.selectingHandler = this.mouseDownHandler.bind(this);\r\n        this.cellSelect = null; // selection 显示边框\r\n        this.scrollHandler = [];\r\n        this.helpLinesInitial();\r\n\r\n        const resizeObserver = new ResizeObserver((entries) => {\r\n            this.clearSelection();\r\n        });\r\n        resizeObserver.observe(this.quill.root);\r\n\r\n        this.quill.root.addEventListener('mousedown', this.selectingHandler, false);\r\n        this.closeHandler = this.clearSelection.bind(this);\r\n        this.quill.on(Quill.events.TEXT_CHANGE, this.closeHandler);\r\n    }\r\n\r\n    optionsMerge() {\r\n        this.options?.primaryColor && (PRIMARY_COLOR = this.options.primaryColor);\r\n    }\r\n\r\n    addScrollEvent(dom, handle) {\r\n        dom.addEventListener('scroll', handle);\r\n        this.scrollHandler.push([dom, handle]);\r\n    }\r\n\r\n    clearScrollEvent() {\r\n        for (let i = 0; i < this.scrollHandler.length; i++) {\r\n            let [dom, handle] = this.scrollHandler[i];\r\n            dom.removeEventListener('scroll', handle);\r\n        }\r\n        this.scrollHandler = [];\r\n    }\r\n\r\n    // 初始化边框 dom\r\n    helpLinesInitial() {\r\n        this.cellSelect = this.quill.addContainer('ql-table-selection_line');\r\n        css(this.cellSelect, {\r\n            'border-color': PRIMARY_COLOR,\r\n        });\r\n    }\r\n\r\n    mouseDownHandler(e) {\r\n        if (e.button !== 0 || !e.target.closest('.ql-table')) return;\r\n        const startTableId = e.target.closest('.ql-table').dataset.tableId;\r\n\r\n        const mouseMoveHandler = (e) => {\r\n            // 根据 tableId 判断是否跨表格，跨表格不计算\r\n            if (\r\n                e.button !== 0 ||\r\n                !e.target.closest('.ql-table') ||\r\n                e.target.closest('.ql-table').dataset.tableId !== startTableId\r\n            )\r\n                return;\r\n\r\n            const endTd = e.target.closest('td[data-row-id]');\r\n            const endTdRect = getRelativeRect(endTd.getBoundingClientRect(), this.quill.root.parentNode);\r\n            this.boundary = computeBoundaryFromRects(startTdRect, endTdRect);\r\n            this.correctBoundary();\r\n            this.selectedTds = this.computeSelectedTds();\r\n            this.repositionHelpLines();\r\n\r\n            if (startTd !== endTd) {\r\n                this.quill.blur();\r\n            }\r\n        };\r\n\r\n        const mouseUpHandler = (e) => {\r\n            document.body.removeEventListener('mousemove', mouseMoveHandler, false);\r\n            document.body.removeEventListener('mouseup', mouseUpHandler, false);\r\n            this.dragging = false;\r\n        };\r\n\r\n        document.body.addEventListener('mousemove', mouseMoveHandler, false);\r\n        document.body.addEventListener('mouseup', mouseUpHandler, false);\r\n\r\n        const startTd = e.target.closest('td[data-row-id]');\r\n        const startTdRect = getRelativeRect(startTd.getBoundingClientRect(), this.quill.root.parentNode);\r\n        this.dragging = true;\r\n        this.boundary = computeBoundaryFromRects(startTdRect, startTdRect);\r\n        this.correctBoundary();\r\n        this.selectedTds = this.computeSelectedTds();\r\n        this.repositionHelpLines();\r\n\r\n        this.addScrollEvent(this.table.parentNode, () => {\r\n            // 处理 boundary, 使滚动时 left 等跟随滚动\r\n            this.repositionHelpLines();\r\n        });\r\n\r\n        const srcollHide = () => {\r\n            this.clearSelection();\r\n            this.quill.root.removeEventListener('scroll', srcollHide);\r\n        };\r\n        this.quill.root.addEventListener('scroll', srcollHide);\r\n    }\r\n\r\n    computeSelectedTds() {\r\n        const tableContainer = Quill.find(this.table);\r\n        // 选中范围计算任然使用 tableCell, tableCellInner 可滚动, width 会影响\r\n        const tableCells = tableContainer.descendants(TableCellFormat);\r\n\r\n        return tableCells.reduce((selectedCells, tableCell) => {\r\n            let { x, y, width, height } = getRelativeRect(\r\n                tableCell.domNode.getBoundingClientRect(),\r\n                this.quill.root.parentNode\r\n            );\r\n            let isCellIncluded =\r\n                x + ERROR_LIMIT >= this.boundary.x &&\r\n                x - ERROR_LIMIT + width <= this.boundary.x1 &&\r\n                y + ERROR_LIMIT >= this.boundary.y &&\r\n                y - ERROR_LIMIT + height <= this.boundary.y1;\r\n\r\n            if (isCellIncluded) {\r\n                selectedCells.push(tableCell.getCellInner());\r\n            }\r\n\r\n            return selectedCells;\r\n        }, []);\r\n    }\r\n\r\n    correctBoundary() {\r\n        // 边框计算任然使用 tableCell, 有 padding 会影响\r\n        const tableContainer = Quill.find(this.table);\r\n        const tableCells = tableContainer.descendants(TableCellFormat);\r\n\r\n        tableCells.forEach((tableCell) => {\r\n            const { x, y, width, height } = getRelativeRect(\r\n                tableCell.domNode.getBoundingClientRect(),\r\n                this.quill.root.parentNode\r\n            );\r\n\r\n            const isCellIntersected =\r\n                ((x + ERROR_LIMIT >= this.boundary.x && x + ERROR_LIMIT <= this.boundary.x1) ||\r\n                    (x - ERROR_LIMIT + width >= this.boundary.x && x - ERROR_LIMIT + width <= this.boundary.x1)) &&\r\n                ((y + ERROR_LIMIT >= this.boundary.y && y + ERROR_LIMIT <= this.boundary.y1) ||\r\n                    (y - ERROR_LIMIT + height >= this.boundary.y && y - ERROR_LIMIT + height <= this.boundary.y1));\r\n\r\n            if (isCellIntersected) {\r\n                this.boundary = computeBoundaryFromRects(this.boundary, { x, y, width, height });\r\n            }\r\n        });\r\n        this.scrollX = this.table.parentNode.scrollLeft;\r\n    }\r\n    // 边框样式显示\r\n    repositionHelpLines() {\r\n        const tableViewScrollLeft = this.table.parentNode.scrollLeft;\r\n        const scrollTop = this.quill.root.parentNode.scrollTop;\r\n\r\n        css(this.cellSelect, {\r\n            display: 'block',\r\n            left: `${this.boundary.x + (this.scrollX - tableViewScrollLeft) - 1}px`,\r\n            top: `${scrollTop * 2 + this.boundary.y}px`,\r\n            width: `${this.boundary.width + 1}px`,\r\n            height: `${this.boundary.height + 1}px`,\r\n        });\r\n    }\r\n\r\n    clearSelection() {\r\n        this.boundary = {};\r\n        this.selectedTds = [];\r\n\r\n        this.cellSelect &&\r\n            css(this.cellSelect, {\r\n                display: 'none',\r\n            });\r\n        this.clearScrollEvent();\r\n    }\r\n\r\n    destroy() {\r\n        this.clearSelection();\r\n        this.cellSelect.remove();\r\n        this.cellSelect = null;\r\n        this.clearScrollEvent();\r\n\r\n        this.quill.root.removeEventListener('mousedown', this.selectingHandler, false);\r\n        this.quill.off(Quill.events.TEXT_CHANGE, this.closeHandler);\r\n\r\n        return null;\r\n    }\r\n}\r\n","import { css, isFunction, isString } from '../utils';\r\nimport { moduleName } from '../assets/const/name';\r\n\r\nconst MENU_ITEMS_DEFAULT = {\r\n    insertColumnLeft: {\r\n        text: '在左侧插入一列',\r\n        handler() {\r\n            const tableModule = this.quill.getModule(moduleName.table);\r\n            tableModule.appendCol();\r\n            tableModule.hideTableTools();\r\n        },\r\n    },\r\n    insertColumnRight: {\r\n        text: '在右侧插入一列',\r\n        handler() {\r\n            const tableModule = this.quill.getModule(moduleName.table);\r\n            tableModule.appendCol(true);\r\n            tableModule.hideTableTools();\r\n        },\r\n    },\r\n    insertRowTop: {\r\n        text: '在上方插入一行',\r\n        handler() {\r\n            const tableModule = this.quill.getModule(moduleName.table);\r\n            tableModule.appendRow();\r\n            tableModule.hideTableTools();\r\n        },\r\n    },\r\n    insertRowBottom: {\r\n        text: '在下方插入一行',\r\n        groupEnd: true,\r\n        handler() {\r\n            const tableModule = this.quill.getModule(moduleName.table);\r\n            tableModule.appendRow(true);\r\n            tableModule.hideTableTools();\r\n        },\r\n    },\r\n    removeCol: {\r\n        text: '删除所在列',\r\n        handler() {\r\n            const tableModule = this.quill.getModule(moduleName.table);\r\n            tableModule.removeCol();\r\n            tableModule.hideTableTools();\r\n        },\r\n    },\r\n    removeRow: {\r\n        text: '删除所在行',\r\n        handler() {\r\n            const tableModule = this.quill.getModule(moduleName.table);\r\n            tableModule.removeRow();\r\n            tableModule.hideTableTools();\r\n        },\r\n    },\r\n    removeTable: {\r\n        text: '删除表格',\r\n        groupEnd: true,\r\n        handler() {\r\n            const tableModule = this.quill.getModule(moduleName.table);\r\n            tableModule.removeTable();\r\n            tableModule.hideTableTools();\r\n        },\r\n    },\r\n    mergeCell: {\r\n        text: '合并单元格',\r\n        groupEnd: true,\r\n        handler() {\r\n            const tableModule = this.quill.getModule(moduleName.table);\r\n            tableModule.mergeCells();\r\n            tableModule.hideTableTools();\r\n        },\r\n    },\r\n    setBackgroundColor: {\r\n        subTitle: '设置背景颜色',\r\n        text() {\r\n            const tableModule = this.quill.getModule(moduleName.table);\r\n            const input = document.createElement('input');\r\n            input.type = 'color';\r\n            input.addEventListener('click', (e) => {\r\n                e.stopPropagation();\r\n            });\r\n            input.addEventListener('input', () => {\r\n                tableModule.setBackgroundColor(input.value);\r\n            });\r\n            input.style.width = '100%';\r\n            return input;\r\n        },\r\n    },\r\n};\r\nconst MENU_MIN_HEIHGT = 150;\r\nconst MENU_WIDTH = 200;\r\n\r\n/*\r\n    options = {\r\n        items: {\r\n           functionName: {\r\n                text: '显示文字',\r\n                handle() {},    // 触发事件\r\n                iconSrc: string,    // icon url\r\n                groupEnd: boolean, // 是否显示分隔线\r\n                subTitle: '显示子标题',\r\n            }\r\n        }\r\n    }\r\n*/\r\nexport default class TableOperationMenu {\r\n    constructor(params, quill, options = {}) {\r\n        this.table = params.table;\r\n        this.quill = quill;\r\n        this.options = options;\r\n        const tableModule = this.quill.getModule(moduleName.table);\r\n        this.tableSelection = tableModule.tableSelection;\r\n        this.menuItems = {};\r\n        this.optionsMerge();\r\n\r\n        this.boundary = this.tableSelection.boundary;\r\n        this.selectedTds = this.tableSelection.selectedTds;\r\n\r\n        this.destroyHandler = this.destroy.bind(this);\r\n        this.menuInitial(params);\r\n        this.mount();\r\n\r\n        document.addEventListener('click', this.destroyHandler, false);\r\n    }\r\n\r\n    optionsMerge() {\r\n        if (this.options?.replaceItems) {\r\n            this.menuItems = this.options?.items ?? {};\r\n        } else {\r\n            this.menuItems = Object.assign({}, MENU_ITEMS_DEFAULT, this.options?.items ?? {});\r\n        }\r\n    }\r\n\r\n    mount() {\r\n        document.body.appendChild(this.domNode);\r\n    }\r\n\r\n    menuInitial({ table, row, cell, left, top }) {\r\n        this.domNode = document.createElement('div');\r\n        this.domNode.classList.add('ql-table-operation-menu');\r\n\r\n        const style = {\r\n            position: 'absolute',\r\n            'min-height': `${MENU_MIN_HEIHGT}px`,\r\n            width: `${MENU_WIDTH}px`,\r\n        };\r\n        const { innerWidth: width, innerHeight: height } = window;\r\n        left > width - MENU_WIDTH ? (style.right = `${width - left}px`) : (style.left = `${left}px`);\r\n        top > height - MENU_MIN_HEIHGT ? (style.bottom = `${height - top}px`) : (style.top = `${top}px`);\r\n        css(this.domNode, style);\r\n\r\n        for (const name in this.menuItems) {\r\n            if (this.menuItems[name]) {\r\n                if (this.menuItems[name].subTitle) {\r\n                    this.domNode.appendChild(subTitleCreator(this.menuItems[name].subTitle));\r\n                }\r\n\r\n                this.domNode.appendChild(\r\n                    this.menuItemCreator(Object.assign({}, MENU_ITEMS_DEFAULT[name], this.menuItems[name]))\r\n                );\r\n\r\n                if (this.menuItems[name].groupEnd) {\r\n                    this.domNode.appendChild(dividingCreator());\r\n                }\r\n            }\r\n        }\r\n\r\n        // create dividing line\r\n        function dividingCreator() {\r\n            const dividing = document.createElement('div');\r\n            dividing.classList.add('ql-table-operation-menu-dividing');\r\n            return dividing;\r\n        }\r\n\r\n        // create subtitle for menu\r\n        function subTitleCreator(title) {\r\n            const subTitle = document.createElement('div');\r\n            subTitle.classList.add('ql-table-operation-menu-subtitle');\r\n            subTitle.innerText = title;\r\n            return subTitle;\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.domNode.remove();\r\n        document.removeEventListener('click', this.destroyHandler, false);\r\n        return null;\r\n    }\r\n\r\n    menuItemCreator({ text, iconSrc, handler }) {\r\n        const node = document.createElement('div');\r\n        node.classList.add('ql-table-operation-menu-item');\r\n\r\n        if (iconSrc) {\r\n            const iconSpan = document.createElement('span');\r\n            iconSpan.classList.add('ql-table-operation-menu-icon');\r\n            iconSpan.innerHTML = iconSrc;\r\n            node.appendChild(iconSpan);\r\n        }\r\n\r\n        if (isString(text)) {\r\n            const textSpan = document.createElement('span');\r\n            textSpan.classList.add('ql-table-operation-menu-text');\r\n            textSpan.innerText = text;\r\n            node.appendChild(textSpan);\r\n        } else if (isFunction(text)) {\r\n            node.appendChild(text.call(this));\r\n        }\r\n\r\n        isFunction(handler) && node.addEventListener('click', handler.bind(this), false);\r\n        return node;\r\n    }\r\n}\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const/name';\r\nimport TableCellInnerFormat from './TableCellInnerFormat';\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableRowFormat extends Container {\r\n    static create(value) {\r\n        const node = super.create();\r\n        node.dataset.rowId = value;\r\n        return node;\r\n    }\r\n\r\n    optimize() {\r\n        super.optimize();\r\n        const next = this.next;\r\n        if (\r\n            next != null &&\r\n            next.prev === this &&\r\n            next.statics.blotName === this.statics.blotName &&\r\n            next.domNode.dataset.rowId === this.domNode.dataset.rowId\r\n        ) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n\r\n    get rowId() {\r\n        return this.domNode.dataset.rowId;\r\n    }\r\n\r\n    foreachCellInner(func) {\r\n        const next = this.children.iterator();\r\n        let i = 0;\r\n        let cur;\r\n        while ((cur = next())) {\r\n            const [tableCell] = cur.descendants(TableCellInnerFormat);\r\n            if (func(tableCell, i++)) break;\r\n        }\r\n    }\r\n}\r\n\r\nTableRowFormat.blotName = blotName.tableRow;\r\nTableRowFormat.tagName = 'tr';\r\nTableRowFormat.className = 'ql-table-row';\r\nTableRowFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport default TableRowFormat;\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const/name';\r\nconst Parchment = Quill.import('parchment');\r\nconst Block = Quill.import('blots/block');\r\n\r\nclass TableColFormat extends Block {\r\n    static create(value) {\r\n        const { width, tableId, colId, full } = value;\r\n        const node = super.create();\r\n        node.setAttribute('width', width);\r\n        node.setAttribute('data-full', full);\r\n        node.dataset.tableId = tableId;\r\n        node.dataset.colId = colId;\r\n\r\n        return node;\r\n    }\r\n\r\n    get width() {\r\n        const width = this.domNode.getAttribute('width');\r\n        if (isNaN(width) && !width.endsWith('%')) return null;\r\n        return parseFloat(width);\r\n    }\r\n    set width(value) {\r\n        return this.domNode.setAttribute('width', value);\r\n    }\r\n\r\n    get colId() {\r\n        return this.domNode.dataset.colId;\r\n    }\r\n\r\n    get full() {\r\n        return this.domNode.hasAttribute('data-full');\r\n    }\r\n\r\n    formats() {\r\n        const { tableId, colId } = this.domNode.dataset;\r\n        return {\r\n            [this.statics.blotName]: {\r\n                tableId,\r\n                colId,\r\n                width: this.domNode.getAttribute('width'),\r\n                full: this.domNode.getAttribute('data-full'),\r\n            },\r\n        };\r\n    }\r\n\r\n    optimize() {\r\n        super.optimize();\r\n\r\n        const parent = this.parent;\r\n        if (parent != null && parent.statics.blotName != blotName.tableColGroup) {\r\n            const mark = Parchment.create('block');\r\n            this.parent.insertBefore(mark, this.next);\r\n\r\n            const tableWrapper = Parchment.create(blotName.tableWrapper, this.domNode.dataset.tableId);\r\n            const table = Parchment.create(blotName.table, this.domNode.dataset.tableId);\r\n\r\n            this.full && (table.full = true);\r\n\r\n            const tableColgroup = Parchment.create(blotName.tableColGroup);\r\n\r\n            tableColgroup.appendChild(this);\r\n            table.appendChild(tableColgroup);\r\n            tableWrapper.appendChild(table);\r\n\r\n            // 最终显示 tableWrapper\r\n            tableWrapper.replace(mark);\r\n        }\r\n        const next = this.next;\r\n        const { tableId: ttableId, colId: tcolId } = this.domNode.dataset;\r\n        if (\r\n            next != null &&\r\n            next.statics.blotName === this.statics.blotName &&\r\n            next.domNode.tagName === this.domNode.tagName &&\r\n            next.domNode.dataset.tableId === ttableId &&\r\n            next.domNode.dataset.colId === tcolId\r\n        ) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n\r\n    html() {\r\n        return this.domNode.outerHTML;\r\n    }\r\n}\r\nTableColFormat.blotName = blotName.tableCol;\r\nTableColFormat.tagName = 'col';\r\nTableColFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport default TableColFormat;\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const/name';\r\nimport TableRowFormat from './TableRowFormat';\r\nimport TableColFormat from './TableColFormat';\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableFormat extends Container {\r\n    constructor(domNode, value) {\r\n        super(domNode, value);\r\n\r\n        this.formatTableWidth();\r\n    }\r\n\r\n    static create(value) {\r\n        const node = super.create();\r\n\r\n        node.dataset.tableId = value;\r\n        node.classList.add('ql-table');\r\n        node.setAttribute('cellpadding', 0);\r\n        node.setAttribute('cellspacing', 0);\r\n\r\n        return node;\r\n    }\r\n\r\n    colWidthFillTable() {\r\n        const colgroup = this.children.head;\r\n        if (!colgroup || colgroup.statics.blotName !== blotName.tableColGroup) return;\r\n\r\n        const colsWidth = colgroup.children.reduce((sum, col) => col.width + sum, 0);\r\n        if (colsWidth === 0 || isNaN(colsWidth) || this.full) return null;\r\n        this.domNode.style.width = colsWidth + 'px';\r\n        return colsWidth;\r\n    }\r\n\r\n    formatTableWidth() {\r\n        setTimeout(() => {\r\n            this.colWidthFillTable();\r\n        }, 0);\r\n    }\r\n\r\n    get tableId() {\r\n        return this.domNode.dataset.tableId;\r\n    }\r\n    get full() {\r\n        return this.domNode.hasAttribute('data-full');\r\n    }\r\n    set full(value) {\r\n        this.domNode[value ? 'setAttribute' : 'removeAttribute']('data-full', '');\r\n    }\r\n\r\n    getRows() {\r\n        return this.descendants(TableRowFormat);\r\n    }\r\n    getRowIds() {\r\n        return this.getRows().map((d) => d.rowId);\r\n    }\r\n\r\n    getCols() {\r\n        return this.descendants(TableColFormat);\r\n    }\r\n    getColIds() {\r\n        return this.getCols().map((d) => d.colId);\r\n    }\r\n\r\n    optimize() {\r\n        super.optimize();\r\n        let next = this.next;\r\n        if (\r\n            next != null &&\r\n            next.prev === this &&\r\n            next.statics.blotName === this.statics.blotName &&\r\n            next.domNode.tagName === this.domNode.tagName &&\r\n            next.domNode.dataset.tableId === this.domNode.dataset.tableId\r\n        ) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n}\r\n\r\nTableFormat.blotName = blotName.table;\r\nTableFormat.tagName = 'table';\r\nTableFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport default TableFormat;\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const/name';\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableBodyFormat extends Container {\r\n    optimize() {\r\n        super.optimize();\r\n        const next = this.next;\r\n        if (\r\n            next != null &&\r\n            next.prev === this &&\r\n            next.statics.blotName === this.statics.blotName &&\r\n            next.domNode.tagName === this.domNode.tagName\r\n        ) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n\r\n    deleteAt(index, length) {\r\n        if (index === 0 && length === this.length()) {\r\n            this.parent.remove();\r\n        }\r\n        this.children.forEachAt(index, length, function (child, offset, length) {\r\n            child.deleteAt(offset, length);\r\n        });\r\n    }\r\n}\r\nTableBodyFormat.blotName = blotName.tableBody;\r\nTableBodyFormat.tagName = 'tbody';\r\nTableBodyFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport default TableBodyFormat;\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const/name';\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableColgroupFormat extends Container {\r\n    optimize() {\r\n        super.optimize();\r\n        const next = this.next;\r\n        if (\r\n            next != null &&\r\n            next.prev === this &&\r\n            next.statics.blotName === this.statics.blotName &&\r\n            next.domNode.tagName === this.domNode.tagName\r\n        ) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n\r\n    findCol(index) {\r\n        const next = this.children.iterator();\r\n        let i = 0;\r\n        let cur;\r\n        while ((cur = next())) {\r\n            if (i === index) {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        return cur;\r\n    }\r\n}\r\nTableColgroupFormat.blotName = blotName.tableColGroup;\r\nTableColgroupFormat.tagName = 'colgroup';\r\nTableColgroupFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport default TableColgroupFormat;\r\n","import Quill from 'quill';\r\nconst Parchment = Quill.import('parchment');\r\nconst Delta = Quill.import('delta');\r\nconst BlockEmbed = Quill.import('blots/block/embed');\r\nconst Block = Quill.import('blots/block');\r\nconst Container = Quill.import('blots/container');\r\nconst icons = Quill.import('ui/icons');\r\n\r\nimport TableToolTip from './module/TableToolTip';\r\nimport TableSelection from './module/TableSelection';\r\nimport TableOperationMenu from './module/TableOperationMenu';\r\n\r\nimport ContainBlot from './blot/contain';\r\n\r\nimport TableCellFormat from './format/TableCellFormat';\r\nimport TableRowFormat from './format/TableRowFormat';\r\nimport TableFormat from './format/TableFormat';\r\nimport TableWrapper from './format/TableWrapperFormat';\r\nimport TableBodyFormat from './format/TableBodyFormat';\r\nimport TableColgroupFormat from './format/TableColgroupFormat';\r\nimport TableColFormat from './format/TableColFormat';\r\nimport TableCellInnerFormat from './format/TableCellInnerFormat';\r\n\r\nContainBlot.allowedChildren = [Block, BlockEmbed, Container];\r\n\r\nTableWrapper.allowedChildren = [TableFormat];\r\n\r\nTableFormat.allowedChildren = [TableBodyFormat, TableColgroupFormat];\r\nTableFormat.requiredContainer = TableWrapper;\r\n\r\nTableBodyFormat.allowedChildren = [TableRowFormat];\r\nTableBodyFormat.requiredContainer = TableFormat;\r\n\r\nTableColgroupFormat.allowedChildren = [TableColFormat];\r\nTableColgroupFormat.requiredContainer = TableFormat;\r\n\r\nTableRowFormat.allowedChildren = [TableCellFormat];\r\nTableRowFormat.requiredContainer = TableBodyFormat;\r\n\r\nTableCellFormat.allowedChildren = [TableCellInnerFormat];\r\n\r\nTableCellInnerFormat.defaultChild = 'block';\r\nTableCellInnerFormat.allowedChildren = [Block, BlockEmbed, Container];\r\n\r\nQuill.register(\r\n    {\r\n        [`formats/${ContainBlot.blotName}`]: ContainBlot,\r\n\r\n        [`formats/${TableCellInnerFormat.blotName}`]: TableCellInnerFormat,\r\n        [`formats/${TableCellFormat.blotName}`]: TableCellFormat,\r\n        [`formats/${TableRowFormat.blotName}`]: TableRowFormat,\r\n        [`formats/${TableBodyFormat.blotName}`]: TableBodyFormat,\r\n        [`formats/${TableFormat.blotName}`]: TableFormat,\r\n        [`formats/${TableWrapper.blotName}`]: TableWrapper,\r\n\r\n        [`formats/${TableColgroupFormat.blotName}`]: TableColgroupFormat,\r\n        [`formats/${TableColFormat.blotName}`]: TableColFormat,\r\n    },\r\n    true\r\n);\r\n\r\nimport { isFunction, randomId, showTableSelector } from './utils';\r\nimport { CREATE_TABLE } from './assets/const/event';\r\nimport TableSvg from './assets/icons/table.svg';\r\n\r\nclass TableModule {\r\n    constructor(quill, options) {\r\n        this.quill = quill;\r\n        this.options = options;\r\n\r\n        this.controlItem = null;\r\n        this.tableInsertSelectCloseHandler = null;\r\n\r\n        const toolbar = this.quill.getModule('toolbar');\r\n        if (toolbar) {\r\n            const control = toolbar.controls.find(([name]) => name === TableModule.toolName);\r\n            if (control) {\r\n                this.controlItem = control[1].parentNode.querySelector('.ql-table.ql-picker');\r\n                // 使用 button 时会在点击后立刻聚焦输入, 若有横向滚动条会时视口锁定到 focus, 使用 select 就不会\r\n                if (this.controlItem) {\r\n                    const label = this.controlItem.getElementsByClassName('ql-picker-label')?.[0];\r\n                    label.innerHTML = TableSvg;\r\n                } else {\r\n                    this.controlItem = control[1];\r\n                }\r\n            }\r\n            this.buildCustomSelect(this.options.customSelect);\r\n            toolbar.addHandler(TableModule.toolName, this.handleSelectDisplay.bind(this));\r\n        }\r\n        this.pasteTableHandler();\r\n\r\n        // 绑定 table 的选择事件\r\n        this.quill.root.addEventListener(\r\n            'click',\r\n            (evt) => {\r\n                const path = evt.path || (evt.composedPath && evt.composedPath());\r\n                if (!path || path.length <= 0) return;\r\n\r\n                const tableNode = path.filter((node) => {\r\n                    return (\r\n                        node.tagName && node.tagName.toUpperCase() === 'TABLE' && node.classList.contains('ql-table')\r\n                    );\r\n                })?.[0];\r\n                // 结束位置位处于表格内不显示\r\n                if (tableNode) {\r\n                    if (this.table === tableNode) return;\r\n                    if (this.table) this.hideTableTools();\r\n                    this.showTableTools(tableNode, quill, this.options.selection);\r\n                } else if (this.table) {\r\n                    this.hideTableTools();\r\n                }\r\n            },\r\n            false\r\n        );\r\n        // 绑定 table 的右键插入、删除事件\r\n        this.quill.root.addEventListener('contextmenu', (evt) => {\r\n            if (!this.table) return true;\r\n            evt.preventDefault();\r\n\r\n            const path = evt.path || (evt.composedPath && evt.composedPath());\r\n            if (!path || path.length <= 0) return;\r\n\r\n            const tableNode = path.filter(\r\n                (node) => node.tagName && node.tagName.toUpperCase() === 'TABLE' && node.classList.contains('ql-table')\r\n            )[0];\r\n            // 如果没有选中任何单元格，不显示右键菜单\r\n            if (tableNode && this.tableSelection?.selectedTds?.length) {\r\n                if (this.tableOperationMenu) this.tableOperationMenu = this.tableOperationMenu.destroy();\r\n\r\n                const rowNode = path.filter(\r\n                    (node) => node.tagName && node.tagName.toUpperCase() === 'TR' && node.getAttribute('data-row-id')\r\n                )[0];\r\n\r\n                const cellNode = path.filter(\r\n                    (node) => node.tagName && node.tagName.toUpperCase() === 'TD' && node.getAttribute('data-row-id')\r\n                )[0];\r\n\r\n                this.tableOperationMenu = new TableOperationMenu(\r\n                    {\r\n                        table: tableNode,\r\n                        row: rowNode,\r\n                        cell: cellNode,\r\n                        left: evt.pageX,\r\n                        top: evt.pageY,\r\n                    },\r\n                    quill,\r\n                    this.options.operationMenu\r\n                );\r\n            }\r\n        });\r\n\r\n        this.quill.theme.tableToolTip = new TableToolTip(this.quill, this.options.tableToolTip);\r\n    }\r\n\r\n    showTableTools(table, quill, options) {\r\n        this.table = table;\r\n        this.tableSelection = new TableSelection(table, quill, options);\r\n    }\r\n\r\n    hideTableTools() {\r\n        this.tableSelection && this.tableSelection.destroy();\r\n        this.tableOperationMenu && this.tableOperationMenu.destroy();\r\n        if (this.quill.theme.tableToolTip) {\r\n            this.quill.theme.tableToolTip.curTableId = null;\r\n            this.quill.theme.tableToolTip.hide();\r\n        }\r\n        this.tableSelection = null;\r\n        this.tableOperationMenu = null;\r\n        this.table = null;\r\n    }\r\n\r\n    // 粘贴表格处理\r\n    // 需要带上 col 的 width, 处理 px 和 %\r\n    pasteTableHandler() {\r\n        let tableId = randomId();\r\n        let rowId = randomId();\r\n        let colId = [];\r\n        let countColOver = false;\r\n        let cellCount = 0;\r\n\r\n        // 重新生成 table 里的所有 id, cellFormat 和 colFormat 进行 table 的添加\r\n        // addMatcher 匹配的是标签字符串, 不是 blotName, 只是这些 blotName 设置的是标签字符串\r\n        this.quill.clipboard.addMatcher(blotName.table, (node, delta) => {\r\n            // 添加 col\r\n            const tdWidth = Array.from(node.getElementsByTagName('tr')).reduce((pre, cur) => {\r\n                const w = Array.from(cur.getElementsByTagName('td')).map((td) => td.getBoundingClientRect().width);\r\n                if (w.length < pre.length) return pre;\r\n                return w.map((width, i) => Math.max(width, pre[i] ?? 0)).concat(pre.slice(w.length));\r\n            }, []);\r\n\r\n            const colDelta = new Delta();\r\n            colId.map((id, i) => {\r\n                colDelta.insert('\\n', {\r\n                    [blotName.tableCol]: {\r\n                        colId: id,\r\n                        tableId,\r\n                        width: this.options.fullWidth ? (1 / tdWidth.length) * 100 + '%' : tdWidth[i] ?? 150,\r\n                        full: this.options.fullWidth,\r\n                    },\r\n                });\r\n            });\r\n            tableId = randomId();\r\n            colId = [];\r\n            countColOver = false;\r\n            cellCount = 0;\r\n            return colDelta.concat(delta);\r\n        });\r\n\r\n        this.quill.clipboard.addMatcher(blotName.tableRow, (node, delta) => {\r\n            rowId = randomId();\r\n            countColOver = true;\r\n            return delta;\r\n        });\r\n\r\n        this.quill.clipboard.addMatcher(blotName.tableCell, (node, delta) => {\r\n            if (!countColOver) {\r\n                colId.push(randomId());\r\n            }\r\n            cellCount += 1;\r\n            if (delta.slice(delta.length() - 1).ops[0]?.insert !== '\\n') {\r\n                delta.insert('\\n');\r\n            }\r\n\r\n            return delta.compose(\r\n                new Delta().retain(delta.length(), {\r\n                    [blotName.tableCellInner]: {\r\n                        tableId,\r\n                        rowId,\r\n                        colId: colId[(cellCount - 1) % colId.length],\r\n                        rowspan: node.getAttribute('rowspan'),\r\n                        colspan: node.getAttribute('colspan'),\r\n                        style: node.getAttribute('style'),\r\n                    },\r\n                })\r\n            );\r\n        });\r\n    }\r\n\r\n    async buildCustomSelect(customSelect) {\r\n        if (!this.controlItem) return;\r\n\r\n        const dom = document.createElement('div');\r\n        dom.classList.add('ql-custom-select');\r\n        const selector = customSelect && isFunction(customSelect) ? await customSelect() : this.createSelect();\r\n        dom.appendChild(selector);\r\n        selector.addEventListener(CREATE_TABLE, (e) => {\r\n            const { row, col } = e.detail;\r\n            if (!row || !col) return;\r\n            this.insertTable(row, col);\r\n        });\r\n        this.controlItem.appendChild(dom);\r\n        this.controlItem.style.position = 'relative';\r\n    }\r\n\r\n    async handleSelectDisplay() {\r\n        this.controlItem.classList.add('ql-expanded');\r\n        this.controlItem.dataset.active = true;\r\n        window.removeEventListener('click', this.tableInsertSelectCloseHandler);\r\n        this.tableInsertSelectCloseHandler = (e) => {\r\n            const path = (e.composedPath && e.composedPath()) || e.path;\r\n            const i = path.findIndex((el) => el === this.controlItem);\r\n            if (i > 2 || i === -1) {\r\n                this.closeSelecte();\r\n            }\r\n        };\r\n        window.addEventListener('click', this.tableInsertSelectCloseHandler);\r\n    }\r\n\r\n    createSelect() {\r\n        return showTableSelector();\r\n    }\r\n\r\n    closeSelecte() {\r\n        this.controlItem.classList.remove('ql-expanded');\r\n        this.controlItem.dataset.active = false;\r\n        window.removeEventListener('click', this.tableInsertSelectCloseHandler);\r\n    }\r\n\r\n    // 以上为 toolbar table 按钮的选择生成器相关\r\n    // 以下为 table module 生成表格相关功能函数\r\n\r\n    insertTable(rows, columns) {\r\n        if (rows >= 100 || columns >= 100) {\r\n            throw new Error('Both rows and columns must be less than 100.');\r\n        }\r\n\r\n        this.quill.focus();\r\n        this.range = this.quill.getSelection();\r\n        const range = this.range;\r\n        if (range == null) return;\r\n        const currentBlot = this.quill.getLeaf(range.index)[0];\r\n\r\n        if (isForbidInTable(currentBlot)) {\r\n            throw new Error('Not supported nesting of ' + currentBlot.type + ' type object within a table.');\r\n        }\r\n\r\n        setTimeout(() => {\r\n            let delta = new Delta().retain(range.index);\r\n            delta.insert('\\n');\r\n            const tableId = randomId();\r\n            const colId = new Array(columns).fill(0).map(() => randomId());\r\n\r\n            let { width, paddingLeft, paddingRight } = getComputedStyle(this.quill.root);\r\n            width = parseInt(width);\r\n            paddingLeft = parseInt(paddingLeft);\r\n            paddingRight = parseInt(paddingRight);\r\n            width = width - paddingLeft - paddingRight;\r\n\r\n            delta = new Array(columns).fill('\\n').reduce((memo, text, i) => {\r\n                memo.insert(text, {\r\n                    [blotName.tableCol]: {\r\n                        width: !this.options.fullWidth ? Math.floor(width / columns) : (1 / columns) * 100 + '%',\r\n                        tableId,\r\n                        colId: colId[i],\r\n                        full: this.options.fullWidth,\r\n                    },\r\n                });\r\n                return memo;\r\n            }, delta);\r\n\r\n            // 直接生成 delta 的数据格式并插入\r\n            delta = new Array(rows).fill(0).reduce((memo) => {\r\n                const rowId = randomId();\r\n                return new Array(columns).fill('\\n').reduce((memo, text, i) => {\r\n                    memo.insert(text, {\r\n                        [blotName.tableCellInner]: {\r\n                            tableId,\r\n                            rowId,\r\n                            colId: colId[i],\r\n                            rowspan: 1,\r\n                            colspan: 1,\r\n                        },\r\n                    });\r\n                    return memo;\r\n                }, memo);\r\n            }, delta);\r\n            // console.log(columns, rows);\r\n            this.quill.updateContents(delta, Quill.sources.USER);\r\n            this.quill.setSelection(range.index + columns + columns * rows + 1, Quill.sources.API);\r\n            this.quill.focus();\r\n\r\n            this.closeSelecte();\r\n        }, 0);\r\n    }\r\n\r\n    findTable(blot) {\r\n        let cur = blot;\r\n        while (cur.statics.blotName !== blotName.table && cur !== null) {\r\n            cur = cur.parent;\r\n        }\r\n        return cur;\r\n    }\r\n\r\n    /*\r\n        基准行\r\n            向上: 选中 cell 的第一行\r\n            向下: 选中 cell 的最后一行\r\n        有无跨行单元格跨过选中基准行\r\n            找到所有 colId, 根据若遍历行内的某 colId 跨行至基准行, 则添加至新的 cell 中, 否则:\r\n                向上: 从当前行向前查找所有 cell, 若 cell rowspan + index > 基准行 index, 则此 cell rowspan + 1\r\n                向下: 从当前行向后查找所有 cell, 若 cell rowspan - index < 基准行 index, 则此 cell rowspan + 1\r\n            直到所有 colId 都遍历完, 则生成新的 cell 并插入到当前行的下方/上方\r\n     */\r\n    appendRow(isDown) {\r\n        const selectTds = this.tableSelection.selectedTds;\r\n        if (!selectTds.length) return;\r\n        const table = this.findTable(selectTds[0]);\r\n        const findTd = selectTds[isDown ? selectTds.length - 1 : 0];\r\n        let baseTr = Quill.find(findTd.domNode.parentNode.parentNode);\r\n        if (isDown) {\r\n            let baseTrRowspan = findTd.rowspan;\r\n            while (baseTrRowspan > 1) {\r\n                baseTr = baseTr.next;\r\n                baseTrRowspan -= 1;\r\n            }\r\n        }\r\n\r\n        const colIds = table.getColIds();\r\n        // 用于判断有哪些 col 已被遍历\r\n        const allColIds = new Set(colIds);\r\n        let foreachTr = isDown ? baseTr : baseTr.prev;\r\n        let newCellColId = new Array();\r\n        let indexDiff = 0;\r\n        // 第一行向上插入时 baseTr 是 null, 不需要判断\r\n        if (!foreachTr) {\r\n            allColIds.clear();\r\n            newCellColId = colIds;\r\n        }\r\n        while (allColIds.size) {\r\n            indexDiff += 1;\r\n            if (!foreachTr) {\r\n                break;\r\n            }\r\n            foreachTr.foreachCellInner((cell) => {\r\n                if (!allColIds.has(cell.colId)) return;\r\n                // 找到当前 cell 跨列的所有 colId\r\n                let curCellColIds = [cell.colId];\r\n                if (cell.colspan > 1) {\r\n                    let index = colIds.findIndex((id) => id === cell.colId);\r\n                    if (index === -1) {\r\n                        index = 0;\r\n                    }\r\n                    curCellColIds = colIds.slice(index, index + cell.colspan);\r\n                }\r\n                // 若跨行过基准行, 则更新 rowspan\r\n                if (cell.rowspan > indexDiff) {\r\n                    cell.rowspan += 1;\r\n                } else {\r\n                    // 未包含基准行, 要添加所有的包含的 col\r\n                    newCellColId.push(...curCellColIds);\r\n                }\r\n                curCellColIds.map((id) => allColIds.delete(id));\r\n            });\r\n            foreachTr = foreachTr.prev;\r\n        }\r\n        // 生成新的 cell\r\n        const tableId = table.tableId;\r\n        const newRowId = randomId();\r\n        const newRow = Parchment.create(blotName.tableRow, newRowId);\r\n        const insertColId = new Set(newCellColId);\r\n        // 保持 colId 顺序\r\n        for (let i = 0; i < colIds.length; i++) {\r\n            if (!insertColId.size) break;\r\n            if (insertColId.has(colIds[i])) {\r\n                const td = Parchment.create(blotName.tableCell, {\r\n                    rowId: newRowId,\r\n                    colId: colIds[i],\r\n                    rowspan: 1,\r\n                    colspan: 1,\r\n                });\r\n                const tdInner = Parchment.create(blotName.tableCellInner, {\r\n                    tableId,\r\n                    rowId: newRowId,\r\n                    colId: colIds[i],\r\n                    rowspan: 1,\r\n                    colspan: 1,\r\n                });\r\n                const block = Parchment.create('block');\r\n                block.appendChild(Parchment.create('break'));\r\n                tdInner.appendChild(block);\r\n                td.appendChild(tdInner);\r\n                newRow.appendChild(td);\r\n                insertColId.delete(colIds[i]);\r\n            }\r\n        }\r\n\r\n        baseTr.parent.insertBefore(newRow, isDown ? baseTr.next : baseTr);\r\n    }\r\n\r\n    /*\r\n        第一种情况选中行中没有跨行, 或跨行没有超出选中范围. \r\n            直接删除\r\n        第二种情况选中行内有跨行, 且跨行结束行在选中范围外.\r\n            遍历选中行, 找到所有跨行超出范围的 cell 记录 colId 与超出 rowspan, 之后在选中最后一行的后一行插入对应的 cell\r\n        第三种情况选中行之前有跨行, 且跨行结束行在选中范围内. \r\n            从选中行前一行开始遍历 cell, 找到所有的 col, 若 cell 跨行进入了选中范围(rowsapn - index > 0), rowspan = index\r\n        第四种情况选中行之前有跨行, 且跨行范围包含选中范围.\r\n            选中行前一行开始遍历 cell, 找到所有的 col, 若 cell 跨行进入了选中范围(rowsapn - index > 0), rowspan = rowspan - deleteTrs.length\r\n            \r\n    */\r\n    removeRow() {\r\n        if (!this.tableSelection.selectedTds.length) return;\r\n        const selectTds = this.tableSelection.selectedTds;\r\n        let [rowIds, rows] = selectTds.reduce(\r\n            (pre, td) => {\r\n                if (!pre[0].has(td.rowId)) {\r\n                    pre[0].add(td.rowId);\r\n                    pre[1].push(td.parent.parent);\r\n                }\r\n                return pre;\r\n            },\r\n            [new Set(), []]\r\n        );\r\n        rowIds = Array.from(rowIds);\r\n\r\n        const afterCell = new Map();\r\n        rows.map((tr) => {\r\n            tr.foreachCellInner((cell) => {\r\n                const rowIndexInSelected = rowIds.findIndex((id) => id === cell.rowId);\r\n                if (cell.rowspan > rowIds.length - rowIndexInSelected) {\r\n                    afterCell.set(cell.colId, {\r\n                        cell,\r\n                        rowspan: cell.rowspan - rowIds.length + rowIndexInSelected,\r\n                    });\r\n                }\r\n            });\r\n            tr.remove();\r\n        });\r\n\r\n        const table = this.findTable(selectTds[0]);\r\n        const tableId = table.tableId;\r\n        // 需要添加的跨行 cell\r\n        if (afterCell.size) {\r\n            const nextRow = rows[rows.length - 1].next;\r\n\r\n            const colIds = table.getColIds();\r\n            // 标记插入位置\r\n            let lastTd = null;\r\n            for (let i = 0; i < colIds.length; ) {\r\n                const td = nextRow.domNode.querySelector(`td[data-col-id=\"${colIds[i]}\"]`);\r\n                if (td) {\r\n                    const tdBlot = Quill.find(td);\r\n                    i += tdBlot.colspan;\r\n                    lastTd = tdBlot.next;\r\n                } else {\r\n                    const { cell, rowspan } = afterCell.get(colIds[i]);\r\n                    const newTd = Parchment.create(blotName.tableCell, {\r\n                        rowId: nextRow.rowId,\r\n                        colId: colIds[i],\r\n                        rowspan,\r\n                        colspan: cell.colspan,\r\n                    });\r\n                    const newTdInner = Parchment.create(blotName.tableCellInner, {\r\n                        tableId,\r\n                        rowId: nextRow.rowId,\r\n                        colId: colIds[i],\r\n                        rowspan,\r\n                        colspan: cell.colspan,\r\n                    });\r\n                    cell.moveChildren(newTdInner);\r\n                    newTd.appendChild(newTdInner);\r\n                    nextRow.insertBefore(newTd, lastTd);\r\n                    i += cell.colspan;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n        基准列\r\n            向左: 选中 cell 的第一列 id, index\r\n            向右: 选中 cell 的最后一列 id, index\r\n        找到所有 rowId, 开始遍历行内 cell 至(向右: 基准行 colId)(向左: 基准行前一行 colId) \r\n            有无单元格跨列超过基准列\r\n                // 因为 colspan 最少为 1, 判断时需要 + 1\r\n                向右: 若 colspan + i > 1 + index, 则 colspan + 1 \r\n                向左: 若 colspan + i > 1 + index, 则 colspan + 1 \r\n                colspan + 1 后判断是否跨行, 若跨行则之后 rowspan 行不进行循环\r\n                break\r\n            无 \r\n                找到 index 所在 cell，insertBefore\r\n    */\r\n    appendCol(isRight) {\r\n        if (!this.tableSelection.selectedTds.length) return;\r\n        const selectTds = this.tableSelection.selectedTds;\r\n        const table = this.findTable(selectTds[0]);\r\n        const cols = table.getCols();\r\n        const colIds = table.getColIds();\r\n        const rows = table.getRows();\r\n        const newColId = randomId();\r\n\r\n        let baseColId;\r\n        if (isRight) {\r\n            const lastTd = selectTds[selectTds.length - 1];\r\n            const i = colIds.findIndex((id) => id === lastTd.colId);\r\n            baseColId = colIds[i + lastTd.colspan - 1];\r\n        } else {\r\n            baseColId = selectTds[0].colId;\r\n        }\r\n        // 找到对应 col 下标，同时插入 col 元素\r\n        const baseColIndex = cols.findIndex((col) => {\r\n            if (col.colId === baseColId) {\r\n                const newCol = Parchment.create(blotName.tableCol, {\r\n                    width: !this.options.fullWidth ? 160 : null,\r\n                    tableId: table.tableId,\r\n                    colId: newColId,\r\n                });\r\n                col.parent.insertBefore(newCol, isRight ? col.next : col);\r\n            }\r\n            return col.colId === baseColId;\r\n        });\r\n        table.formatTableWidth();\r\n\r\n        const stopIndex = isRight ? baseColIndex + 1 : baseColIndex;\r\n        let skipRow = 0;\r\n        rows.map((tr) => {\r\n            let colspanIncrease = false;\r\n            let beforeCell = null;\r\n            tr.foreachCellInner((cell) => {\r\n                // 之前行有跨行且跨列的 cell 处理过, 直接跳过\r\n                if (skipRow > 0) {\r\n                    skipRow -= 1;\r\n                    colspanIncrease = true;\r\n                    return true;\r\n                }\r\n                const colIndexInSelected = colIds.findIndex((id) => id === cell.colId);\r\n                if (cell.colspan + colIndexInSelected > stopIndex) {\r\n                    beforeCell = cell.parent;\r\n\r\n                    // 当前 cell 跨列且不是终止位\r\n                    if (cell.colspan !== 1 && colIndexInSelected !== stopIndex) {\r\n                        cell.colspan += 1;\r\n                        colspanIncrease = true;\r\n                        skipRow = cell.rowspan - 1;\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n                if (colIndexInSelected >= stopIndex) {\r\n                    return true;\r\n                }\r\n            });\r\n\r\n            if (!colspanIncrease) {\r\n                const newTd = Parchment.create(blotName.tableCell, {\r\n                    rowId: tr.rowId,\r\n                    colId: newColId,\r\n                    rowspan: 1,\r\n                    colspan: 1,\r\n                });\r\n                const newTdInner = Parchment.create(blotName.tableCellInner, {\r\n                    tableId: table.tableId,\r\n                    rowId: tr.rowId,\r\n                    colId: newColId,\r\n                    rowspan: 1,\r\n                    colspan: 1,\r\n                });\r\n                newTd.appendChild(newTdInner);\r\n                tr.insertBefore(newTd, beforeCell);\r\n            }\r\n        });\r\n    }\r\n\r\n    /*\r\n        找到需要删除的所有 colId\r\n            获取所有 colIds, 遍历选中 cell, 找到 cell 在 colIds 下标, while cell 的 colspan, 将对应 colId 加入 set. 同时保存第一个 col 的 index (first)和最后一个 col 的 index(last)\r\n        遍历所有 row, 遍历 row 中的 cell, 直到 cell i == index\r\n            if i > first && i + colspan > last\r\n                cell.colspan - (last - i + 1)\r\n            if i < first && i + colsapn > last\r\n                cell.colspan - (last - first + 1)\r\n            if i < first && i + colspan > first && i + colspan <= last\r\n                cell.colspan - (i + colspan - first)\r\n            if i >= first && i + colspan <= last\r\n                cell.remove\r\n    */\r\n    removeCol() {\r\n        if (!this.tableSelection.selectedTds.length) return;\r\n        const tds = this.tableSelection.selectedTds;\r\n        const table = this.findTable(this.tableSelection.selectedTds[0]);\r\n        const colIds = table.getColIds();\r\n\r\n        const [firstSelectColIndex, lastSelectColIndex] = tds.reduce(\r\n            (n, cellInner) => {\r\n                const i = colIds.findIndex((id) => id === cellInner.colId);\r\n                return [Math.min(n[0], i), Math.max(n[1], i + cellInner.colspan - 1)];\r\n            },\r\n            [Infinity, -Infinity]\r\n        );\r\n\r\n        const rows = table.getRows();\r\n        rows.map((row) => {\r\n            let i = 0;\r\n            row.foreachCellInner((cell) => {\r\n                if (i > lastSelectColIndex) return true;\r\n                const colspan = cell.colspan;\r\n                if (i + colspan - 1 > lastSelectColIndex) {\r\n                    cell.colspan -= lastSelectColIndex - Math.max(i, firstSelectColIndex) + 1;\r\n                } else if (i < firstSelectColIndex && i + colspan - 1 >= firstSelectColIndex) {\r\n                    cell.colspan -= i + colspan - firstSelectColIndex;\r\n                } else if (i >= firstSelectColIndex) {\r\n                    cell.remove();\r\n                }\r\n\r\n                i += colspan;\r\n            });\r\n        });\r\n\r\n        const cols = table.getCols();\r\n        for (let i = 0; i < cols.length; i++) {\r\n            if (i >= firstSelectColIndex && i <= lastSelectColIndex) {\r\n                cols[i].remove();\r\n            }\r\n            if (i > lastSelectColIndex) {\r\n                break;\r\n            }\r\n        }\r\n        table.formatTableWidth();\r\n    }\r\n\r\n    removeTable() {\r\n        const selectTds = this.tableSelection.selectedTds;\r\n        if (!selectTds.length) return;\r\n        this.findTable(selectTds[0]).remove();\r\n    }\r\n\r\n    mergeCells() {\r\n        if (!this.tableSelection.selectedTds.length) return;\r\n        const selectTds = this.tableSelection.selectedTds;\r\n\r\n        // 计算需要合并的单元格的行列数\r\n        const counts = selectTds.reduce(\r\n            (pre, cellInner) => {\r\n                // 此单元格所在列需要跨的行数\r\n                const colId = cellInner.colId;\r\n                if (!pre[0][colId]) pre[0][colId] = 0;\r\n                pre[0][colId] += cellInner.rowspan;\r\n                // 此单元格所在行需要跨的列数\r\n                const rowId = cellInner.rowId;\r\n                if (!pre[1][rowId]) pre[1][rowId] = 0;\r\n                pre[1][rowId] += cellInner.colspan;\r\n                return pre;\r\n            },\r\n            [{}, {}]\r\n        );\r\n        // counts[0] 记录的是 colId 对应的跨行数\r\n        // counts[1] 记录的是 rowId 对应的跨列数\r\n        const rowCount = Math.max(...Object.values(counts[0]));\r\n        const colCount = Math.max(...Object.values(counts[1]));\r\n\r\n        // console.log(counts);\r\n        // console.log('row', rowCount);\r\n        // console.log('col', colCount);\r\n        // 注意清除 block 的 cache.detla\r\n        // 若不清除 cache.detla 导致显示正常但在获取 quill.getContents() 时会有原 cellInner 未改变的情况\r\n        // 防止这种情况直接 clone\r\n        const mergedCell = selectTds[0].clone();\r\n        selectTds[0].parent.appendChild(mergedCell);\r\n        mergedCell.colspan = colCount;\r\n        mergedCell.rowspan = rowCount;\r\n        for (let i = 0; i < selectTds.length; i++) {\r\n            selectTds[i].moveChildren(mergedCell);\r\n            selectTds[i].remove();\r\n        }\r\n        const table = this.findTable(selectTds[0]);\r\n        // 当合并后的单元格跨列等于 table 的列数, row 可以合并为 1\r\n        const tableColLength = table.getColIds().length;\r\n        if (tableColLength === colCount) {\r\n            mergedCell.rowspan = 1;\r\n        }\r\n        // 当合并后的单元格跨行等于 table 的行数, col 可以合并为 1\r\n        const tableRowLength = table.getRowIds().length;\r\n        if (tableRowLength <= rowCount) {\r\n            // 最终将 colspan 合并为 1, 所以要删除 colspan - 1 个 col\r\n            // 遍历到合并单元格的 colId 后开始进行删除\r\n            const tableCols = table.descendants(TableColFormat);\r\n            let deleteCount = mergedCell.colspan - 1;\r\n            let startDeleteIndex = null;\r\n            for (let i = 0; i < tableCols.length; i++) {\r\n                if (deleteCount <= 0) break;\r\n                // 先删再判断, 防止删除合并后的最后一个单元格\r\n                if (startDeleteIndex !== null) {\r\n                    // 若合并 col 中存在 width 为 null, 则合并后的 col 为 null\r\n                    if (tableCols[startDeleteIndex].width === null || tableCols[i].width === null) {\r\n                        tableCols[startDeleteIndex].width = null;\r\n                    } else {\r\n                        tableCols[startDeleteIndex].width += tableCols[i].width;\r\n                    }\r\n                    tableCols[i].remove();\r\n                    deleteCount -= 1;\r\n                }\r\n                if (tableCols[i].colId === mergedCell.colId) {\r\n                    startDeleteIndex = i;\r\n                }\r\n            }\r\n            mergedCell.colspan = 1;\r\n        }\r\n    }\r\n\r\n    setBackgroundColor(color) {\r\n        if (!this.tableSelection.selectedTds.length) return;\r\n        const selectTds = this.tableSelection.selectedTds;\r\n\r\n        selectTds.map((cellInner) => (cellInner.style = `background-color: ${color};`));\r\n    }\r\n}\r\n\r\n// 不可插入至表格的 blot\r\nexport const tableCantInsert = [blotName.tableCell];\r\nexport const isForbidInTableBlot = (blot) => {\r\n    return tableCantInsert.includes(blot.statics.blotName);\r\n};\r\n\r\nexport const isForbidInTable = (current) => {\r\n    return current && current.parent\r\n        ? isForbidInTableBlot(current.parent)\r\n            ? true\r\n            : isForbidInTable(current.parent)\r\n        : false;\r\n};\r\n\r\nimport { blotName, moduleName, toolName } from './assets/const/name';\r\nTableModule.moduleName = moduleName.table;\r\nTableModule.toolName = toolName.table;\r\n\r\nTableModule.createEventName = CREATE_TABLE;\r\nicons[TableModule.toolName] = TableSvg;\r\n\r\nexport default TableModule;\r\n"],"names":["blotName","moduleName","toolName","Container","Quill","import","Parchment","TableWrapperFormat","create","value","node","super","dataset","tableId","addEventListener","e","preventDefault","stopPropagation","ondrop","ondragover","dataTransfer","dropEffect","this","domNode","insertBefore","blot","ref","statics","children","head","allowedChildren","find","child","prev","parent","next","appendChild","optimize","tagName","moveChildren","remove","deleteAt","index","length","_document$querySelect","document","querySelector","concat","classList","add","className","scope","Scope","BLOCK_BLOT","CREATE_TABLE","randomId","Math","random","toString","slice","zindex","dialog","_ref","arguments","undefined","_ref$target","target","body","_ref$beforeClose","beforeClose","appendTo","createElement","style","zIndex","overlay","content","onclick","originOverflow","getComputedStyle","overflow","close","createInputItem","label","options","type","inputItem","inputLabel","innerText","inputInput","input","key","setAttribute","max","min","onfocus","onblur","errorTip","msg","contains","removeError","item","showTableCreator","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","row","col","box","inputContent","_createInputItem","rowItem","rowInput","rowErrorTip","_createInputItem2","colItem","colInput","colErrorTip","control","confirmBtn","cancelBtn","_args2","wrap","_context2","abrupt","Promise","resolve","reject","_callee","_context","Number","isNaN","stop","apply","css","rules","prop","getRelativeRect","targetRect","container","containerRect","getBoundingClientRect","x","scrollLeft","y","scrollTop","x1","width","y1","height","computeBoundaryFromRects","startRect","endRect","isFunction","val","TIP_HEIGHT","TableTooltip","constructor","quill","_defineProperty","rootLRelativeLeft","root","paddingLeft","tableTop","table","offsetTop","rootScrollTop","top","left","optionsMerge","tableWrapper","curTableId","focusTableChange","tableCols","scrollHandler","tableDisableToolHandlers","addContainer","ResizeObserver","entries","hide","observe","isMobile","window","handledEvents","down","move","up","listen","_this$options","_this$options2","tipHeight","disableToolNames","Array","from","Set","on","events","SELECTION_CHANGE","range","oldRange","source","_this$quill$scroll$de2","_slicedToArray","scroll","descendant","_tableWrapper$childre","disableFromTable","tbody","tail","_tbody$children","map","clearScrollEvent","addScrollEvent","scrollSync","bind","show","position","toggleDisableToolbarTools","toolbar","getModule","disableByTable","_step","_iterator","_createForOfIteratorHelper","s","n","done","handlers","err","f","enableFromTable","controls","_ref6","_document$querySelect2","_ref7","name","btn","includes","toLowerCase","dom","handle","push","i","_this$scrollHandler$i","removeEventListener","tableWrapperRect","innerHTML","full","join","Object","assign","bindDrag","setTimeout","srcollHide","tipColBreak","curColIndex","tableColHeads","getElementsByClassName","tableColHeadSeparators","handleMousemove","rect","tableWidth","resX","changedTouches","clientX","minWidth","MIN_PRE","maxRange","right","Infinity","minRange","floor","w","handleMouseup","parseInt","pre","oldWidthPre","last","totalWidthNextPre","parseFloat","removeChild","hideTableTools","handleMousedown","divDom","tableRect","el","ContainBlot","format","lastChild","formats","replace","defaultChild","TableCellInnerFormat","rowId","colId","rowspan","colspan","_style","_this$domNode$dataset","updateDelta","forEach","cache","_this$domNode$dataset2","tableBody","tr","td","TableCellFormat","getAttribute","getCellInner","descendants","_this$domNode$dataset3","cell","cellInner","forEachAt","offset","PRIMARY_COLOR","TableSelection","boundary","selectedTds","dragging","selectingHandler","mouseDownHandler","cellSelect","helpLinesInitial","clearSelection","closeHandler","TEXT_CHANGE","_this$options3","primaryColor","_this$scrollHandler$i2","button","closest","startTableId","mouseMoveHandler","endTd","endTdRect","parentNode","startTdRect","correctBoundary","computeSelectedTds","repositionHelpLines","startTd","blur","mouseUpHandler","reduce","selectedCells","tableCell","_getRelativeRect","_getRelativeRect2","scrollX","tableViewScrollLeft","display","destroy","off","MENU_ITEMS_DEFAULT","insertColumnLeft","text","handler","tableModule","appendCol","insertColumnRight","insertRowTop","appendRow","insertRowBottom","groupEnd","removeCol","removeRow","removeTable","mergeCell","mergeCells","setBackgroundColor","subTitle","TableOperationMenu","params","tableSelection","menuItems","destroyHandler","menuInitial","mount","_this$options4","_this$options$items","_this$options5","_this$options$items2","_this$options6","replaceItems","items","_ref8","_window","innerWidth","innerHeight","bottom","subTitleCreator","menuItemCreator","dividingCreator","dividing","title","_ref9","iconSrc","iconSpan","textSpan","call","TableRowFormat","foreachCellInner","func","cur","iterator","Block","TableColFormat","endsWith","hasAttribute","_this$domNode$dataset4","tableColgroup","_this$domNode$dataset5","ttableId","tcolId","html","outerHTML","TableFormat","formatTableWidth","colWidthFillTable","colgroup","colsWidth","sum","getRows","getRowIds","d","getCols","getColIds","TableBodyFormat","TableColgroupFormat","findCol","Delta","BlockEmbed","icons","TableWrapper","requiredContainer","register","TableModule","controlItem","tableInsertSelectCloseHandler","_this$controlItem$get","_ref10","TableSvg","buildCustomSelect","customSelect","addHandler","handleSelectDisplay","pasteTableHandler","evt","_path$filter","path","composedPath","tableNode","filter","toUpperCase","showTableTools","selection","_this$tableSelection","tableOperationMenu","rowNode","cellNode","pageX","pageY","operationMenu","theme","tableToolTip","TableToolTip","countColOver","cellCount","clipboard","addMatcher","delta","tdWidth","getElementsByTagName","_pre$i","colDelta","id","_tdWidth$i","insert","blotName_tableCol","fullWidth","_delta$slice$ops$","ops","compose","retain","blotName_tableCellInner","_this","_callee3","selector","_context3","t0","sent","createSelect","_e$detail","detail","insertTable","_this2","_callee4","_context4","active","findIndex","closeSelecte","showTableSelector","selectDom","selectBlock","r","c","selectItem","selectCustom","sendTableData","_ref4","dispatchEvent","CustomEvent","updateSelectBlockItems","_selectDom$dataset","querySelectorAll","childs","_e$target$dataset","removeAttribute","_selectDom$dataset2","then","_ref5","rows","columns","Error","focus","getSelection","currentBlot","getLeaf","isForbidInTable","fill","_getComputedStyle","paddingRight","memo","updateContents","sources","USER","setSelection","API","findTable","isDown","selectTds","findTd","baseTr","baseTrRowspan","colIds","allColIds","foreachTr","newCellColId","indexDiff","clear","size","has","curCellColIds","delete","newRowId","newRow","insertColId","tdInner","block","_selectTds$reduce","_selectTds$reduce2","rowIds","afterCell","Map","rowIndexInSelected","set","nextRow","lastTd","tdBlot","_afterCell$get","get","newTd","newTdInner","isRight","baseColId","cols","newColId","baseColIndex","newCol","stopIndex","skipRow","colspanIncrease","beforeCell","colIndexInSelected","tds","_tds$reduce","_tds$reduce2","firstSelectColIndex","lastSelectColIndex","counts","rowCount","values","colCount","mergedCell","clone","deleteCount","startDeleteIndex","color","tableCantInsert","isForbidInTableBlot","current","createEventName"],"mappings":"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"}