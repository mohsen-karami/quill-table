{"version":3,"file":"index.js","sources":["../src/assets/const/event.js","../src/assets/const/name.js","../src/utils/index.js","../src/module/TableOperationMenu.js","../src/format/TableBodyFormat.js","../src/blot/contain.js","../src/format/TableCellInnerFormat.js","../src/format/TableCellFormat.js","../src/format/TableColFormat.js","../src/format/TableColgroupFormat.js","../src/format/TableRowFormat.js","../src/format/TableFormat.js","../src/format/TableWrapperFormat.js","../src/format/rewrite/List.js","../src/module/TableSelection.js","../src/module/TableToolTip.js","../src/assets/const/vars.js","../src/index.js"],"sourcesContent":["export const CREATE_TABLE = 'createTable';\n","export const blotName = {\n    contain: 'contain',\n    tableWrapper: 'tableWrapper',\n    table: 'table',\n    tableColGroup: 'colgroup',\n    tableCol: 'col',\n    tableBody: 'tbody',\n    tableRow: 'tr',\n    tableCell: 'td',\n    tableCellInner: 'tableCellInner',\n};\nexport const moduleName = {\n    table: 'table',\n};\nexport const toolName = {\n    table: 'table',\n};\n","import { CREATE_TABLE } from '../assets/const';\n\nexport const randomId = () => Math.random().toString(36).slice(2);\n\nlet zindex = 8000;\nexport const dialog = ({ child, target = document.body, beforeClose = () => {} } = {}) => {\n    const appendTo = target;\n    const dialog = document.createElement('div');\n    dialog.classList.add('dialog');\n    dialog.style.zIndex = zindex;\n    const overlay = document.createElement('div');\n    overlay.classList.add('dialog_overlay');\n    dialog.appendChild(overlay);\n    if (child) {\n        const content = document.createElement('div');\n        content.classList.add('dialog_content');\n        content.appendChild(child);\n        overlay.appendChild(content);\n        content.onclick = (e) => {\n            e.stopPropagation();\n        };\n    }\n\n    const originOverflow = getComputedStyle(appendTo).overflow;\n    appendTo.style.overflow = 'hidden';\n\n    appendTo.appendChild(dialog);\n    const close = () => {\n        beforeClose();\n        dialog.remove();\n        appendTo.style.overflow = originOverflow;\n    };\n    dialog.onclick = close;\n    zindex += 1;\n\n    return { dialog, close };\n};\n\n/**\n * 创建一个带 label 的输入框\n *\n * @param {string} label - The label for the input item.\n * @param {object} options - The options for the input item.\n * @param {string} options.type - The type of the input.\n * @param {string} options.value - The initial value of the input.\n * @param {number} options.max - The maximum value allowed for the input.\n * @param {number} options.min - The minimum value allowed for the input.\n * @return {object} An object containing the input item, the input element, and an error tip function.\n */\nexport const createInputItem = (label, options) => {\n    options.type || (options.type = 'text');\n    options.value || (options.value = '');\n\n    const inputItem = document.createElement('div');\n    inputItem.classList.add('input_item');\n\n    if (label) {\n        const inputLabel = document.createElement('span');\n        inputLabel.classList.add('input_label');\n        inputLabel.innerText = label;\n        inputItem.appendChild(inputLabel);\n    }\n\n    const inputInput = document.createElement('div');\n    inputInput.classList.add('input_input');\n    const input = document.createElement('input');\n    for (const key in options) {\n        input.setAttribute(key, options[key]);\n    }\n    if (options.max || options.min) {\n        input.addEventListener('blur', () => {\n            if (options.max && options.max <= input.value) {\n                input.value = options.max;\n            }\n            if (options.min && options.min >= input.value) {\n                input.value = options.min;\n            }\n        });\n    }\n\n    inputInput.appendChild(input);\n    inputItem.appendChild(inputInput);\n\n    input.onfocus = () => {\n        inputInput.classList.add('focus');\n    };\n    input.onblur = () => {\n        inputInput.classList.remove('focus');\n    };\n\n    const errorTip = (msg) => {\n        if (inputInput.classList.contains('error')) {\n            inputInput.querySelector('.error_tip').innerText = msg;\n        } else {\n            const errorTip = document.createElement('span');\n            errorTip.classList.add('error_tip');\n            errorTip.innerText = msg;\n            inputInput.appendChild(errorTip);\n        }\n\n        inputInput.classList.add('error');\n\n        const removeError = () => {\n            inputInput.classList.remove('error');\n            errorTip.remove();\n        };\n        return { removeError };\n    };\n\n    return { item: inputItem, input, errorTip };\n};\n\n/**\n * 创建具有指定行数和列数的表格\n *\n * @param {number} row - The number of rows for the table (optional, default: 3)\n * @param {number} col - The number of columns for the table (optional, default: 3)\n * @return {Promise} A promise that resolves with an object containing the row and column values when the table creation is confirmed, or rejects if the dialog is closed without confirmation.\n */\nexport const showTableCreator = async (row = 3, col = 3) => {\n    const box = document.createElement('div');\n    box.classList.add('create_box');\n    const inputContent = document.createElement('div');\n    inputContent.classList.add('create_input_content');\n\n    const {\n        item: rowItem,\n        input: rowInput,\n        errorTip: rowErrorTip,\n    } = createInputItem('row', { type: 'number', value: row, max: 99 });\n    const {\n        item: colItem,\n        input: colInput,\n        errorTip: colErrorTip,\n    } = createInputItem('col', { type: 'number', value: col, max: 99 });\n\n    inputContent.appendChild(rowItem);\n    inputContent.appendChild(colItem);\n    box.appendChild(inputContent);\n\n    const control = document.createElement('div');\n    control.classList.add('create_control');\n\n    const confirmBtn = document.createElement('button');\n    confirmBtn.classList.add('create_control_btn', 'confirm');\n    confirmBtn.innerText = 'Confirm';\n\n    const cancelBtn = document.createElement('button');\n    cancelBtn.classList.add('create_control_btn', 'cancel');\n    cancelBtn.innerText = 'Cancel';\n\n    control.appendChild(confirmBtn);\n    control.appendChild(cancelBtn);\n    box.appendChild(control);\n\n    return new Promise((resolve, reject) => {\n        const { close } = dialog({ child: box, beforeClose: reject });\n\n        confirmBtn.onclick = async () => {\n            const row = Number(rowInput.value);\n            const col = Number(colInput.value);\n\n            if (isNaN(row) || row <= 0) {\n                return rowErrorTip('Invalid number');\n            }\n            if (isNaN(col) || col <= 0) {\n                return colErrorTip('Invalid number');\n            }\n            resolve({ row, col });\n            close();\n        };\n        cancelBtn.onclick = () => {\n            close();\n        };\n    });\n};\n\n/**\n * 显示表格选择器\n */\nexport const showTableSelector = (customButton) => {\n    const selectDom = document.createElement('div');\n    selectDom.classList.add('create_select');\n\n    const selectBlock = document.createElement('div');\n    selectBlock.classList.add('create_select_block');\n\n    for (let r = 0; r < 8; r++) {\n        for (let c = 0; c < 8; c++) {\n            const selectItem = document.createElement('div');\n            selectItem.classList.add('create_select_block_item');\n            selectItem.dataset.row = r + 1;\n            selectItem.dataset.col = c + 1;\n            selectBlock.appendChild(selectItem);\n        }\n    }\n\n    const selectCustom = document.createElement('div');\n    selectCustom.classList.add('create_select_custom');\n    selectCustom.innerText = customButton || '自定义行列数';\n\n    selectDom.appendChild(selectBlock);\n    selectDom.appendChild(selectCustom);\n\n    const sendTableData = ({ row, col }) => {\n        selectDom.dispatchEvent(new CustomEvent(CREATE_TABLE, { detail: { row: Number(row), col: Number(col) } }));\n    };\n    const updateSelectBlockItems = () => {\n        const { row, col } = selectDom.dataset;\n        [].forEach.call(selectBlock.querySelectorAll('.active'), (item) => {\n            item.classList.remove('active');\n        });\n        if (!row || !col) return;\n        const childs = Array.from(selectBlock.children);\n        for (let i = 0; i < childs.length; i++) {\n            if (childs[i].dataset.row > row && childs[i].dataset.col > col) {\n                return;\n            }\n            if (childs[i].dataset.row <= row && childs[i].dataset.col <= col) {\n                childs[i].classList.add('active');\n            } else {\n                childs[i].classList.remove('active');\n            }\n        }\n    };\n    selectBlock.addEventListener('mousemove', (e) => {\n        const { row, col } = e.target.dataset;\n        if (!row || !col) return;\n        selectDom.dataset.row = row;\n        selectDom.dataset.col = col;\n        updateSelectBlockItems();\n    });\n    selectBlock.addEventListener('mouseleave', (e) => {\n        selectDom.removeAttribute('data-row');\n        selectDom.removeAttribute('data-col');\n        updateSelectBlockItems();\n    });\n    selectBlock.addEventListener('click', () => {\n        const { row, col } = selectDom.dataset;\n        if (!row || !col) return;\n        sendTableData({ row, col });\n    });\n\n    selectCustom.addEventListener('click', () => {\n        showTableCreator().then(({ row, col }) => {\n            sendTableData({ row, col });\n        });\n    });\n\n    return selectDom;\n};\n\nexport function css(domNode, rules) {\n    if (typeof rules === 'object') {\n        for (let prop in rules) {\n            domNode.style[prop] = rules[prop];\n        }\n    }\n}\n\nexport function getRelativeRect(targetRect, container) {\n    let containerRect = container.getBoundingClientRect();\n\n    return {\n        x: targetRect.x - containerRect.x - container.scrollLeft,\n        y: targetRect.y - containerRect.y - container.scrollTop,\n        x1: targetRect.x - containerRect.x - container.scrollLeft + targetRect.width,\n        y1: targetRect.y - containerRect.y - container.scrollTop + targetRect.height,\n        width: targetRect.width,\n        height: targetRect.height,\n    };\n}\n\nexport function computeBoundaryFromRects(startRect, endRect) {\n    let x = Math.min(startRect.x, endRect.x, startRect.x + startRect.width - 1, endRect.x + endRect.width - 1);\n    let x1 = Math.max(startRect.x, endRect.x, startRect.x + startRect.width - 1, endRect.x + endRect.width - 1);\n    let y = Math.min(startRect.y, endRect.y, startRect.y + startRect.height - 1, endRect.y + endRect.height - 1);\n    let y1 = Math.max(startRect.y, endRect.y, startRect.y + startRect.height - 1, endRect.y + endRect.height - 1);\n\n    let width = x1 - x;\n    let height = y1 - y;\n\n    return { x, x1, y, y1, width, height };\n}\n\nexport function isString(val) {\n    return typeof val === 'string';\n}\nexport function isFunction(val) {\n    return typeof val === 'function';\n}\nexport function isUndefined(val) {\n    return val === undefined;\n}\nexport function isArray(val) {\n    return Array.isArray(val);\n}\n","import { css, isFunction, isString, isArray } from '../utils';\nimport { moduleName } from '../assets/const';\n\nconst MENU_ITEMS_DEFAULT = {\n    insertColumnLeft: {\n        text: '在左侧插入一列',\n        handler() {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.appendCol();\n            tableModule.hideTableTools();\n        },\n    },\n    insertColumnRight: {\n        text: '在右侧插入一列',\n        handler() {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.appendCol(true);\n            tableModule.hideTableTools();\n        },\n    },\n    insertRowTop: {\n        text: '在上方插入一行',\n        handler() {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.appendRow();\n            tableModule.hideTableTools();\n        },\n    },\n    insertRowBottom: {\n        text: '在下方插入一行',\n        groupEnd: true,\n        handler() {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.appendRow(true);\n            tableModule.hideTableTools();\n        },\n    },\n    removeCol: {\n        text: '删除所在列',\n        handler() {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.removeCol();\n            tableModule.hideTableTools();\n        },\n    },\n    removeRow: {\n        text: '删除所在行',\n        handler() {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.removeRow();\n            tableModule.hideTableTools();\n        },\n    },\n    removeTable: {\n        text: '删除表格',\n        groupEnd: true,\n        handler() {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.removeTable();\n            tableModule.hideTableTools();\n        },\n    },\n    mergeCell: {\n        text: '合并单元格',\n        groupEnd: true,\n        handler() {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.mergeCells();\n            tableModule.hideTableTools();\n        },\n    },\n    setBackgroundColor: {\n        text() {\n            const subTitle = document.createElement('span');\n            subTitle.innerText = '设置背景颜色';\n\n            const tableModule = this.quill.getModule(moduleName.table);\n            const input = document.createElement('input');\n            input.type = 'color';\n            input.addEventListener('click', (e) => {\n                e.stopPropagation();\n            });\n            const tempCells = tableModule.tableSelection.selectedTds;\n            input.addEventListener('input', () => {\n                tableModule.setStyle({ backgroundColor: input.value }, tempCells);\n            });\n            input.style.marginLeft = 'auto';\n            return [subTitle, input];\n        },\n    },\n    clearBackgroundColor: {\n        text: '清除背景颜色',\n        handler() {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.setStyle({ backgroundColor: null }, tableModule.tableSelection.selectedTds);\n        },\n    },\n    setBorderColor: {\n        text() {\n            const subTitle = document.createElement('span');\n            subTitle.innerText = '设置边框颜色';\n\n            const tableModule = this.quill.getModule(moduleName.table);\n            const input = document.createElement('input');\n            input.type = 'color';\n            input.addEventListener('click', (e) => {\n                e.stopPropagation();\n            });\n            const tempCells = tableModule.tableSelection.selectedTds;\n            input.addEventListener('input', () => {\n                tableModule.setStyle({ borderColor: input.value }, tempCells);\n            });\n            input.style.marginLeft = 'auto';\n            return [subTitle, input];\n        },\n    },\n    clearBorderColor: {\n        text: '清除边框颜色',\n        handler() {\n            const tableModule = this.quill.getModule(moduleName.table);\n            tableModule.setStyle({ borderColor: null }, tableModule.tableSelection.selectedTds);\n        },\n    },\n};\nconst MENU_MIN_HEIHGT = 150;\n\n/*\n    options = {\n        items: {\n           functionName: {\n                text: '显示文字',\n                handle() {},    // 触发事件\n                iconSrc: string,    // icon url\n                groupEnd: boolean, // 是否显示分隔线\n                subTitle: '显示子标题',\n            }\n        }\n    }\n*/\nexport class TableOperationMenu {\n    constructor(params, quill, options = {}) {\n        this.table = params.table;\n        this.quill = quill;\n        this.options = options;\n        const tableModule = this.quill.getModule(moduleName.table);\n        this.tableSelection = tableModule.tableSelection;\n        this.menuItems = {};\n        this.optionsMerge();\n\n        this.boundary = this.tableSelection.boundary;\n        this.selectedTds = this.tableSelection.selectedTds;\n\n        this.destroyHandler = this.destroy.bind(this);\n        this.menuInitial(params);\n\n        document.addEventListener('click', this.destroyHandler, false);\n    }\n\n    optionsMerge() {\n        if (this.options?.replaceItems) {\n            this.menuItems = this.options?.items ?? {};\n        } else {\n            this.menuItems = Object.assign({}, MENU_ITEMS_DEFAULT, this.options?.items ?? {});\n        }\n    }\n\n    setMenuPosition({ left, top }) {\n        const containerRect = this.quill.container.getBoundingClientRect();\n        const menuRect = this.domNode.getBoundingClientRect();\n        let resLeft = left - containerRect.left;\n        let resTop = top - containerRect.top;\n        if (resLeft + menuRect.width > containerRect.width) {\n            resLeft = containerRect.width - menuRect.width;\n        }\n        if (resTop + menuRect.height > containerRect.height) {\n            resTop = containerRect.height - menuRect.height;\n        }\n        Object.assign(this.domNode.style, {\n            left: `${resLeft}px`,\n            top: `${resTop}px`,\n        });\n    }\n\n    menuInitial({ table, row, cell, left, top }) {\n        this.domNode = document.createElement('div');\n        this.domNode.classList.add('ql-table-operation-menu');\n\n        css(this.domNode, {\n            position: 'absolute',\n            'min-height': `${MENU_MIN_HEIHGT}px`,\n        });\n\n        for (const name in this.menuItems) {\n            if (this.menuItems[name]) {\n                if (this.menuItems[name].subTitle) {\n                    this.domNode.appendChild(subTitleCreator(this.menuItems[name].subTitle));\n                }\n\n                this.domNode.appendChild(\n                    this.menuItemCreator(Object.assign({}, MENU_ITEMS_DEFAULT[name], this.menuItems[name]))\n                );\n\n                if (this.menuItems[name].groupEnd) {\n                    this.domNode.appendChild(dividingCreator());\n                }\n            }\n        }\n\n        this.quill.container.appendChild(this.domNode);\n        this.setMenuPosition({ left, top });\n        // create dividing line\n        function dividingCreator() {\n            const dividing = document.createElement('div');\n            dividing.classList.add('ql-table-operation-menu-dividing');\n            return dividing;\n        }\n\n        // create subtitle for menu\n        function subTitleCreator(title) {\n            const subTitle = document.createElement('div');\n            subTitle.classList.add('ql-table-operation-menu-subtitle');\n            subTitle.innerText = title;\n            return subTitle;\n        }\n    }\n\n    destroy() {\n        this.domNode.remove();\n        document.removeEventListener('click', this.destroyHandler, false);\n        return null;\n    }\n\n    menuItemCreator({ text, iconSrc, handler }) {\n        const node = document.createElement('div');\n        node.classList.add('ql-table-operation-menu-item');\n\n        if (iconSrc) {\n            const iconSpan = document.createElement('span');\n            iconSpan.classList.add('ql-table-operation-menu-icon');\n            iconSpan.innerHTML = iconSrc;\n            node.appendChild(iconSpan);\n        }\n\n        if (isString(text)) {\n            const textSpan = document.createElement('span');\n            textSpan.classList.add('ql-table-operation-menu-text');\n            textSpan.innerText = text;\n            node.appendChild(textSpan);\n        } else if (isFunction(text)) {\n            let nodes = text.call(this);\n            if (!isArray(nodes)) {\n                nodes = [nodes];\n            }\n            nodes.map((sub) => node.appendChild(sub));\n        }\n\n        isFunction(handler) && node.addEventListener('click', handler.bind(this), false);\n        return node;\n    }\n}\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableBodyFormat extends Container {\r\n    optimize() {\r\n        super.optimize();\r\n        const next = this.next;\r\n        if (\r\n            next != null &&\r\n            next.prev === this &&\r\n            next.statics.blotName === this.statics.blotName &&\r\n            next.domNode.tagName === this.domNode.tagName\r\n        ) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n\r\n    deleteAt(index, length) {\r\n        if (index === 0 && length === this.length()) {\r\n            this.parent.remove();\r\n        }\r\n        this.children.forEachAt(index, length, function (child, offset, length) {\r\n            child.deleteAt(offset, length);\r\n        });\r\n    }\r\n}\r\nTableBodyFormat.blotName = blotName.tableBody;\r\nTableBodyFormat.tagName = 'tbody';\r\nTableBodyFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport { TableBodyFormat };\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass ContainBlot extends Container {\r\n    static create() {\r\n        const node = super.create();\r\n        return node;\r\n    }\r\n\r\n    insertBefore(blot, ref) {\r\n        if (blot.statics.blotName == this.statics.blotName) {\r\n            super.insertBefore(blot.children.head, ref);\r\n        } else {\r\n            super.insertBefore(blot, ref);\r\n        }\r\n    }\r\n\r\n    format(name, value) {\r\n        this.children.tail.format(name, value);\r\n    }\r\n\r\n    replace(target) {\r\n        if (target.statics.blotName !== this.statics.blotName) {\r\n            const item = Parchment.create(this.statics.defaultChild);\r\n            target.moveChildren(item);\r\n            this.appendChild(item);\r\n        }\r\n        if (target.parent == null) return;\r\n        super.replace(target);\r\n    }\r\n}\r\n\r\nContainBlot.blotName = blotName.contain;\r\nContainBlot.tagName = 'contain';\r\nContainBlot.scope = Parchment.Scope.BLOCK_BLOT;\r\nContainBlot.defaultChild = 'block';\r\n\r\nexport { ContainBlot };\r\n","import Quill from 'quill';\nimport { ContainBlot } from '../blot/contain';\nimport { blotName } from '../assets/const';\nconst Parchment = Quill.import('parchment');\n\nclass TableCellInnerFormat extends ContainBlot {\n    static create(value) {\n        const { tableId, rowId, colId, rowspan, colspan, style } = value;\n        const node = super.create();\n        node.dataset.tableId = tableId;\n        node.dataset.rowId = rowId;\n        node.dataset.colId = colId;\n        node.dataset.rowspan = rowspan || 1;\n        node.dataset.colspan = colspan || 1;\n        node._style = style;\n        return node;\n    }\n\n    // 仅 Block 存在 cache, 存在 cache 时不会获取最新 delta, cache 还会保存父级 format(bubbleFormats 函数), 需要清除以获取最新 delta\n    clearDeltaCache() {\n        this.children.forEach((child) => {\n            child.cache = {};\n        });\n    }\n\n    get rowId() {\n        return this.domNode.dataset.rowId;\n    }\n    get colId() {\n        return this.domNode.dataset.colId;\n    }\n    get rowspan() {\n        return Number(this.domNode.dataset.rowspan);\n    }\n    set rowspan(value) {\n        this.parent && (this.parent.rowspan = value);\n        this.domNode.dataset.rowspan = value;\n        this.clearDeltaCache();\n    }\n    get colspan() {\n        return Number(this.domNode.dataset.colspan);\n    }\n    set colspan(value) {\n        this.parent && (this.parent.colspan = value);\n        this.domNode.dataset.colspan = value;\n        this.clearDeltaCache();\n    }\n    set style(value) {\n        this.parent.style = value;\n        this.domNode._style = this.parent.style;\n        this.clearDeltaCache();\n    }\n\n    replace(target) {\n        if (target.statics.blotName !== this.statics.blotName) {\n            const cloneTarget = target.clone();\n            target.moveChildren(cloneTarget);\n            this.appendChild(cloneTarget);\n            target.parent.insertBefore(this, target.next);\n            target.remove();\n        } else {\n            super.replace(target);\n        }\n    }\n\n    format(name, value) {\n        super.format(name, value);\n        this.clearDeltaCache();\n    }\n\n    formats() {\n        const { tableId, rowId, colId, rowspan, colspan } = this.domNode.dataset;\n        return {\n            [this.statics.blotName]: {\n                tableId,\n                rowId,\n                colId,\n                rowspan,\n                colspan,\n                style: this.domNode._style,\n            },\n        };\n    }\n\n    optimize() {\n        super.optimize();\n\n        const parent = this.parent;\n        // 父级非表格，则将当前 blot 放入表格中\n        const { tableId, colId, rowId, rowspan, colspan } = this.domNode.dataset;\n        if (parent != null && parent.statics.blotName != blotName.tableCell) {\n            const mark = Parchment.create('block');\n\n            this.parent.insertBefore(mark, this.next);\n            const tableWrapper = Parchment.create(blotName.tableWrapper, tableId);\n            const table = Parchment.create(blotName.table, tableId);\n            const tableBody = Parchment.create(blotName.tableBody);\n            const tr = Parchment.create(blotName.tableRow, rowId);\n            const td = Parchment.create(blotName.tableCell, {\n                tableId,\n                rowId,\n                colId,\n                rowspan,\n                colspan,\n                style: this.domNode._style,\n            });\n\n            td.appendChild(this);\n            tr.appendChild(td);\n            tableBody.appendChild(tr);\n            table.appendChild(tableBody);\n            tableWrapper.appendChild(table);\n\n            tableWrapper.replace(mark);\n        }\n\n        const next = this.next;\n        // cell 下有多个 cellInner 全部合并\n        if (next != null && next.prev === this && next.statics.blotName === this.statics.blotName) {\n            next.moveChildren(this);\n            next.remove();\n        }\n    }\n}\n\nTableCellInnerFormat.blotName = blotName.tableCellInner;\nTableCellInnerFormat.tagName = 'p';\nTableCellInnerFormat.className = 'ql-table-cell-inner';\n\nexport { TableCellInnerFormat };\n","import Quill from 'quill';\nimport { blotName } from '../assets/const';\nimport { TableCellInnerFormat } from './TableCellInnerFormat';\nconst Parchment = Quill.import('parchment');\nconst Container = Quill.import('blots/container');\n\nclass TableCellFormat extends Container {\n    static create(value) {\n        const { rowId, colId, rowspan, colspan, style } = value;\n        const node = super.create();\n        node.dataset.rowId = rowId;\n        node.dataset.colId = colId;\n        node.setAttribute('rowspan', rowspan || 1);\n        node.setAttribute('colspan', colspan || 1);\n        node.style.cssText = style;\n        return node;\n    }\n\n    get rowId() {\n        return this.domNode.dataset.rowId;\n    }\n    get colId() {\n        return this.domNode.dataset.colId;\n    }\n    get rowspan() {\n        return Number(this.domNode.getAttribute('rowspan'));\n    }\n    set rowspan(value) {\n        this.domNode.setAttribute('rowspan', value);\n    }\n    get colspan() {\n        return Number(this.domNode.getAttribute('colspan'));\n    }\n    set colspan(value) {\n        this.domNode.setAttribute('colspan', value);\n    }\n    get style() {\n        return this.domNode.style.cssText;\n    }\n    set style(value) {\n        Object.assign(this.domNode.style, value);\n    }\n\n    getCellInner() {\n        return this.descendants(TableCellInnerFormat)[0];\n    }\n\n    optimize() {\n        super.optimize();\n        const { colId, rowId } = this.domNode.dataset;\n        const next = this.next;\n        if (\n            next != null &&\n            next.prev === this &&\n            next.statics.blotName === this.statics.blotName &&\n            next.domNode.dataset.rowId === rowId &&\n            next.domNode.dataset.colId === colId\n        ) {\n            next.moveChildren(this);\n            next.remove();\n        }\n    }\n\n    deleteAt(index, length) {\n        if (index === 0 && length === this.length()) {\n            const cell = this.next || this.prev;\n            const cellInner = cell && cell.getCellInner();\n            if (cellInner) {\n                cellInner.colspan += this.colspan;\n            }\n            return this.remove();\n        }\n        this.children.forEachAt(index, length, function (child, offset, length) {\n            child.deleteAt(offset, length);\n        });\n    }\n}\n\nTableCellFormat.blotName = blotName.tableCell;\nTableCellFormat.tagName = 'td';\nTableCellFormat.className = 'ql-table-cell';\nTableCellFormat.scope = Parchment.Scope.BLOCK_BLOT;\n\nexport { TableCellFormat };\n","import Quill from 'quill';\nimport { blotName } from '../assets/const';\nconst Parchment = Quill.import('parchment');\nconst BlockEmbed = Quill.import('blots/block/embed');\nconst Block = Quill.import('blots/block');\nconst Container = Quill.import('blots/container');\nimport { ContainBlot } from '../blot/contain';\n\nclass TableColFormat extends ContainBlot {\n    static create(value) {\n        const { width, tableId, colId, full } = value;\n        const node = super.create();\n        node.setAttribute('width', `${parseFloat(width)}${full ? '%' : 'px'}`);\n        full && node.setAttribute('data-full', full);\n        node.dataset.tableId = tableId;\n        node.dataset.colId = colId;\n        node.setAttribute('contenteditable', false);\n        return node;\n    }\n\n    get width() {\n        const width = this.domNode.getAttribute('width');\n        return parseFloat(width);\n    }\n    set width(value) {\n        const width = parseFloat(value);\n        return this.domNode.setAttribute('width', `${width}${this.full ? '%' : 'px'}`);\n    }\n\n    get colId() {\n        return this.domNode.dataset.colId;\n    }\n\n    get full() {\n        return this.domNode.hasAttribute('data-full');\n    }\n\n    formats() {\n        const { tableId, colId } = this.domNode.dataset;\n        return {\n            [this.statics.blotName]: {\n                tableId,\n                colId,\n                width: this.domNode.getAttribute('width'),\n                full: this.domNode.hasAttribute('data-full'),\n            },\n        };\n    }\n\n    optimize() {\n        super.optimize();\n\n        const parent = this.parent;\n        if (parent != null && parent.statics.blotName != blotName.tableColGroup) {\n            const mark = Parchment.create('block');\n            this.parent.insertBefore(mark, this.next);\n\n            const tableWrapper = Parchment.create(blotName.tableWrapper, this.domNode.dataset.tableId);\n            const table = Parchment.create(blotName.table, this.domNode.dataset.tableId);\n\n            this.full && (table.full = true);\n\n            const tableColgroup = Parchment.create(blotName.tableColGroup);\n\n            tableColgroup.appendChild(this);\n            table.appendChild(tableColgroup);\n            tableWrapper.appendChild(table);\n\n            tableWrapper.replace(mark);\n        }\n        const next = this.next;\n        const { tableId: ttableId, colId: tcolId } = this.domNode.dataset;\n        if (\n            next != null &&\n            next.statics.blotName === this.statics.blotName &&\n            next.domNode.tagName === this.domNode.tagName &&\n            next.domNode.dataset.tableId === ttableId &&\n            next.domNode.dataset.colId === tcolId\n        ) {\n            next.moveChildren(this);\n            next.remove();\n        }\n    }\n}\nTableColFormat.blotName = blotName.tableCol;\nTableColFormat.tagName = 'col';\nTableColFormat.scope = Parchment.Scope.BLOCK_BLOT;\n\nexport { TableColFormat };\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableColgroupFormat extends Container {\r\n    optimize() {\r\n        super.optimize();\r\n        const next = this.next;\r\n        if (\r\n            next != null &&\r\n            next.prev === this &&\r\n            next.statics.blotName === this.statics.blotName &&\r\n            next.domNode.tagName === this.domNode.tagName\r\n        ) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n\r\n    findCol(index) {\r\n        const next = this.children.iterator();\r\n        let i = 0;\r\n        let cur;\r\n        while ((cur = next())) {\r\n            if (i === index) {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        return cur;\r\n    }\r\n}\r\nTableColgroupFormat.blotName = blotName.tableColGroup;\r\nTableColgroupFormat.tagName = 'colgroup';\r\nTableColgroupFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport { TableColgroupFormat };\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nimport { TableCellInnerFormat } from './TableCellInnerFormat';\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableRowFormat extends Container {\r\n    static create(value) {\r\n        const node = super.create();\r\n        node.dataset.rowId = value;\r\n        return node;\r\n    }\r\n\r\n    optimize() {\r\n        super.optimize();\r\n        const next = this.next;\r\n        if (\r\n            next != null &&\r\n            next.prev === this &&\r\n            next.statics.blotName === this.statics.blotName &&\r\n            next.domNode.dataset.rowId === this.domNode.dataset.rowId\r\n        ) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n\r\n    get rowId() {\r\n        return this.domNode.dataset.rowId;\r\n    }\r\n\r\n    foreachCellInner(func) {\r\n        const next = this.children.iterator();\r\n        let i = 0;\r\n        let cur;\r\n        while ((cur = next())) {\r\n            const [tableCell] = cur.descendants(TableCellInnerFormat);\r\n            if (func(tableCell, i++)) break;\r\n        }\r\n    }\r\n}\r\n\r\nTableRowFormat.blotName = blotName.tableRow;\r\nTableRowFormat.tagName = 'tr';\r\nTableRowFormat.className = 'ql-table-row';\r\nTableRowFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport { TableRowFormat };\r\n","import Quill from 'quill';\nimport { blotName } from '../assets/const';\nimport { TableRowFormat } from './TableRowFormat';\nimport { TableColFormat } from './TableColFormat';\nconst Container = Quill.import('blots/container');\nconst Parchment = Quill.import('parchment');\n\nclass TableFormat extends Container {\n    constructor(domNode, value) {\n        super(domNode, value);\n\n        this.formatTableWidth();\n    }\n\n    static create(value) {\n        const node = super.create();\n\n        node.dataset.tableId = value;\n        node.classList.add('ql-table');\n        node.setAttribute('cellpadding', 0);\n        node.setAttribute('cellspacing', 0);\n\n        return node;\n    }\n\n    colWidthFillTable() {\n        if (this.full) return;\n        const colgroup = this.children.head;\n        if (!colgroup || colgroup.statics.blotName !== blotName.tableColGroup) return;\n        const colsWidth = colgroup.children.reduce((sum, col) => col.width + sum, 0);\n        if (colsWidth === 0 || isNaN(colsWidth) || this.full) return null;\n        this.domNode.style.width = colsWidth + 'px';\n        return colsWidth;\n    }\n\n    formatTableWidth() {\n        setTimeout(() => {\n            this.colWidthFillTable();\n        }, 0);\n    }\n\n    get tableId() {\n        return this.domNode.dataset.tableId;\n    }\n    get full() {\n        return this.domNode.hasAttribute('data-full');\n    }\n    set full(value) {\n        this.domNode[value ? 'setAttribute' : 'removeAttribute']('data-full', '');\n    }\n\n    getRows() {\n        return this.descendants(TableRowFormat);\n    }\n    getRowIds() {\n        return this.getRows().map((d) => d.rowId);\n    }\n\n    getCols() {\n        return this.descendants(TableColFormat);\n    }\n    getColIds() {\n        return this.getCols().map((d) => d.colId);\n    }\n\n    optimize() {\n        super.optimize();\n        let next = this.next;\n        if (\n            next != null &&\n            next.prev === this &&\n            next.statics.blotName === this.statics.blotName &&\n            next.domNode.tagName === this.domNode.tagName &&\n            next.domNode.dataset.tableId === this.domNode.dataset.tableId\n        ) {\n            next.moveChildren(this);\n            next.remove();\n        }\n    }\n}\n\nTableFormat.blotName = blotName.table;\nTableFormat.tagName = 'table';\nTableFormat.scope = Parchment.Scope.BLOCK_BLOT;\n\nexport { TableFormat };\n","import Quill from 'quill';\nimport { blotName } from '../assets/const';\nconst Container = Quill.import('blots/container');\nconst Parchment = Quill.import('parchment');\n\nclass TableWrapperFormat extends Container {\n    static create(value) {\n        const node = super.create();\n\n        node.dataset.tableId = value;\n\n        node.addEventListener(\n            'dragstart',\n            (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n            },\n            true\n        );\n        // 不允许拖拽进 table\n        node.ondrop = (e) => {\n            e.preventDefault();\n        };\n        // 修改拖拽进入时的鼠标样式\n        node.ondragover = (e) => {\n            e.preventDefault();\n            e.dataTransfer.dropEffect = 'none';\n        };\n        return node;\n    }\n\n    get tableId() {\n        return this.domNode.dataset.tableId;\n    }\n\n    insertBefore(blot, ref) {\n        if (blot.statics.blotName == this.statics.blotName) {\n            // 合并\n            super.insertBefore(blot.children.head, ref);\n        } else if (this.statics.allowedChildren.find((child) => child.blotName === blot.statics.blotName)) {\n            // 允许子 blot\n            super.insertBefore(blot, ref);\n        } else {\n            // 非允许子 blot, ref 为 null 是插入头, 否则插入尾\n            if (ref) {\n                this.prev ? this.prev.insertBefore(blot, null) : this.parent.insertBefore(blot, this);\n            } else {\n                this.next ? this.next.insertBefore(blot, ref) : this.parent.appendChild(blot);\n            }\n        }\n    }\n\n    optimize() {\n        super.optimize();\n        let next = this.next;\n        if (\n            next != null &&\n            next.prev === this &&\n            next.statics.blotName === this.statics.blotName &&\n            next.domNode.tagName === this.domNode.tagName &&\n            next.domNode.dataset.tableId === this.domNode.dataset.tableId\n        ) {\n            next.moveChildren(this);\n            next.remove();\n        }\n    }\n\n    deleteAt(index, length) {\n        super.deleteAt(index, length);\n        // 删除 table 时隐藏当前 table 的 tooltip\n        document.querySelector(`.ql-table-tooltip[data-table-id=\"${this.tableId}\"]`)?.classList?.add('ql-hidden');\n    }\n}\nTableWrapperFormat.blotName = blotName.tableWrapper;\nTableWrapperFormat.tagName = 'p';\nTableWrapperFormat.className = 'ql-table-wrapper';\nTableWrapperFormat.scope = Parchment.Scope.BLOCK_BLOT;\n\nexport { TableWrapperFormat };\n","import Quill from 'quill';\nimport { blotName } from '../../assets/const';\nconst Parchment = Quill.import('parchment');\nconst ListItem = Quill.import('formats/list/item');\n\nclass ListItemRewrite extends ListItem {\n    replaceWith(name, value) {\n        this.parent.isolate(this.offset(this.parent), this.length());\n        if (name === this.parent.statics.blotName) {\n            this.parent.replaceWith(name, value);\n            return this;\n        } else {\n            if (name === blotName.tableCellInner) {\n                let replacement = typeof name === 'string' ? Parchment.create(name, value) : name;\n                replacement.replace(this.parent);\n                this.attributes.copy(replacement);\n                return replacement;\n            }\n            return super.replaceWith(name, value);\n        }\n    }\n}\nexport { ListItemRewrite };\n","// 以 ql-better-table 的 table-selection.js 为修改基础\n\nimport Quill from 'quill';\nimport { TableCellFormat } from '../format';\nimport { css, getRelativeRect, computeBoundaryFromRects } from '../utils';\n\nlet PRIMARY_COLOR = '#0589f3';\nconst ERROR_LIMIT = 2;\n\n/*\n\toptions = {\n\t\tprimaryColor: Hex color code\n\t}\n*/\nexport class TableSelection {\n    constructor(table, quill, options = {}) {\n        if (!table) return null;\n        this.table = table;\n        this.quill = quill;\n        this.options = options;\n        this.optionsMerge();\n\n        this.boundary = {};\n        // 选中的 cell\n        this.selectedTds = [];\n        this.dragging = false;\n        this.selectingHandler = this.mouseDownHandler.bind(this);\n        this.cellSelect = null; // selection 显示边框\n        this.scrollHandler = [];\n        this.helpLinesInitial();\n\n        const resizeObserver = new ResizeObserver((entries) => {\n            this.clearSelection();\n        });\n        resizeObserver.observe(this.quill.root);\n\n        this.quill.root.addEventListener('mousedown', this.selectingHandler, false);\n        this.closeHandler = this.clearSelection.bind(this);\n        this.quill.on(Quill.events.TEXT_CHANGE, this.closeHandler);\n    }\n\n    optionsMerge() {\n        this.options?.primaryColor && (PRIMARY_COLOR = this.options.primaryColor);\n    }\n\n    addScrollEvent(dom, handle) {\n        dom.addEventListener('scroll', handle);\n        this.scrollHandler.push([dom, handle]);\n    }\n\n    clearScrollEvent() {\n        for (let i = 0; i < this.scrollHandler.length; i++) {\n            let [dom, handle] = this.scrollHandler[i];\n            dom.removeEventListener('scroll', handle);\n        }\n        this.scrollHandler = [];\n    }\n\n    // 初始化边框 dom\n    helpLinesInitial() {\n        this.cellSelect = this.quill.addContainer('ql-table-selection_line');\n        css(this.cellSelect, {\n            'border-color': PRIMARY_COLOR,\n        });\n    }\n\n    mouseDownHandler(e) {\n        if (e.button !== 0 || !e.target.closest('.ql-table')) return;\n        const startTableId = e.target.closest('.ql-table').dataset.tableId;\n\n        const mouseMoveHandler = (e) => {\n            // 根据 tableId 判断是否跨表格，跨表格不计算\n            if (\n                e.button !== 0 ||\n                !e.target.closest('.ql-table') ||\n                e.target.closest('.ql-table').dataset.tableId !== startTableId\n            )\n                return;\n\n            const endTd = e.target.closest('td[data-row-id]');\n            const endTdRect = getRelativeRect(endTd.getBoundingClientRect(), this.quill.root.parentNode);\n            this.boundary = computeBoundaryFromRects(startTdRect, endTdRect);\n            this.correctBoundary();\n            this.selectedTds = this.computeSelectedTds();\n            this.repositionHelpLines();\n\n            if (startTd !== endTd) {\n                this.quill.blur();\n            }\n        };\n\n        const mouseUpHandler = (e) => {\n            document.body.removeEventListener('mousemove', mouseMoveHandler, false);\n            document.body.removeEventListener('mouseup', mouseUpHandler, false);\n            this.dragging = false;\n        };\n\n        document.body.addEventListener('mousemove', mouseMoveHandler, false);\n        document.body.addEventListener('mouseup', mouseUpHandler, false);\n\n        const startTd = e.target.closest('td[data-row-id]');\n        const startTdRect = getRelativeRect(startTd.getBoundingClientRect(), this.quill.root.parentNode);\n        this.dragging = true;\n        this.boundary = computeBoundaryFromRects(startTdRect, startTdRect);\n        this.correctBoundary();\n        this.selectedTds = this.computeSelectedTds();\n        this.repositionHelpLines();\n\n        this.addScrollEvent(this.table.parentNode, () => {\n            // 处理 boundary, 使滚动时 left 等跟随滚动\n            this.repositionHelpLines();\n        });\n\n        const srcollHide = () => {\n            this.clearSelection();\n            this.quill.root.removeEventListener('scroll', srcollHide);\n        };\n        this.quill.root.addEventListener('scroll', srcollHide);\n    }\n\n    computeSelectedTds() {\n        const tableContainer = Quill.find(this.table);\n        // 选中范围计算任然使用 tableCell, tableCellInner 可滚动, width 会影响\n        const tableCells = tableContainer.descendants(TableCellFormat);\n\n        return tableCells.reduce((selectedCells, tableCell) => {\n            let { x, y, width, height } = getRelativeRect(\n                tableCell.domNode.getBoundingClientRect(),\n                this.quill.root.parentNode\n            );\n            let isCellIncluded =\n                x + ERROR_LIMIT >= this.boundary.x &&\n                x - ERROR_LIMIT + width <= this.boundary.x1 &&\n                y + ERROR_LIMIT >= this.boundary.y &&\n                y - ERROR_LIMIT + height <= this.boundary.y1;\n\n            if (isCellIncluded) {\n                selectedCells.push(tableCell.getCellInner());\n            }\n\n            return selectedCells;\n        }, []);\n    }\n\n    correctBoundary() {\n        // 边框计算任然使用 tableCell, 有 padding 会影响\n        const tableContainer = Quill.find(this.table);\n        const tableCells = tableContainer.descendants(TableCellFormat);\n\n        tableCells.forEach((tableCell) => {\n            const { x, y, width, height } = getRelativeRect(\n                tableCell.domNode.getBoundingClientRect(),\n                this.quill.root.parentNode\n            );\n\n            const isCellIntersected =\n                ((x + ERROR_LIMIT >= this.boundary.x && x + ERROR_LIMIT <= this.boundary.x1) ||\n                    (x - ERROR_LIMIT + width >= this.boundary.x && x - ERROR_LIMIT + width <= this.boundary.x1)) &&\n                ((y + ERROR_LIMIT >= this.boundary.y && y + ERROR_LIMIT <= this.boundary.y1) ||\n                    (y - ERROR_LIMIT + height >= this.boundary.y && y - ERROR_LIMIT + height <= this.boundary.y1));\n\n            if (isCellIntersected) {\n                this.boundary = computeBoundaryFromRects(this.boundary, { x, y, width, height });\n            }\n        });\n        this.scrollX = this.table.parentNode.scrollLeft;\n    }\n    // 边框样式显示\n    repositionHelpLines() {\n        const tableViewScrollLeft = this.table.parentNode.scrollLeft;\n        const scrollTop = this.quill.root.parentNode.scrollTop;\n\n        css(this.cellSelect, {\n            display: 'block',\n            left: `${this.boundary.x + (this.scrollX - tableViewScrollLeft) - 1}px`,\n            top: `${scrollTop * 2 + this.boundary.y}px`,\n            width: `${this.boundary.width + 1}px`,\n            height: `${this.boundary.height + 1}px`,\n        });\n    }\n\n    clearSelection() {\n        this.boundary = {};\n        this.selectedTds = [];\n\n        this.cellSelect &&\n            css(this.cellSelect, {\n                display: 'none',\n            });\n        this.clearScrollEvent();\n    }\n\n    destroy() {\n        this.clearSelection();\n        this.cellSelect.remove();\n        this.cellSelect = null;\n        this.clearScrollEvent();\n\n        this.quill.root.removeEventListener('mousedown', this.selectingHandler, false);\n        this.quill.off(Quill.events.TEXT_CHANGE, this.closeHandler);\n\n        return null;\n    }\n}\n","import Quill from 'quill';\nimport { TableWrapperFormat } from '../format';\nimport { css, getRelativeRect } from '../utils';\nimport { blotName, toolName, CELL_MIN_WIDTH, CELL_MIN_PRE } from '../assets/const';\nlet TIP_HEIGHT = 12;\n/*\n\toptions = {\n\t\ttipHeight: 12,\t// tooltip height\n\t\tdisableToolNames: [],\t// 表格内禁用项， toolbar 的 name\n\t}\n*/\nexport class TableTooltip {\n    constructor(quill, options = {}) {\n        this.quill = quill;\n        this.options = options;\n        this.optionsMerge();\n\n        this.tableDisableToolHandlers = {};\n        this.tableWrapper = null;\n        this.table = null;\n        this.curTableId = '';\n        this.focusTableChange = false;\n        this.tableCols = [];\n        this.scrollHandler = [];\n\n        this.root = this.quill.addContainer('ql-table-tooltip');\n        this.root.style.height = TIP_HEIGHT + 'px';\n\n        const resizeObserver = new ResizeObserver((entries) => {\n            this.hide();\n            this.focusTableChange = true;\n            this.curTableId = '';\n        });\n        resizeObserver.observe(this.quill.root);\n\n        this.isMobile = 'ontouchstart' in window;\n        this.handledEvents = this.isMobile\n            ? { down: 'touchstart', move: 'touchmove', up: 'touchend' }\n            : { down: 'mousedown', move: 'mousemove', up: 'mouseup' };\n\n        this.hide();\n        this.listen();\n    }\n\n    optionsMerge() {\n        this.options?.tipHeight && (TIP_HEIGHT = this.options.tipHeight);\n        TableTooltip.disableToolNames = Array.from(\n            new Set([...TableTooltip.disableToolNames, ...(this.options?.disableToolNames || [])])\n        );\n    }\n\n    listen() {\n        this.quill.on(Quill.events.EDITOR_CHANGE, (eventName) => {\n            if (eventName === Quill.events.TEXT_CHANGE) {\n                return this.hide();\n            }\n            const range = this.quill.getSelection();\n\n            if (range == null) {\n                this.hide();\n                this.enableFromTable();\n                return;\n            }\n            const [tableWrapper] = this.quill.scroll.descendant(TableWrapperFormat, range.index);\n            if (tableWrapper !== null) {\n                // 此时在 table 内, 禁用部分功能\n                this.disableFromTable();\n\n                this.tableWrapper = tableWrapper;\n                this.table = tableWrapper.children.head;\n                // 找到 tbody\n                let tbody = tableWrapper.children.tail;\n                while (tbody && tbody.statics.blotName !== blotName.tableBody) {\n                    tbody = tbody.children?.tail;\n                }\n\n                const tableCols = tableWrapper.children.head?.children?.head;\n                if (tableCols.statics.blotName === blotName.tableColGroup && tableCols.children.length) {\n                    this.tableCols = tableCols.children.map((col) => col);\n                } else {\n                    this.tableCols = [];\n                }\n\n                let curTableId = tableWrapper.children.head.tableId;\n                if (this.curTableId !== curTableId) {\n                    this.clearScrollEvent();\n                    this.focusTableChange = true;\n                    // 表格滚动同步事件\n                    this.addScrollEvent(\n                        this.tableWrapper.domNode,\n                        this.scrollSync.bind(this, this.tableWrapper.domNode)\n                    );\n                }\n                this.curTableId = curTableId;\n\n                this.show();\n                this.position();\n                return;\n            } else {\n                this.enableFromTable();\n            }\n            this.hide();\n        });\n    }\n\n    disableFromTable() {\n        this.toggleDisableToolbarTools('add');\n\n        const toolbar = this.quill.getModule('toolbar');\n        // 防止重复触发覆盖保存事件\n        if (toolbar.disableByTable) return;\n        toolbar.disableByTable = true;\n        // 去除 toolbar 对应 module 的 handler 事件, 保存在 tableDisableToolHandlers\n        for (const toolName of TableTooltip.disableToolNames) {\n            this.tableDisableToolHandlers[toolName] = toolbar.handlers[toolName];\n            // 不要设置为 null\n            toolbar.handlers[toolName] = () => {};\n        }\n    }\n\n    enableFromTable() {\n        this.toggleDisableToolbarTools('remove');\n\n        const toolbar = this.quill.getModule('toolbar');\n        // 根据 tableDisableToolHandlers 恢复 handler\n        for (const toolName in this.tableDisableToolHandlers) {\n            toolbar.handlers[toolName] = this.tableDisableToolHandlers[toolName];\n        }\n        this.tableDisableToolHandlers = {};\n        toolbar.disableByTable = false;\n    }\n\n    /**\n     * Toggles the disable state of toolbar tools.\n     *\n     * @param {'add' | 'remove'} type - The type of toggle action to perform.\n     */\n    toggleDisableToolbarTools(type) {\n        const toolbar = this.quill.getModule('toolbar');\n        toolbar.controls.map(([name, btn]) => {\n            if (TableTooltip.disableToolNames.includes(name)) {\n                if (btn.tagName.toLowerCase() === 'select') {\n                    toolbar.container\n                        .querySelector(`.ql-picker.${btn.className}`)\n                        ?.classList[type]('ql-disabled-table');\n                } else {\n                    btn.classList[type]('ql-disabled-table');\n                }\n            }\n        });\n    }\n\n    scrollSync(dom, e) {\n        this.root.scrollLeft = dom.scrollLeft;\n    }\n\n    addScrollEvent(dom, handle) {\n        dom.addEventListener('scroll', handle);\n        this.scrollHandler.push([dom, handle]);\n    }\n\n    clearScrollEvent() {\n        for (let i = 0; i < this.scrollHandler.length; i++) {\n            const [dom, handle] = this.scrollHandler[i];\n            dom.removeEventListener('scroll', handle);\n        }\n        this.scrollHandler = [];\n    }\n\n    position = () => {\n        const rect = getRelativeRect(this.table.domNode.getBoundingClientRect(), this.quill.root);\n        const tableTop = this.table.domNode.offsetTop;\n        const rootScrollTop = this.quill.root.scrollTop;\n        css(this.root, {\n            top: `${tableTop - rootScrollTop - TIP_HEIGHT}px`,\n            left: rect.x + 'px', // table 距离 editor 的 padding\n        });\n    };\n\n    show() {\n        // 若没有 colgroup col 元素，不显示\n        if (!this.tableCols.length) {\n            return;\n        }\n\n        if (this.focusTableChange) {\n            const tableWrapperRect = this.tableWrapper.domNode.getBoundingClientRect();\n            // 加 tableId 用于 table 删除时隐藏 tooltip\n            this.root.dataset.tableId = this.tableWrapper.tableId;\n            this.root.innerHTML = [...this.tableCols]\n                .map((col) => {\n                    let width = col.width + (this.table.full ? '%' : 'px');\n                    if (!col.width) {\n                        width = col.domNode.getBoundingClientRect().width + 'px';\n                    }\n                    return `<div class=\"ql-table-col-header\" style=\"width: ${width}\">\n            \t\t\t<div class=\"ql-table-col-separator\" style=\"height: ${tableWrapperRect.height + TIP_HEIGHT - 3}px\"></div>\n            \t\t</div>`; // -3 为 border-width: 2, top: 1\n                })\n                .join('');\n\n            this.focusTableChange = false;\n            Object.assign(this.root.style, {\n                width: tableWrapperRect.width + 'px',\n            });\n\n            this.bindDrag();\n        }\n        setTimeout(() => {\n            this.scrollSync(this.tableWrapper.domNode);\n        }, 0);\n        this.root.classList.remove('ql-hidden');\n\n        const srcollHide = () => {\n            this.hide();\n            this.quill.root.removeEventListener('scroll', srcollHide);\n        };\n        this.quill.root.addEventListener('scroll', srcollHide);\n    }\n\n    hide() {\n        this.root.classList.add('ql-hidden');\n    }\n\n    bindDrag() {\n        let tipColBreak = null;\n        let curColIndex = -1;\n        let tableColHeads = Array.from(this.root.getElementsByClassName('ql-table-col-header'));\n        let tableColHeadSeparators = Array.from(this.root.getElementsByClassName('ql-table-col-separator'));\n        const appendTo = document.body;\n        // 设置每个 drag 下标对应 col 下标，最右会多一个 drag, 与 better-table 的类似\n        // 根据当前的 col left 配合 clientX 计算, 使保证最小宽度\n        const handleMousemove = (e) => {\n            // getBoundingClientRect 的 top/bottom/left/right, 这是根据视口距离\n            const rect = tableColHeads[curColIndex].getBoundingClientRect();\n            const tableWidth = this.table.domNode.getBoundingClientRect().width;\n            let resX = this.isMobile ? e.changedTouches[0].clientX : e.clientX;\n\n            if (this.table.full) {\n                // 拖拽的最大宽度是当前 col 宽度 + next col 宽度, 最后一个 col 最大宽度是当前宽度\n                const minWidth = (CELL_MIN_PRE / 100) * tableWidth;\n                const maxRange =\n                    resX > rect.right\n                        ? tableColHeads[curColIndex + 1]\n                            ? tableColHeads[curColIndex + 1].getBoundingClientRect().right - minWidth\n                            : rect.right - minWidth\n                        : Infinity;\n                const minRange = rect.x + minWidth;\n\n                resX = Math.min(Math.max(resX, minRange), maxRange);\n            } else {\n                if (resX - rect.x < CELL_MIN_WIDTH) {\n                    resX = rect.x + CELL_MIN_WIDTH;\n                }\n            }\n            resX = Math.floor(resX);\n            tipColBreak.style.left = resX + 'px';\n            tipColBreak.dataset.w = resX - rect.x;\n        };\n        const handleMouseup = (e) => {\n            let w = parseInt(tipColBreak.dataset.w);\n            // table full 时处理不同\n            if (this.table.full) {\n                // 在调整一个后把所有 col 都变成百分比\n                let pre = (w / this.table.domNode.getBoundingClientRect().width) * 100;\n                let oldWidthPre = this.tableCols[curColIndex].width;\n                if (pre < oldWidthPre) {\n                    // 缩小时若不是最后一个, 则把减少的量加在后面一个\n                    // 若是最后一个则把减少的量加在前面一个\n                    pre = Math.max(CELL_MIN_PRE, pre);\n                    const last = oldWidthPre - pre;\n                    if (this.tableCols[curColIndex + 1]) {\n                        this.tableCols[curColIndex + 1].width = `${this.tableCols[curColIndex + 1].width + last}%`;\n                    } else if (this.tableCols[curColIndex - 1]) {\n                        this.tableCols[curColIndex - 1].width = `${this.tableCols[curColIndex - 1].width + last}%`;\n                    } else {\n                        pre = 100;\n                    }\n                    this.tableCols[curColIndex].width = `${pre}%`;\n                } else {\n                    // 增大时若不是最后一个, 则与后面一个的宽度合并, 最大不能超过合并的宽度, 增加的量来自后面一个的减少量\n                    // 若是最后一个则不处理\n                    if (this.tableCols[curColIndex + 1]) {\n                        const totalWidthNextPre = oldWidthPre + this.tableCols[curColIndex + 1].width;\n                        pre = Math.min(totalWidthNextPre - CELL_MIN_PRE, pre);\n                        this.tableCols[curColIndex].width = `${pre}%`;\n                        this.tableCols[curColIndex + 1].width = `${totalWidthNextPre - pre}%`;\n                    }\n                }\n            } else {\n                this.table.domNode.style.width =\n                    parseFloat(this.table.domNode.style.width) -\n                    parseFloat(tableColHeads[curColIndex].style.width) +\n                    w +\n                    'px';\n                tableColHeads[curColIndex].style.width = `${w}px`;\n                this.tableCols[curColIndex].width = `${w}px`;\n            }\n            this.table.formatTableWidth();\n\n            appendTo.removeChild(tipColBreak);\n            tipColBreak = null;\n            curColIndex = -1;\n            document.removeEventListener(this.handledEvents.up, handleMouseup);\n            document.removeEventListener(this.handledEvents.move, handleMousemove);\n\n            const tableModule = this.quill.getModule(toolName.table);\n            tableModule.hideTableTools();\n        };\n        const handleMousedown = (i, e) => {\n            document.addEventListener(this.handledEvents.up, handleMouseup);\n            document.addEventListener(this.handledEvents.move, handleMousemove);\n            curColIndex = i;\n\n            const divDom = document.createElement('div');\n            divDom.classList.add('ql-table-drag-line');\n\n            const tableRect = this.tableWrapper.domNode.getBoundingClientRect();\n            css(divDom, {\n                top: `${tableRect.y - TIP_HEIGHT}px`,\n                left: `${this.isMobile ? e.changedTouches[0].clientX : e.clientX}px`,\n                height: `${tableRect.height + TIP_HEIGHT}px`,\n            });\n            appendTo.appendChild(divDom);\n\n            if (tipColBreak) appendTo.removeChild(tipColBreak);\n            tipColBreak = divDom;\n        };\n        tableColHeadSeparators.map((el, i) => {\n            el.addEventListener(this.handledEvents.down, handleMousedown.bind(this, i));\n            // 防止拖拽使触发 drag 导致可以使此元素被插入表格\n            el.addEventListener('dragstart', (e) => {\n                e.preventDefault();\n            });\n        });\n    }\n}\n\n// 在 table 内时禁用的 tool 的 name\nTableTooltip.disableToolNames = [toolName.table];\n","// col 最小百分比宽度\nexport const CELL_MIN_PRE = 3;\n// col 最小 px 宽度\nexport const CELL_MIN_WIDTH = 26;\n","import Quill from 'quill';\nconst Parchment = Quill.import('parchment');\nconst Delta = Quill.import('delta');\nconst BlockEmbed = Quill.import('blots/block/embed');\nconst Block = Quill.import('blots/block');\nconst Container = Quill.import('blots/container');\nconst icons = Quill.import('ui/icons');\n\nimport { TableTooltip, TableSelection, TableOperationMenu } from './module';\nimport { ContainBlot } from './blot/contain';\nimport {\n    TableCellFormat,\n    TableRowFormat,\n    TableFormat,\n    TableWrapperFormat,\n    TableBodyFormat,\n    TableColgroupFormat,\n    TableColFormat,\n    TableCellInnerFormat,\n    ListItemRewrite,\n} from './format';\n\nContainBlot.allowedChildren = [Block, BlockEmbed, Container];\n\nTableWrapperFormat.allowedChildren = [TableFormat];\n\nTableFormat.allowedChildren = [TableBodyFormat, TableColgroupFormat];\nTableFormat.requiredContainer = TableWrapperFormat;\n\nTableBodyFormat.allowedChildren = [TableRowFormat];\nTableBodyFormat.requiredContainer = TableFormat;\n\nTableColgroupFormat.allowedChildren = [TableColFormat];\nTableColgroupFormat.requiredContainer = TableFormat;\n\nTableRowFormat.allowedChildren = [TableCellFormat];\nTableRowFormat.requiredContainer = TableBodyFormat;\n\nTableCellFormat.allowedChildren = [TableCellInnerFormat];\n\nTableCellInnerFormat.defaultChild = 'block';\n\nexport { ListItemRewrite };\n\nQuill.register(\n    {\n        [`formats/${ContainBlot.blotName}`]: ContainBlot,\n\n        [`formats/${TableCellInnerFormat.blotName}`]: TableCellInnerFormat,\n        [`formats/${TableCellFormat.blotName}`]: TableCellFormat,\n        [`formats/${TableRowFormat.blotName}`]: TableRowFormat,\n        [`formats/${TableBodyFormat.blotName}`]: TableBodyFormat,\n        [`formats/${TableFormat.blotName}`]: TableFormat,\n        [`formats/${TableWrapperFormat.blotName}`]: TableWrapperFormat,\n\n        [`formats/${TableColgroupFormat.blotName}`]: TableColgroupFormat,\n        [`formats/${TableColFormat.blotName}`]: TableColFormat,\n    },\n    true\n);\n\nimport { isFunction, randomId, showTableSelector } from './utils';\nimport { CREATE_TABLE, CELL_MIN_PRE, blotName, moduleName, toolName, CELL_MIN_WIDTH } from './assets/const';\nimport TableSvg from './assets/icons/table.svg';\n\nclass TableModule {\n    constructor(quill, options) {\n        this.quill = quill;\n        this.options = options;\n\n        this.controlItem = null;\n        this.tableInsertSelectCloseHandler = null;\n\n        const toolbar = this.quill.getModule('toolbar');\n        if (toolbar) {\n            const control = toolbar.controls.find(([name]) => name === TableModule.toolName);\n            if (control) {\n                this.controlItem = control[1].parentNode.querySelector('.ql-table.ql-picker');\n                // 使用 button 时会在点击后立刻聚焦输入, 若有横向滚动条会时视口锁定到 focus, 使用 select 就不会\n                if (this.controlItem) {\n                    const label = this.controlItem.getElementsByClassName('ql-picker-label')?.[0];\n                    label.innerHTML = TableSvg;\n                } else {\n                    this.controlItem = control[1];\n                }\n                this.buildCustomSelect(this.options.customSelect, control[1].tagName.toLowerCase(), this.options.customButton);\n                toolbar.addHandler(TableModule.toolName, this.handleSelectDisplay.bind(this));\n            }\n        }\n        this.pasteTableHandler();\n\n        // 绑定 table 的选择事件\n        this.quill.root.addEventListener(\n            'click',\n            (evt) => {\n                const path = evt.path || (evt.composedPath && evt.composedPath());\n                if (!path || path.length <= 0) return;\n\n                const tableNode = path.filter((node) => {\n                    return (\n                        node.tagName && node.tagName.toUpperCase() === 'TABLE' && node.classList.contains('ql-table')\n                    );\n                })?.[0];\n                // 结束位置位处于表格内不显示\n                if (tableNode) {\n                    if (this.table === tableNode) return;\n                    if (this.table) this.hideTableTools();\n                    this.showTableTools(tableNode, quill, this.options.selection);\n                } else if (this.table) {\n                    this.hideTableTools();\n                }\n            },\n            false\n        );\n        // 绑定 table 的右键插入、删除事件\n        this.quill.root.addEventListener('contextmenu', (evt) => {\n            if (!this.table) return true;\n            evt.preventDefault();\n\n            const path = evt.path || (evt.composedPath && evt.composedPath());\n            if (!path || path.length <= 0) return;\n\n            const tableNode = path.filter(\n                (node) => node.tagName && node.tagName.toUpperCase() === 'TABLE' && node.classList.contains('ql-table')\n            )[0];\n            // 如果没有选中任何单元格，不显示右键菜单\n            if (tableNode && this.tableSelection?.selectedTds?.length) {\n                if (this.tableOperationMenu) this.tableOperationMenu = this.tableOperationMenu.destroy();\n\n                const rowNode = path.filter(\n                    (node) => node.tagName && node.tagName.toUpperCase() === 'TR' && node.getAttribute('data-row-id')\n                )[0];\n\n                const cellNode = path.filter(\n                    (node) => node.tagName && node.tagName.toUpperCase() === 'TD' && node.getAttribute('data-row-id')\n                )[0];\n\n                this.tableOperationMenu = new TableOperationMenu(\n                    {\n                        table: tableNode,\n                        row: rowNode,\n                        cell: cellNode,\n                        left: evt.clientX,\n                        top: evt.clientY,\n                    },\n                    quill,\n                    this.options.operationMenu\n                );\n            }\n        });\n        this.quill.theme.TableTooltip = new TableTooltip(this.quill, this.options.tableToolTip);\n    }\n\n    showTableTools(table, quill, options) {\n        this.table = table;\n        this.tableSelection = new TableSelection(table, quill, options);\n    }\n\n    hideTableTools() {\n        this.tableSelection && this.tableSelection.destroy();\n        this.tableOperationMenu && this.tableOperationMenu.destroy();\n        if (this.quill.theme.TableTooltip) {\n            this.quill.theme.TableTooltip.curTableId = null;\n            this.quill.theme.TableTooltip.hide();\n        }\n        this.tableSelection = null;\n        this.tableOperationMenu = null;\n        this.table = null;\n    }\n\n    // 粘贴表格处理\n    // 需要带上 col 的 width, 处理 px 和 %\n    pasteTableHandler() {\n        let tableId = randomId();\n        let rowId = randomId();\n        let colIds = [];\n        let cellCount = 0;\n\n        // 重新生成 table 里的所有 id, cellFormat 和 colFormat 进行 table 的添加\n        // addMatcher 匹配的是标签字符串, 不是 blotName, 只是这些 blotName 设置的是标签字符串\n        this.quill.clipboard.addMatcher(blotName.table, (node, delta) => {\n            if (!delta.ops.length) return delta;\n            const hasCol = !!delta.ops[0].attributes?.col;\n            let colDelta;\n            // 粘贴表格若原本存在 col, 仅改变 id, 否则重新生成\n            const { width: originTableWidth } = node.getBoundingClientRect();\n            let isFull = this.options.fullWidth;\n            if (hasCol) isFull = !!delta.ops[0].insert?.col?.full;\n            const defaultColWidth = isFull\n                ? Math.max(100 / colIds.length, CELL_MIN_PRE) + '%'\n                : Math.max(originTableWidth / colIds.length, CELL_MIN_WIDTH) + 'px';\n\n            if (!hasCol) {\n                colDelta = colIds.reduce((colDelta, id) => {\n                    colDelta.insert('\\n', {\n                        [blotName.tableCol]: {\n                            colId: id,\n                            tableId,\n                            width: defaultColWidth,\n                            full: isFull,\n                        },\n                    });\n                    return colDelta;\n                }, new Delta());\n            } else {\n                for (let i = 0; i < delta.ops.length; i++) {\n                    if (!delta.ops[i].attributes[blotName.tableCol]) {\n                        break;\n                    }\n                    Object.assign(delta.ops[i].attributes[blotName.tableCol], {\n                        tableId,\n                        colId: colIds[i],\n                        full: isFull,\n                        width: !delta.ops[i].attributes[blotName.tableCol].width\n                            ? defaultColWidth\n                            : parseFloat(delta.ops[i].attributes[blotName.tableCol].width) + (isFull ? '%' : 'px'),\n                    });\n                    // delta.ops[i].attributes[blotName.tableCol].tableId = tableId;\n                    // delta.ops[i].attributes[blotName.tableCol].colId = colIds[i];\n                    // delta.ops[i].attributes[blotName.tableCol].full = isFull;\n                    // if (!delta.ops[i].attributes[blotName.tableCol].width) {\n                    //     delta.ops[i].attributes[blotName.tableCol].width = defaultColWidth;\n                    // } else {\n                    //     delta.ops[i].attributes[blotName.tableCol].width =\n                    //         parseFloat(delta.ops[i].attributes[blotName.tableCol].width) + (isFull ? '%' : 'px');\n                    // }\n                }\n            }\n            tableId = randomId();\n            colIds = [];\n            cellCount = 0;\n            return colDelta ? colDelta.concat(delta) : delta;\n        });\n\n        this.quill.clipboard.addMatcher(blotName.tableRow, (node, delta) => {\n            rowId = randomId();\n            cellCount = 0;\n            return delta;\n        });\n\n        this.quill.clipboard.addMatcher(blotName.tableCell, (node, delta) => {\n            const rowspan = node.getAttribute('rowspan') || 1;\n            const colspan = node.getAttribute('colspan') || 1;\n            const colIndex = +cellCount + +colspan - 1;\n            if (!colIds[colIndex]) {\n                for (let i = colIndex; i >= 0; i--) {\n                    if (!colIds[i]) colIds[i] = randomId();\n                }\n            }\n            const colId = colIds[colIndex];\n            cellCount += 1;\n\n            if (delta.slice(delta.length() - 1).ops[0]?.insert !== '\\n') {\n                delta.insert('\\n');\n            }\n\n            return delta.compose(\n                new Delta().retain(delta.length(), {\n                    [blotName.tableCellInner]: {\n                        tableId,\n                        rowId,\n                        colId,\n                        rowspan,\n                        colspan,\n                        style: node.getAttribute('style'),\n                    },\n                })\n            );\n        });\n    }\n\n    async buildCustomSelect(customSelect, tagName, customButton) {\n        const dom = document.createElement('div');\n        dom.classList.add('ql-custom-select');\n        const selector = customSelect && isFunction(customSelect) ? await customSelect() : this.createSelect(customButton);\n        dom.appendChild(selector);\n\n        let appendTo = this.controlItem;\n        if (tagName === 'select') {\n            appendTo = this.controlItem.querySelector('.ql-picker-options');\n        }\n        if (!appendTo) return;\n        selector.addEventListener(CREATE_TABLE, (e) => {\n            const { row, col } = e.detail;\n            if (!row || !col) return;\n            this.insertTable(row, col);\n        });\n        appendTo.appendChild(dom);\n    }\n\n    async handleSelectDisplay() {\n        this.controlItem.classList.add('ql-expanded');\n        this.controlItem.dataset.active = true;\n        window.removeEventListener('click', this.tableInsertSelectCloseHandler);\n        this.tableInsertSelectCloseHandler = (e) => {\n            const path = (e.composedPath && e.composedPath()) || e.path;\n            const i = path.findIndex((el) => el === this.controlItem);\n            if (i > 2 || i === -1) {\n                this.closeSelecte();\n            }\n        };\n        window.addEventListener('click', this.tableInsertSelectCloseHandler);\n    }\n\n    createSelect(customButton) {\n        return showTableSelector(customButton);\n    }\n\n    closeSelecte() {\n        this.controlItem.classList.remove('ql-expanded');\n        this.controlItem.dataset.active = false;\n        window.removeEventListener('click', this.tableInsertSelectCloseHandler);\n    }\n\n    // 以上为 toolbar table 按钮的选择生成器相关\n    // 以下为 table module 生成表格相关功能函数\n\n    insertTable(rows, columns) {\n        if (rows >= 100 || columns >= 100) {\n            throw new Error('Both rows and columns must be less than 100.');\n        }\n\n        this.quill.focus();\n        this.range = this.quill.getSelection();\n        const range = this.range;\n        if (range == null) return;\n        const currentBlot = this.quill.getLeaf(range.index)[0];\n\n        if (isForbidInTable(currentBlot)) {\n            throw new Error('Not supported nesting of ' + currentBlot.type + ' type object within a table.');\n        }\n\n        setTimeout(() => {\n            let delta = new Delta().retain(range.index);\n            delta.insert('\\n');\n            const tableId = randomId();\n            const colId = new Array(columns).fill(0).map(() => randomId());\n\n            let { width, paddingLeft, paddingRight } = getComputedStyle(this.quill.root);\n            width = parseInt(width);\n            paddingLeft = parseInt(paddingLeft);\n            paddingRight = parseInt(paddingRight);\n            width = width - paddingLeft - paddingRight;\n\n            delta = new Array(columns).fill('\\n').reduce((memo, text, i) => {\n                memo.insert(text, {\n                    [blotName.tableCol]: {\n                        width: !this.options.fullWidth ? `${Math.floor(width / columns)}px` : `${(1 / columns) * 100}%`,\n                        tableId,\n                        colId: colId[i],\n                        full: this.options.fullWidth,\n                    },\n                });\n                return memo;\n            }, delta);\n\n            // 直接生成 delta 的数据格式并插入\n            delta = new Array(rows).fill(0).reduce((memo) => {\n                const rowId = randomId();\n                return new Array(columns).fill('\\n').reduce((memo, text, i) => {\n                    memo.insert(text, {\n                        [blotName.tableCellInner]: {\n                            tableId,\n                            rowId,\n                            colId: colId[i],\n                            rowspan: 1,\n                            colspan: 1,\n                        },\n                    });\n                    return memo;\n                }, memo);\n            }, delta);\n            // console.log(columns, rows);\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(range.index + columns + columns * rows + 1, Quill.sources.API);\n            this.quill.focus();\n\n            this.closeSelecte();\n        }, 0);\n    }\n\n    findTable(blot) {\n        let cur = blot;\n        while (cur.statics.blotName !== blotName.table && cur !== null) {\n            cur = cur.parent;\n        }\n        return cur;\n    }\n\n    /*\n        基准行\n            向上: 选中 cell 的第一行\n            向下: 选中 cell 的最后一行\n        有无跨行单元格跨过选中基准行\n            找到所有 colId, 根据若遍历行内的某 colId 跨行至基准行, 则添加至新的 cell 中, 否则:\n                向上: 从当前行向前查找所有 cell, 若 cell rowspan + index > 基准行 index, 则此 cell rowspan + 1\n                向下: 从当前行向后查找所有 cell, 若 cell rowspan - index < 基准行 index, 则此 cell rowspan + 1\n            直到所有 colId 都遍历完, 则生成新的 cell 并插入到当前行的下方/上方\n     */\n    appendRow(isDown) {\n        const selectTds = this.tableSelection.selectedTds;\n        if (!selectTds.length) return;\n        const table = this.findTable(selectTds[0]);\n        const findTd = selectTds[isDown ? selectTds.length - 1 : 0];\n        let baseTr = Quill.find(findTd.domNode.parentNode.parentNode);\n        if (isDown) {\n            let baseTrRowspan = findTd.rowspan;\n            while (baseTrRowspan > 1) {\n                baseTr = baseTr.next;\n                baseTrRowspan -= 1;\n            }\n        }\n\n        const colIds = table.getColIds();\n        // 用于判断有哪些 col 已被遍历\n        const allColIds = new Set(colIds);\n        let foreachTr = isDown ? baseTr : baseTr.prev;\n        let newCellColId = new Array();\n        let indexDiff = 0;\n        // 第一行向上插入时 baseTr 是 null, 不需要判断\n        if (!foreachTr) {\n            allColIds.clear();\n            newCellColId = colIds;\n        }\n        while (allColIds.size) {\n            indexDiff += 1;\n            if (!foreachTr) {\n                break;\n            }\n            foreachTr.foreachCellInner((cell) => {\n                if (!allColIds.has(cell.colId)) return;\n                // 找到当前 cell 跨列的所有 colId\n                let curCellColIds = [cell.colId];\n                if (cell.colspan > 1) {\n                    let index = colIds.findIndex((id) => id === cell.colId);\n                    if (index === -1) {\n                        index = 0;\n                    }\n                    curCellColIds = colIds.slice(index, index + cell.colspan);\n                }\n                // 若跨行过基准行, 则更新 rowspan\n                if (cell.rowspan > indexDiff) {\n                    cell.rowspan += 1;\n                } else {\n                    // 未包含基准行, 要添加所有的包含的 col\n                    newCellColId.push(...curCellColIds);\n                }\n                curCellColIds.map((id) => allColIds.delete(id));\n            });\n            foreachTr = foreachTr.prev;\n        }\n        // 生成新的 cell\n        const tableId = table.tableId;\n        const newRowId = randomId();\n        const newRow = Parchment.create(blotName.tableRow, newRowId);\n        const insertColId = new Set(newCellColId);\n        // 保持 colId 顺序\n        for (let i = 0; i < colIds.length; i++) {\n            if (!insertColId.size) break;\n            if (insertColId.has(colIds[i])) {\n                const td = Parchment.create(blotName.tableCell, {\n                    rowId: newRowId,\n                    colId: colIds[i],\n                    rowspan: 1,\n                    colspan: 1,\n                });\n                const tdInner = Parchment.create(blotName.tableCellInner, {\n                    tableId,\n                    rowId: newRowId,\n                    colId: colIds[i],\n                    rowspan: 1,\n                    colspan: 1,\n                });\n                const block = Parchment.create('block');\n                block.appendChild(Parchment.create('break'));\n                tdInner.appendChild(block);\n                td.appendChild(tdInner);\n                newRow.appendChild(td);\n                insertColId.delete(colIds[i]);\n            }\n        }\n\n        baseTr.parent.insertBefore(newRow, isDown ? baseTr.next : baseTr);\n    }\n\n    /*\n        第一种情况选中行中没有跨行, 或跨行没有超出选中范围. \n            直接删除\n        第二种情况选中行内有跨行, 且跨行结束行在选中范围外.\n            遍历选中行, 找到所有跨行超出范围的 cell 记录 colId 与超出 rowspan, 之后在选中最后一行的后一行插入对应的 cell\n        第三种情况选中行之前有跨行, 且跨行结束行在选中范围内. \n            从选中行前一行开始遍历 cell, 找到所有的 col, 若 cell 跨行进入了选中范围(rowsapn - index > 0), rowspan = index\n        第四种情况选中行之前有跨行, 且跨行范围包含选中范围.\n            选中行前一行开始遍历 cell, 找到所有的 col, 若 cell 跨行进入了选中范围(rowsapn - index > 0), rowspan = rowspan - deleteTrs.length\n            \n    */\n    removeRow() {\n        if (!this.tableSelection.selectedTds.length) return;\n        const selectTds = this.tableSelection.selectedTds;\n        let [rowIds, rows] = selectTds.reduce(\n            (pre, td) => {\n                if (!pre[0].has(td.rowId)) {\n                    pre[0].add(td.rowId);\n                    pre[1].push(td.parent.parent);\n                }\n                return pre;\n            },\n            [new Set(), []]\n        );\n        rowIds = Array.from(rowIds);\n\n        const afterCell = new Map();\n        rows.map((tr) => {\n            tr.foreachCellInner((cell) => {\n                const rowIndexInSelected = rowIds.findIndex((id) => id === cell.rowId);\n                if (cell.rowspan > rowIds.length - rowIndexInSelected) {\n                    afterCell.set(cell.colId, {\n                        cell,\n                        rowspan: cell.rowspan - rowIds.length + rowIndexInSelected,\n                    });\n                }\n            });\n            tr.remove();\n        });\n\n        const table = this.findTable(selectTds[0]);\n        const tableId = table.tableId;\n        // 需要添加的跨行 cell\n        if (afterCell.size) {\n            const nextRow = rows[rows.length - 1].next;\n\n            const colIds = table.getColIds();\n            // 标记插入位置\n            let lastTd = null;\n            for (let i = 0; i < colIds.length; ) {\n                const td = nextRow.domNode.querySelector(`td[data-col-id=\"${colIds[i]}\"]`);\n                if (td) {\n                    const tdBlot = Quill.find(td);\n                    i += tdBlot.colspan;\n                    lastTd = tdBlot.next;\n                } else {\n                    const { cell, rowspan } = afterCell.get(colIds[i]);\n                    const newTd = Parchment.create(blotName.tableCell, {\n                        rowId: nextRow.rowId,\n                        colId: colIds[i],\n                        rowspan,\n                        colspan: cell.colspan,\n                    });\n                    const newTdInner = Parchment.create(blotName.tableCellInner, {\n                        tableId,\n                        rowId: nextRow.rowId,\n                        colId: colIds[i],\n                        rowspan,\n                        colspan: cell.colspan,\n                    });\n                    cell.moveChildren(newTdInner);\n                    newTd.appendChild(newTdInner);\n                    nextRow.insertBefore(newTd, lastTd);\n                    i += cell.colspan;\n                }\n            }\n        }\n    }\n\n    /*\n        基准列\n            向左: 选中 cell 的第一列 id, index\n            向右: 选中 cell 的最后一列 id, index\n        找到所有 rowId, 开始遍历行内 cell 至(向右: 基准行 colId)(向左: 基准行前一行 colId) \n            有无单元格跨列超过基准列\n                // 因为 colspan 最少为 1, 判断时需要 + 1\n                向右: 若 colspan + i > 1 + index, 则 colspan + 1 \n                向左: 若 colspan + i > 1 + index, 则 colspan + 1 \n                colspan + 1 后判断是否跨行, 若跨行则之后 rowspan 行不进行循环\n                break\n            无 \n                找到 index 所在 cell，insertBefore\n    */\n    appendCol(isRight) {\n        if (!this.tableSelection.selectedTds.length) return;\n        const selectTds = this.tableSelection.selectedTds;\n        const table = this.findTable(selectTds[0]);\n        const cols = table.getCols();\n        const colIds = table.getColIds();\n        const rows = table.getRows();\n        const newColId = randomId();\n\n        let baseColId;\n        if (isRight) {\n            const lastTd = selectTds[selectTds.length - 1];\n            const i = colIds.findIndex((id) => id === lastTd.colId);\n            baseColId = colIds[i + lastTd.colspan - 1];\n        } else {\n            baseColId = selectTds[0].colId;\n        }\n        // 找到对应 col 下标，同时插入 col 元素\n        const baseColIndex = cols.findIndex((col) => {\n            if (col.colId === baseColId) {\n                const newCol = Parchment.create(blotName.tableCol, {\n                    width: !this.options.fullWidth ? '160px' : '6%',\n                    full: this.options.fullWidth,\n                    tableId: table.tableId,\n                    colId: newColId,\n                });\n                let beforeTarget = isRight ? col.next : col;\n                col.parent.insertBefore(newCol, beforeTarget);\n                if (this.options.fullWidth) {\n                    if (!beforeTarget) {\n                        beforeTarget = isRight ? col : col.prev;\n                    }\n                    beforeTarget.width = Math.max(beforeTarget.width - 6, CELL_MIN_PRE) + '%';\n                }\n            }\n            return col.colId === baseColId;\n        });\n        table.formatTableWidth();\n\n        const stopIndex = isRight ? baseColIndex + 1 : baseColIndex;\n        let skipRow = 0;\n        rows.map((tr) => {\n            let colspanIncrease = false;\n            let beforeCell = null;\n            tr.foreachCellInner((cell) => {\n                // 之前行有跨行且跨列的 cell 处理过, 直接跳过\n                if (skipRow > 0) {\n                    skipRow -= 1;\n                    colspanIncrease = true;\n                    return true;\n                }\n                const colIndexInSelected = colIds.findIndex((id) => id === cell.colId);\n                if (cell.colspan + colIndexInSelected > stopIndex) {\n                    beforeCell = cell.parent;\n\n                    // 当前 cell 跨列且不是终止位\n                    if (cell.colspan !== 1 && colIndexInSelected !== stopIndex) {\n                        cell.colspan += 1;\n                        colspanIncrease = true;\n                        skipRow = cell.rowspan - 1;\n                        return true;\n                    }\n                }\n\n                if (colIndexInSelected >= stopIndex) {\n                    return true;\n                }\n            });\n\n            if (!colspanIncrease) {\n                const newTd = Parchment.create(blotName.tableCell, {\n                    rowId: tr.rowId,\n                    colId: newColId,\n                    rowspan: 1,\n                    colspan: 1,\n                });\n                const newTdInner = Parchment.create(blotName.tableCellInner, {\n                    tableId: table.tableId,\n                    rowId: tr.rowId,\n                    colId: newColId,\n                    rowspan: 1,\n                    colspan: 1,\n                });\n                newTd.appendChild(newTdInner);\n                tr.insertBefore(newTd, beforeCell);\n            }\n        });\n    }\n\n    /*\n        找到需要删除的所有 colId\n            获取所有 colIds, 遍历选中 cell, 找到 cell 在 colIds 下标, while cell 的 colspan, 将对应 colId 加入 set. 同时保存第一个 col 的 index (first)和最后一个 col 的 index(last)\n        遍历所有 row, 遍历 row 中的 cell, 直到 cell i == index\n            if i > first && i + colspan > last\n                cell.colspan - (last - i + 1)\n            if i < first && i + colsapn > last\n                cell.colspan - (last - first + 1)\n            if i < first && i + colspan > first && i + colspan <= last\n                cell.colspan - (i + colspan - first)\n            if i >= first && i + colspan <= last\n                cell.remove\n    */\n    removeCol() {\n        if (!this.tableSelection.selectedTds.length) return;\n        const tds = this.tableSelection.selectedTds;\n        const table = this.findTable(this.tableSelection.selectedTds[0]);\n        const colIds = table.getColIds();\n\n        const [firstSelectColIndex, lastSelectColIndex] = tds.reduce(\n            (n, cellInner) => {\n                const i = colIds.findIndex((id) => id === cellInner.colId);\n                return [Math.min(n[0], i), Math.max(n[1], i + cellInner.colspan - 1)];\n            },\n            [Infinity, -Infinity]\n        );\n\n        const rows = table.getRows();\n        rows.map((row) => {\n            let i = 0;\n            row.foreachCellInner((cell) => {\n                if (i > lastSelectColIndex) return true;\n                const colspan = cell.colspan;\n                if (i + colspan - 1 > lastSelectColIndex) {\n                    cell.colspan -= lastSelectColIndex - Math.max(i, firstSelectColIndex) + 1;\n                } else if (i < firstSelectColIndex && i + colspan - 1 >= firstSelectColIndex) {\n                    cell.colspan -= i + colspan - firstSelectColIndex;\n                } else if (i >= firstSelectColIndex) {\n                    cell.remove();\n                }\n\n                i += colspan;\n            });\n        });\n\n        const cols = table.getCols();\n        for (let i = 0; i < cols.length; i++) {\n            if (i >= firstSelectColIndex && i <= lastSelectColIndex) {\n                cols[i].remove();\n            }\n            if (i > lastSelectColIndex) {\n                break;\n            }\n        }\n        table.formatTableWidth();\n    }\n\n    removeTable() {\n        const selectTds = this.tableSelection.selectedTds;\n        if (!selectTds.length) return;\n        this.findTable(selectTds[0]).remove();\n    }\n\n    mergeCells() {\n        if (!this.tableSelection.selectedTds.length) return;\n        const selectTds = this.tableSelection.selectedTds;\n\n        // 计算需要合并的单元格的行列数\n        const counts = selectTds.reduce(\n            (pre, cellInner) => {\n                // 此单元格所在列需要跨的行数\n                const colId = cellInner.colId;\n                if (!pre[0][colId]) pre[0][colId] = 0;\n                pre[0][colId] += cellInner.rowspan;\n                // 此单元格所在行需要跨的列数\n                const rowId = cellInner.rowId;\n                if (!pre[1][rowId]) pre[1][rowId] = 0;\n                pre[1][rowId] += cellInner.colspan;\n                return pre;\n            },\n            [{}, {}]\n        );\n        // counts[0] 记录的是 colId 对应的跨行数\n        // counts[1] 记录的是 rowId 对应的跨列数\n        const rowCount = Math.max(...Object.values(counts[0]));\n        const colCount = Math.max(...Object.values(counts[1]));\n\n        // console.log(counts);\n        // console.log('row', rowCount);\n        // console.log('col', colCount);\n        // 注意清除 block 的 cache.detla\n        // 若不清除 cache.detla 导致显示正常但在获取 quill.getContents() 时会有原 cellInner 未改变的情况\n        // 防止这种情况直接 clone\n        const mergedCell = selectTds[0].clone();\n        selectTds[0].parent.appendChild(mergedCell);\n        mergedCell.colspan = colCount;\n        mergedCell.rowspan = rowCount;\n        for (let i = 0; i < selectTds.length; i++) {\n            selectTds[i].moveChildren(mergedCell);\n            selectTds[i].remove();\n        }\n        const table = this.findTable(selectTds[0]);\n        // 当合并后的单元格跨列等于 table 的列数, row 可以合并为 1\n        const tableColLength = table.getColIds().length;\n        if (tableColLength === colCount) {\n            mergedCell.rowspan = 1;\n        }\n        // 当合并后的单元格跨行等于 table 的行数, col 可以合并为 1\n        const tableRowLength = table.getRowIds().length;\n        if (tableRowLength <= rowCount) {\n            // 最终将 colspan 合并为 1, 所以要删除 colspan - 1 个 col\n            // 遍历到合并单元格的 colId 后开始进行删除\n            const tableCols = table.descendants(TableColFormat);\n            let deleteCount = mergedCell.colspan - 1;\n            let startDeleteIndex = null;\n            for (let i = 0; i < tableCols.length; i++) {\n                if (deleteCount <= 0) break;\n                // 先删再判断, 防止删除合并后的最后一个单元格\n                if (startDeleteIndex !== null) {\n                    // 若合并 col 中存在 width 为 null, 则合并后的 col 为 null\n                    if (tableCols[startDeleteIndex].width === null || tableCols[i].width === null) {\n                        tableCols[startDeleteIndex].width = null;\n                    } else {\n                        tableCols[startDeleteIndex].width += tableCols[i].width;\n                    }\n                    tableCols[i].remove();\n                    deleteCount -= 1;\n                }\n                if (tableCols[i].colId === mergedCell.colId) {\n                    startDeleteIndex = i;\n                }\n            }\n            mergedCell.colspan = 1;\n        }\n    }\n\n    setStyle(styles, cells) {\n        if (!cells.length) return;\n        cells.map((cellInner) => (cellInner.style = styles));\n    }\n}\n\n// 不可插入至表格的 blot\nexport const tableCantInsert = [blotName.tableCell];\nexport const isForbidInTableBlot = (blot) => {\n    return tableCantInsert.includes(blot.statics.blotName);\n};\n\nexport const isForbidInTable = (current) => {\n    return current && current.parent\n        ? isForbidInTableBlot(current.parent)\n            ? true\n            : isForbidInTable(current.parent)\n        : false;\n};\n\nTableModule.moduleName = moduleName.table;\nTableModule.toolName = toolName.table;\n\nTableModule.createEventName = CREATE_TABLE;\nicons[TableModule.toolName] = TableSvg;\n\nexport const rewirteFormats = () =>\n    Quill.register(\n        {\n            [`formats/list/item`]: ListItemRewrite,\n        },\n        true\n    );\nexport default TableModule;\n"],"names":["CREATE_TABLE","blotName","moduleName","toolName","randomId","Math","random","toString","slice","zindex","dialog","_ref","arguments","length","undefined","child","_ref$target","target","document","body","_ref$beforeClose","beforeClose","appendTo","createElement","classList","add","style","zIndex","overlay","appendChild","content","onclick","e","stopPropagation","originOverflow","getComputedStyle","overflow","close","remove","createInputItem","label","options","type","value","inputItem","inputLabel","innerText","inputInput","input","key","setAttribute","max","min","addEventListener","onfocus","onblur","errorTip","msg","contains","querySelector","removeError","item","showTableCreator","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","row","col","box","inputContent","_createInputItem","rowItem","rowInput","rowErrorTip","_createInputItem2","colItem","colInput","colErrorTip","control","confirmBtn","cancelBtn","_args2","wrap","_context2","prev","next","abrupt","Promise","resolve","reject","_callee","_context","Number","isNaN","stop","apply","this","css","domNode","rules","prop","getRelativeRect","targetRect","container","containerRect","getBoundingClientRect","x","scrollLeft","y","scrollTop","x1","width","y1","height","computeBoundaryFromRects","startRect","endRect","isFunction","val","MENU_ITEMS_DEFAULT","insertColumnLeft","text","handler","tableModule","quill","getModule","appendCol","hideTableTools","insertColumnRight","insertRowTop","appendRow","insertRowBottom","groupEnd","removeCol","removeRow","removeTable","mergeCell","mergeCells","setBackgroundColor","subTitle","tempCells","tableSelection","selectedTds","setStyle","backgroundColor","marginLeft","clearBackgroundColor","setBorderColor","borderColor","clearBorderColor","TableOperationMenu","constructor","params","table","menuItems","optionsMerge","boundary","destroyHandler","destroy","bind","menuInitial","_this$options","_this$options$items","_this$options2","_this$options$items2","_this$options3","replaceItems","items","Object","assign","setMenuPosition","_ref6","left","top","menuRect","resLeft","resTop","concat","_ref7","cell","name","position","subTitleCreator","menuItemCreator","dividingCreator","dividing","title","removeEventListener","_ref8","iconSrc","node","iconSpan","innerHTML","textSpan","nodes","call","Array","isArray","map","sub","Container","Quill","import","Parchment","TableBodyFormat","optimize","super","statics","tagName","moveChildren","deleteAt","index","parent","children","forEachAt","offset","scope","Scope","BLOCK_BLOT","ContainBlot","create","insertBefore","blot","ref","head","format","tail","replace","defaultChild","TableCellInnerFormat","tableId","rowId","colId","rowspan","colspan","dataset","_style","clearDeltaCache","forEach","cache","cloneTarget","clone","formats","_this$domNode$dataset","_this$domNode$dataset2","tableWrapper","tableBody","tr","td","className","TableCellFormat","cssText","getAttribute","getCellInner","descendants","_this$domNode$dataset3","cellInner","TableColFormat","full","parseFloat","hasAttribute","_this$domNode$dataset4","tableColgroup","_this$domNode$dataset5","ttableId","tcolId","TableColgroupFormat","findCol","cur","iterator","i","TableRowFormat","foreachCellInner","func","_slicedToArray","TableFormat","formatTableWidth","colWidthFillTable","colgroup","colsWidth","reduce","sum","setTimeout","getRows","getRowIds","d","getCols","getColIds","TableWrapperFormat","preventDefault","ondrop","ondragover","dataTransfer","dropEffect","allowedChildren","find","_document$querySelect","ListItem","ListItemRewrite","replaceWith","isolate","replacement","attributes","copy","PRIMARY_COLOR","TableSelection","dragging","selectingHandler","mouseDownHandler","cellSelect","scrollHandler","helpLinesInitial","ResizeObserver","entries","clearSelection","observe","root","closeHandler","on","events","TEXT_CHANGE","_this$options4","primaryColor","addScrollEvent","dom","handle","push","clearScrollEvent","_this$scrollHandler$i","addContainer","button","closest","startTableId","mouseMoveHandler","endTd","endTdRect","parentNode","startTdRect","correctBoundary","computeSelectedTds","repositionHelpLines","startTd","blur","mouseUpHandler","srcollHide","selectedCells","tableCell","_getRelativeRect","_getRelativeRect2","scrollX","tableViewScrollLeft","display","off","TIP_HEIGHT","TableTooltip","_defineProperty","rect","tableTop","offsetTop","rootScrollTop","tableDisableToolHandlers","curTableId","focusTableChange","tableCols","hide","isMobile","window","handledEvents","down","move","up","listen","_this$options5","_this$options6","tipHeight","disableToolNames","from","Set","EDITOR_CHANGE","eventName","range","getSelection","enableFromTable","scroll","descendant","_tableWrapper$childre","disableFromTable","tbody","_tbody$children","scrollSync","show","toggleDisableToolbarTools","toolbar","disableByTable","_step","_iterator","_createForOfIteratorHelper","s","n","done","handlers","err","f","controls","_ref9","_toolbar$container$qu","_ref10","btn","includes","toLowerCase","_this$scrollHandler$i2","tableWrapperRect","join","bindDrag","tipColBreak","curColIndex","tableColHeads","getElementsByClassName","tableColHeadSeparators","handleMousemove","tableWidth","resX","changedTouches","clientX","minWidth","CELL_MIN_PRE","maxRange","right","Infinity","minRange","floor","w","handleMouseup","parseInt","pre","oldWidthPre","last","totalWidthNextPre","removeChild","handleMousedown","divDom","tableRect","el","Delta","BlockEmbed","Block","icons","requiredContainer","register","TableModule","controlItem","tableInsertSelectCloseHandler","_ref11","_this$controlItem$get","TableSvg","buildCustomSelect","customSelect","customButton","addHandler","handleSelectDisplay","pasteTableHandler","evt","_path$filter","path","composedPath","tableNode","filter","toUpperCase","showTableTools","selection","_this$tableSelection","tableOperationMenu","rowNode","cellNode","clientY","operationMenu","theme","tableToolTip","colIds","cellCount","clipboard","addMatcher","delta","_delta$ops$0$attribut","_delta$ops$0$insert","ops","colDelta","hasCol","originTableWidth","isFull","fullWidth","insert","defaultColWidth","id","blotName_tableCol","_delta$slice$ops$","colIndex","compose","retain","blotName_tableCellInner","_this","_callee3","selector","_context3","t0","sent","createSelect","_e$detail","detail","insertTable","_this2","_callee4","_context4","active","findIndex","closeSelecte","selectDom","selectBlock","r","c","selectItem","selectCustom","sendTableData","_ref4","dispatchEvent","CustomEvent","updateSelectBlockItems","_selectDom$dataset","querySelectorAll","childs","_e$target$dataset","removeAttribute","_selectDom$dataset2","then","_ref5","showTableSelector","rows","columns","Error","focus","currentBlot","getLeaf","isForbidInTable","fill","_getComputedStyle","paddingLeft","paddingRight","memo","updateContents","sources","USER","setSelection","API","findTable","isDown","selectTds","findTd","baseTr","baseTrRowspan","allColIds","foreachTr","newCellColId","indexDiff","clear","size","has","curCellColIds","delete","newRowId","newRow","insertColId","tdInner","block","_selectTds$reduce","_selectTds$reduce2","rowIds","afterCell","Map","rowIndexInSelected","set","nextRow","lastTd","tdBlot","_afterCell$get","get","newTd","newTdInner","isRight","baseColId","cols","newColId","baseColIndex","newCol","beforeTarget","stopIndex","skipRow","colspanIncrease","beforeCell","colIndexInSelected","tds","_tds$reduce","_tds$reduce2","firstSelectColIndex","lastSelectColIndex","counts","rowCount","values","colCount","mergedCell","deleteCount","startDeleteIndex","styles","cells","tableCantInsert","isForbidInTableBlot","current","createEventName","rewirteFormats"],"mappings":"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"}