{"version":3,"file":"index.js","sources":["../src/assets/const/event.js","../src/assets/const/name.js","../src/utils/index.js","../src/module/TableOperationMenu.js","../src/format/TableBodyFormat.js","../src/blot/contain.js","../src/format/TableCellInnerFormat.js","../src/format/TableCellFormat.js","../src/format/TableColFormat.js","../src/format/TableColgroupFormat.js","../src/format/TableRowFormat.js","../src/format/TableFormat.js","../src/format/TableWrapperFormat.js","../src/format/rewrite/List.js","../src/module/TableSelection.js","../src/module/TableToolTip.js","../src/assets/const/vars.js","../src/index.js"],"sourcesContent":["export const CREATE_TABLE = 'createTable';\r\n","export const blotName = {\r\n    contain: 'contain',\r\n    tableWrapper: 'tableWrapper',\r\n    table: 'table',\r\n    tableColGroup: 'colgroup',\r\n    tableCol: 'col',\r\n    tableBody: 'tbody',\r\n    tableRow: 'tr',\r\n    tableCell: 'td',\r\n    tableCellInner: 'tableCellInner',\r\n};\r\nexport const moduleName = {\r\n    table: 'table',\r\n};\r\nexport const toolName = {\r\n    table: 'table',\r\n};\r\n","import { CREATE_TABLE } from '../assets/const';\r\n\r\nexport const randomId = () => Math.random().toString(36).slice(2);\r\n\r\nlet zindex = 8000;\r\nexport const dialog = ({ child, target = document.body, beforeClose = () => {} } = {}) => {\r\n    const appendTo = target;\r\n    const dialog = document.createElement('div');\r\n    dialog.classList.add('dialog');\r\n    dialog.style.zIndex = zindex;\r\n    const overlay = document.createElement('div');\r\n    overlay.classList.add('dialog_overlay');\r\n    dialog.appendChild(overlay);\r\n    if (child) {\r\n        const content = document.createElement('div');\r\n        content.classList.add('dialog_content');\r\n        content.appendChild(child);\r\n        overlay.appendChild(content);\r\n        content.onclick = (e) => {\r\n            e.stopPropagation();\r\n        };\r\n    }\r\n\r\n    const originOverflow = getComputedStyle(appendTo).overflow;\r\n    appendTo.style.overflow = 'hidden';\r\n\r\n    appendTo.appendChild(dialog);\r\n    const close = () => {\r\n        beforeClose();\r\n        dialog.remove();\r\n        appendTo.style.overflow = originOverflow;\r\n    };\r\n    dialog.onclick = close;\r\n    zindex += 1;\r\n\r\n    return { dialog, close };\r\n};\r\n\r\n/**\r\n * 创建一个带 label 的输入框\r\n *\r\n * @param {string} label - The label for the input item.\r\n * @param {object} options - The options for the input item.\r\n * @param {string} options.type - The type of the input.\r\n * @param {string} options.value - The initial value of the input.\r\n * @param {number} options.max - The maximum value allowed for the input.\r\n * @param {number} options.min - The minimum value allowed for the input.\r\n * @return {object} An object containing the input item, the input element, and an error tip function.\r\n */\r\nexport const createInputItem = (label, options) => {\r\n    options.type || (options.type = 'text');\r\n    options.value || (options.value = '');\r\n\r\n    const inputItem = document.createElement('div');\r\n    inputItem.classList.add('input_item');\r\n\r\n    if (label) {\r\n        const inputLabel = document.createElement('span');\r\n        inputLabel.classList.add('input_label');\r\n        inputLabel.innerText = label;\r\n        inputItem.appendChild(inputLabel);\r\n    }\r\n\r\n    const inputInput = document.createElement('div');\r\n    inputInput.classList.add('input_input');\r\n    const input = document.createElement('input');\r\n    for (const key in options) {\r\n        input.setAttribute(key, options[key]);\r\n    }\r\n    if (options.max || options.min) {\r\n        input.addEventListener('blur', () => {\r\n            if (options.max && options.max <= input.value) {\r\n                input.value = options.max;\r\n            }\r\n            if (options.min && options.min >= input.value) {\r\n                input.value = options.min;\r\n            }\r\n        });\r\n    }\r\n\r\n    inputInput.appendChild(input);\r\n    inputItem.appendChild(inputInput);\r\n\r\n    input.onfocus = () => {\r\n        inputInput.classList.add('focus');\r\n    };\r\n    input.onblur = () => {\r\n        inputInput.classList.remove('focus');\r\n    };\r\n\r\n    const errorTip = (msg) => {\r\n        if (inputInput.classList.contains('error')) {\r\n            inputInput.querySelector('.error_tip').innerText = msg;\r\n        } else {\r\n            const errorTip = document.createElement('span');\r\n            errorTip.classList.add('error_tip');\r\n            errorTip.innerText = msg;\r\n            inputInput.appendChild(errorTip);\r\n        }\r\n\r\n        inputInput.classList.add('error');\r\n\r\n        const removeError = () => {\r\n            inputInput.classList.remove('error');\r\n            errorTip.remove();\r\n        };\r\n        return { removeError };\r\n    };\r\n\r\n    return { item: inputItem, input, errorTip };\r\n};\r\n\r\n/**\r\n * 创建具有指定行数和列数的表格\r\n *\r\n * @param {number} row - The number of rows for the table (optional, default: 3)\r\n * @param {number} col - The number of columns for the table (optional, default: 3)\r\n * @return {Promise} A promise that resolves with an object containing the row and column values when the table creation is confirmed, or rejects if the dialog is closed without confirmation.\r\n */\r\nexport const showTableCreator = async (row = 3, col = 3) => {\r\n    const box = document.createElement('div');\r\n    box.classList.add('create_box');\r\n    const inputContent = document.createElement('div');\r\n    inputContent.classList.add('create_input_content');\r\n\r\n    const {\r\n        item: rowItem,\r\n        input: rowInput,\r\n        errorTip: rowErrorTip,\r\n    } = createInputItem('row', { type: 'number', value: row, max: 99 });\r\n    const {\r\n        item: colItem,\r\n        input: colInput,\r\n        errorTip: colErrorTip,\r\n    } = createInputItem('col', { type: 'number', value: col, max: 99 });\r\n\r\n    inputContent.appendChild(rowItem);\r\n    inputContent.appendChild(colItem);\r\n    box.appendChild(inputContent);\r\n\r\n    const control = document.createElement('div');\r\n    control.classList.add('create_control');\r\n\r\n    const confirmBtn = document.createElement('button');\r\n    confirmBtn.classList.add('create_control_btn', 'confirm');\r\n    confirmBtn.innerText = 'Confirm';\r\n\r\n    const cancelBtn = document.createElement('button');\r\n    cancelBtn.classList.add('create_control_btn', 'cancel');\r\n    cancelBtn.innerText = 'Cancel';\r\n\r\n    control.appendChild(confirmBtn);\r\n    control.appendChild(cancelBtn);\r\n    box.appendChild(control);\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const { close } = dialog({ child: box, beforeClose: reject });\r\n\r\n        confirmBtn.onclick = async () => {\r\n            const row = Number(rowInput.value);\r\n            const col = Number(colInput.value);\r\n\r\n            if (isNaN(row) || row <= 0) {\r\n                return rowErrorTip('Invalid number');\r\n            }\r\n            if (isNaN(col) || col <= 0) {\r\n                return colErrorTip('Invalid number');\r\n            }\r\n            resolve({ row, col });\r\n            close();\r\n        };\r\n        cancelBtn.onclick = () => {\r\n            close();\r\n        };\r\n    });\r\n};\r\n\r\n/**\r\n * 显示表格选择器\r\n */\r\nexport const showTableSelector = () => {\r\n    const selectDom = document.createElement('div');\r\n    selectDom.classList.add('create_select');\r\n\r\n    const selectBlock = document.createElement('div');\r\n    selectBlock.classList.add('create_select_block');\r\n\r\n    for (let r = 0; r < 8; r++) {\r\n        for (let c = 0; c < 8; c++) {\r\n            const selectItem = document.createElement('div');\r\n            selectItem.classList.add('create_select_block_item');\r\n            selectItem.dataset.row = r + 1;\r\n            selectItem.dataset.col = c + 1;\r\n            selectBlock.appendChild(selectItem);\r\n        }\r\n    }\r\n\r\n    const selectCustom = document.createElement('div');\r\n    selectCustom.classList.add('create_select_custom');\r\n    selectCustom.innerText = '自定义行列数';\r\n\r\n    selectDom.appendChild(selectBlock);\r\n    selectDom.appendChild(selectCustom);\r\n\r\n    const sendTableData = ({ row, col }) => {\r\n        selectDom.dispatchEvent(new CustomEvent(CREATE_TABLE, { detail: { row: Number(row), col: Number(col) } }));\r\n    };\r\n    const updateSelectBlockItems = () => {\r\n        const { row, col } = selectDom.dataset;\r\n        [].forEach.call(selectBlock.querySelectorAll('.active'), (item) => {\r\n            item.classList.remove('active');\r\n        });\r\n        if (!row || !col) return;\r\n        const childs = Array.from(selectBlock.children);\r\n        for (let i = 0; i < childs.length; i++) {\r\n            if (childs[i].dataset.row > row && childs[i].dataset.col > col) {\r\n                return;\r\n            }\r\n            if (childs[i].dataset.row <= row && childs[i].dataset.col <= col) {\r\n                childs[i].classList.add('active');\r\n            } else {\r\n                childs[i].classList.remove('active');\r\n            }\r\n        }\r\n    };\r\n    selectBlock.addEventListener('mousemove', (e) => {\r\n        const { row, col } = e.target.dataset;\r\n        if (!row || !col) return;\r\n        selectDom.dataset.row = row;\r\n        selectDom.dataset.col = col;\r\n        updateSelectBlockItems();\r\n    });\r\n    selectBlock.addEventListener('mouseleave', (e) => {\r\n        selectDom.removeAttribute('data-row');\r\n        selectDom.removeAttribute('data-col');\r\n        updateSelectBlockItems();\r\n    });\r\n    selectBlock.addEventListener('click', () => {\r\n        const { row, col } = selectDom.dataset;\r\n        if (!row || !col) return;\r\n        sendTableData({ row, col });\r\n    });\r\n\r\n    selectCustom.addEventListener('click', () => {\r\n        showTableCreator().then(({ row, col }) => {\r\n            sendTableData({ row, col });\r\n        });\r\n    });\r\n\r\n    return selectDom;\r\n};\r\n\r\nexport function css(domNode, rules) {\r\n    if (typeof rules === 'object') {\r\n        for (let prop in rules) {\r\n            domNode.style[prop] = rules[prop];\r\n        }\r\n    }\r\n}\r\n\r\nexport function getRelativeRect(targetRect, container) {\r\n    let containerRect = container.getBoundingClientRect();\r\n\r\n    return {\r\n        x: targetRect.x - containerRect.x - container.scrollLeft,\r\n        y: targetRect.y - containerRect.y - container.scrollTop,\r\n        x1: targetRect.x - containerRect.x - container.scrollLeft + targetRect.width,\r\n        y1: targetRect.y - containerRect.y - container.scrollTop + targetRect.height,\r\n        width: targetRect.width,\r\n        height: targetRect.height,\r\n    };\r\n}\r\n\r\nexport function computeBoundaryFromRects(startRect, endRect) {\r\n    let x = Math.min(startRect.x, endRect.x, startRect.x + startRect.width - 1, endRect.x + endRect.width - 1);\r\n    let x1 = Math.max(startRect.x, endRect.x, startRect.x + startRect.width - 1, endRect.x + endRect.width - 1);\r\n    let y = Math.min(startRect.y, endRect.y, startRect.y + startRect.height - 1, endRect.y + endRect.height - 1);\r\n    let y1 = Math.max(startRect.y, endRect.y, startRect.y + startRect.height - 1, endRect.y + endRect.height - 1);\r\n\r\n    let width = x1 - x;\r\n    let height = y1 - y;\r\n\r\n    return { x, x1, y, y1, width, height };\r\n}\r\n\r\nexport function isString(val) {\r\n    return typeof val === 'string';\r\n}\r\nexport function isFunction(val) {\r\n    return typeof val === 'function';\r\n}\r\nexport function isUndefined(val) {\r\n    return val === undefined;\r\n}\r\nexport function isArray(val) {\r\n    return Array.isArray(val);\r\n}\r\n","import { css, isFunction, isString, isArray } from '../utils';\r\nimport { moduleName } from '../assets/const';\r\n\r\nconst MENU_ITEMS_DEFAULT = {\r\n    insertColumnLeft: {\r\n        text: '在左侧插入一列',\r\n        handler() {\r\n            const tableModule = this.quill.getModule(moduleName.table);\r\n            tableModule.appendCol();\r\n            tableModule.hideTableTools();\r\n        },\r\n    },\r\n    insertColumnRight: {\r\n        text: '在右侧插入一列',\r\n        handler() {\r\n            const tableModule = this.quill.getModule(moduleName.table);\r\n            tableModule.appendCol(true);\r\n            tableModule.hideTableTools();\r\n        },\r\n    },\r\n    insertRowTop: {\r\n        text: '在上方插入一行',\r\n        handler() {\r\n            const tableModule = this.quill.getModule(moduleName.table);\r\n            tableModule.appendRow();\r\n            tableModule.hideTableTools();\r\n        },\r\n    },\r\n    insertRowBottom: {\r\n        text: '在下方插入一行',\r\n        groupEnd: true,\r\n        handler() {\r\n            const tableModule = this.quill.getModule(moduleName.table);\r\n            tableModule.appendRow(true);\r\n            tableModule.hideTableTools();\r\n        },\r\n    },\r\n    removeCol: {\r\n        text: '删除所在列',\r\n        handler() {\r\n            const tableModule = this.quill.getModule(moduleName.table);\r\n            tableModule.removeCol();\r\n            tableModule.hideTableTools();\r\n        },\r\n    },\r\n    removeRow: {\r\n        text: '删除所在行',\r\n        handler() {\r\n            const tableModule = this.quill.getModule(moduleName.table);\r\n            tableModule.removeRow();\r\n            tableModule.hideTableTools();\r\n        },\r\n    },\r\n    removeTable: {\r\n        text: '删除表格',\r\n        groupEnd: true,\r\n        handler() {\r\n            const tableModule = this.quill.getModule(moduleName.table);\r\n            tableModule.removeTable();\r\n            tableModule.hideTableTools();\r\n        },\r\n    },\r\n    mergeCell: {\r\n        text: '合并单元格',\r\n        groupEnd: true,\r\n        handler() {\r\n            const tableModule = this.quill.getModule(moduleName.table);\r\n            tableModule.mergeCells();\r\n            tableModule.hideTableTools();\r\n        },\r\n    },\r\n    setBackgroundColor: {\r\n        text() {\r\n            const subTitle = document.createElement('span');\r\n            subTitle.innerText = '设置背景颜色';\r\n\r\n            const tableModule = this.quill.getModule(moduleName.table);\r\n            const input = document.createElement('input');\r\n            input.type = 'color';\r\n            input.addEventListener('click', (e) => {\r\n                e.stopPropagation();\r\n            });\r\n            const tempCells = tableModule.tableSelection.selectedTds;\r\n            input.addEventListener('input', () => {\r\n                tableModule.setStyle({ backgroundColor: input.value }, tempCells);\r\n            });\r\n            input.style.marginLeft = 'auto';\r\n            return [subTitle, input];\r\n        },\r\n    },\r\n    clearBackgroundColor: {\r\n        text: '清除背景颜色',\r\n        handler() {\r\n            const tableModule = this.quill.getModule(moduleName.table);\r\n            tableModule.setStyle({ backgroundColor: null }, tableModule.tableSelection.selectedTds);\r\n        },\r\n    },\r\n    setBorderColor: {\r\n        text() {\r\n            const subTitle = document.createElement('span');\r\n            subTitle.innerText = '设置边框颜色';\r\n\r\n            const tableModule = this.quill.getModule(moduleName.table);\r\n            const input = document.createElement('input');\r\n            input.type = 'color';\r\n            input.addEventListener('click', (e) => {\r\n                e.stopPropagation();\r\n            });\r\n            const tempCells = tableModule.tableSelection.selectedTds;\r\n            input.addEventListener('input', () => {\r\n                tableModule.setStyle({ borderColor: input.value }, tempCells);\r\n            });\r\n            input.style.marginLeft = 'auto';\r\n            return [subTitle, input];\r\n        },\r\n    },\r\n    clearBorderColor: {\r\n        text: '清除边框颜色',\r\n        handler() {\r\n            const tableModule = this.quill.getModule(moduleName.table);\r\n            tableModule.setStyle({ borderColor: null }, tableModule.tableSelection.selectedTds);\r\n        },\r\n    },\r\n};\r\nconst MENU_MIN_HEIHGT = 150;\r\n\r\n/*\r\n    options = {\r\n        items: {\r\n           functionName: {\r\n                text: '显示文字',\r\n                handle() {},    // 触发事件\r\n                iconSrc: string,    // icon url\r\n                groupEnd: boolean, // 是否显示分隔线\r\n                subTitle: '显示子标题',\r\n            }\r\n        }\r\n    }\r\n*/\r\nexport class TableOperationMenu {\r\n    constructor(params, quill, options = {}) {\r\n        this.table = params.table;\r\n        this.quill = quill;\r\n        this.options = options;\r\n        const tableModule = this.quill.getModule(moduleName.table);\r\n        this.tableSelection = tableModule.tableSelection;\r\n        this.menuItems = {};\r\n        this.optionsMerge();\r\n\r\n        this.boundary = this.tableSelection.boundary;\r\n        this.selectedTds = this.tableSelection.selectedTds;\r\n\r\n        this.destroyHandler = this.destroy.bind(this);\r\n        this.menuInitial(params);\r\n\r\n        document.addEventListener('click', this.destroyHandler, false);\r\n    }\r\n\r\n    optionsMerge() {\r\n        if (this.options?.replaceItems) {\r\n            this.menuItems = this.options?.items ?? {};\r\n        } else {\r\n            this.menuItems = Object.assign({}, MENU_ITEMS_DEFAULT, this.options?.items ?? {});\r\n        }\r\n    }\r\n\r\n    setMenuPosition({ left, top }) {\r\n        const containerRect = this.quill.container.getBoundingClientRect();\r\n        const menuRect = this.domNode.getBoundingClientRect();\r\n        let resLeft = left - containerRect.left;\r\n        let resTop = top - containerRect.top;\r\n        if (resLeft + menuRect.width > containerRect.width) {\r\n            resLeft = containerRect.width - menuRect.width;\r\n        }\r\n        if (resTop + menuRect.height > containerRect.height) {\r\n            resTop = containerRect.height - menuRect.height;\r\n        }\r\n        Object.assign(this.domNode.style, {\r\n            left: `${resLeft}px`,\r\n            top: `${resTop}px`,\r\n        });\r\n    }\r\n\r\n    menuInitial({ table, row, cell, left, top }) {\r\n        this.domNode = document.createElement('div');\r\n        this.domNode.classList.add('ql-table-operation-menu');\r\n\r\n        css(this.domNode, {\r\n            position: 'absolute',\r\n            'min-height': `${MENU_MIN_HEIHGT}px`,\r\n        });\r\n\r\n        for (const name in this.menuItems) {\r\n            if (this.menuItems[name]) {\r\n                if (this.menuItems[name].subTitle) {\r\n                    this.domNode.appendChild(subTitleCreator(this.menuItems[name].subTitle));\r\n                }\r\n\r\n                this.domNode.appendChild(\r\n                    this.menuItemCreator(Object.assign({}, MENU_ITEMS_DEFAULT[name], this.menuItems[name]))\r\n                );\r\n\r\n                if (this.menuItems[name].groupEnd) {\r\n                    this.domNode.appendChild(dividingCreator());\r\n                }\r\n            }\r\n        }\r\n\r\n        this.quill.container.appendChild(this.domNode);\r\n        this.setMenuPosition({ left, top });\r\n        // create dividing line\r\n        function dividingCreator() {\r\n            const dividing = document.createElement('div');\r\n            dividing.classList.add('ql-table-operation-menu-dividing');\r\n            return dividing;\r\n        }\r\n\r\n        // create subtitle for menu\r\n        function subTitleCreator(title) {\r\n            const subTitle = document.createElement('div');\r\n            subTitle.classList.add('ql-table-operation-menu-subtitle');\r\n            subTitle.innerText = title;\r\n            return subTitle;\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.domNode.remove();\r\n        document.removeEventListener('click', this.destroyHandler, false);\r\n        return null;\r\n    }\r\n\r\n    menuItemCreator({ text, iconSrc, handler }) {\r\n        const node = document.createElement('div');\r\n        node.classList.add('ql-table-operation-menu-item');\r\n\r\n        if (iconSrc) {\r\n            const iconSpan = document.createElement('span');\r\n            iconSpan.classList.add('ql-table-operation-menu-icon');\r\n            iconSpan.innerHTML = iconSrc;\r\n            node.appendChild(iconSpan);\r\n        }\r\n\r\n        if (isString(text)) {\r\n            const textSpan = document.createElement('span');\r\n            textSpan.classList.add('ql-table-operation-menu-text');\r\n            textSpan.innerText = text;\r\n            node.appendChild(textSpan);\r\n        } else if (isFunction(text)) {\r\n            let nodes = text.call(this);\r\n            if (!isArray(nodes)) {\r\n                nodes = [nodes];\r\n            }\r\n            nodes.map((sub) => node.appendChild(sub));\r\n        }\r\n\r\n        isFunction(handler) && node.addEventListener('click', handler.bind(this), false);\r\n        return node;\r\n    }\r\n}\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableBodyFormat extends Container {\r\n    optimize() {\r\n        super.optimize();\r\n        const next = this.next;\r\n        if (\r\n            next != null &&\r\n            next.prev === this &&\r\n            next.statics.blotName === this.statics.blotName &&\r\n            next.domNode.tagName === this.domNode.tagName\r\n        ) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n\r\n    deleteAt(index, length) {\r\n        if (index === 0 && length === this.length()) {\r\n            this.parent.remove();\r\n        }\r\n        this.children.forEachAt(index, length, function (child, offset, length) {\r\n            child.deleteAt(offset, length);\r\n        });\r\n    }\r\n}\r\nTableBodyFormat.blotName = blotName.tableBody;\r\nTableBodyFormat.tagName = 'tbody';\r\nTableBodyFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport { TableBodyFormat };\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass ContainBlot extends Container {\r\n    static create() {\r\n        const node = super.create();\r\n        return node;\r\n    }\r\n\r\n    insertBefore(blot, ref) {\r\n        if (blot.statics.blotName == this.statics.blotName) {\r\n            super.insertBefore(blot.children.head, ref);\r\n        } else {\r\n            super.insertBefore(blot, ref);\r\n        }\r\n    }\r\n\r\n    format(name, value) {\r\n        this.children.tail.format(name, value);\r\n    }\r\n\r\n    replace(target) {\r\n        if (target.statics.blotName !== this.statics.blotName) {\r\n            const item = Parchment.create(this.statics.defaultChild);\r\n            target.moveChildren(item);\r\n            this.appendChild(item);\r\n        }\r\n        if (target.parent == null) return;\r\n        super.replace(target);\r\n    }\r\n}\r\n\r\nContainBlot.blotName = blotName.contain;\r\nContainBlot.tagName = 'contain';\r\nContainBlot.scope = Parchment.Scope.BLOCK_BLOT;\r\nContainBlot.defaultChild = 'block';\r\n\r\nexport { ContainBlot };\r\n","import Quill from 'quill';\r\nimport { ContainBlot } from '../blot/contain';\r\nimport { blotName } from '../assets/const';\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableCellInnerFormat extends ContainBlot {\r\n    static create(value) {\r\n        const { tableId, rowId, colId, rowspan, colspan, style } = value;\r\n        const node = super.create();\r\n        node.dataset.tableId = tableId;\r\n        node.dataset.rowId = rowId;\r\n        node.dataset.colId = colId;\r\n        node.dataset.rowspan = rowspan || 1;\r\n        node.dataset.colspan = colspan || 1;\r\n        node._style = style;\r\n        return node;\r\n    }\r\n\r\n    // 仅 Block 存在 cache, 存在 cache 时不会获取最新 delta, cache 还会保存父级 format(bubbleFormats 函数), 需要清除以获取最新 delta\r\n    clearDeltaCache() {\r\n        this.children.forEach((child) => {\r\n            child.cache = {};\r\n        });\r\n    }\r\n\r\n    get rowId() {\r\n        return this.domNode.dataset.rowId;\r\n    }\r\n    get colId() {\r\n        return this.domNode.dataset.colId;\r\n    }\r\n    get rowspan() {\r\n        return Number(this.domNode.dataset.rowspan);\r\n    }\r\n    set rowspan(value) {\r\n        this.parent && (this.parent.rowspan = value);\r\n        this.domNode.dataset.rowspan = value;\r\n        this.clearDeltaCache();\r\n    }\r\n    get colspan() {\r\n        return Number(this.domNode.dataset.colspan);\r\n    }\r\n    set colspan(value) {\r\n        this.parent && (this.parent.colspan = value);\r\n        this.domNode.dataset.colspan = value;\r\n        this.clearDeltaCache();\r\n    }\r\n    set style(value) {\r\n        this.parent.style = value;\r\n        this.domNode._style = this.parent.style;\r\n        this.clearDeltaCache();\r\n    }\r\n\r\n    replace(target) {\r\n        if (target.statics.blotName !== this.statics.blotName) {\r\n            const cloneTarget = target.clone();\r\n            target.moveChildren(cloneTarget);\r\n            this.appendChild(cloneTarget);\r\n            target.parent.insertBefore(this, target.next);\r\n            target.remove();\r\n        } else {\r\n            super.replace(target);\r\n        }\r\n    }\r\n\r\n    format(name, value) {\r\n        super.format(name, value);\r\n        this.clearDeltaCache();\r\n    }\r\n\r\n    formats() {\r\n        const { tableId, rowId, colId, rowspan, colspan } = this.domNode.dataset;\r\n        return {\r\n            [this.statics.blotName]: {\r\n                tableId,\r\n                rowId,\r\n                colId,\r\n                rowspan,\r\n                colspan,\r\n                style: this.domNode._style,\r\n            },\r\n        };\r\n    }\r\n\r\n    optimize() {\r\n        super.optimize();\r\n\r\n        const parent = this.parent;\r\n        // 父级非表格，则将当前 blot 放入表格中\r\n        const { tableId, colId, rowId, rowspan, colspan } = this.domNode.dataset;\r\n        if (parent != null && parent.statics.blotName != blotName.tableCell) {\r\n            const mark = Parchment.create('block');\r\n\r\n            this.parent.insertBefore(mark, this.next);\r\n            const tableWrapper = Parchment.create(blotName.tableWrapper, tableId);\r\n            const table = Parchment.create(blotName.table, tableId);\r\n            const tableBody = Parchment.create(blotName.tableBody);\r\n            const tr = Parchment.create(blotName.tableRow, rowId);\r\n            const td = Parchment.create(blotName.tableCell, {\r\n                tableId,\r\n                rowId,\r\n                colId,\r\n                rowspan,\r\n                colspan,\r\n                style: this.domNode._style,\r\n            });\r\n\r\n            td.appendChild(this);\r\n            tr.appendChild(td);\r\n            tableBody.appendChild(tr);\r\n            table.appendChild(tableBody);\r\n            tableWrapper.appendChild(table);\r\n\r\n            tableWrapper.replace(mark);\r\n        }\r\n\r\n        const next = this.next;\r\n        // cell 下有多个 cellInner 全部合并\r\n        if (next != null && next.prev === this && next.statics.blotName === this.statics.blotName) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n}\r\n\r\nTableCellInnerFormat.blotName = blotName.tableCellInner;\r\nTableCellInnerFormat.tagName = 'p';\r\nTableCellInnerFormat.className = 'ql-table-cell-inner';\r\n\r\nexport { TableCellInnerFormat };\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nimport { TableCellInnerFormat } from './TableCellInnerFormat';\r\nconst Parchment = Quill.import('parchment');\r\nconst Container = Quill.import('blots/container');\r\n\r\nclass TableCellFormat extends Container {\r\n    static create(value) {\r\n        const { rowId, colId, rowspan, colspan, style } = value;\r\n        const node = super.create();\r\n        node.dataset.rowId = rowId;\r\n        node.dataset.colId = colId;\r\n        node.setAttribute('rowspan', rowspan || 1);\r\n        node.setAttribute('colspan', colspan || 1);\r\n        node.style.cssText = style;\r\n        return node;\r\n    }\r\n\r\n    get rowId() {\r\n        return this.domNode.dataset.rowId;\r\n    }\r\n    get colId() {\r\n        return this.domNode.dataset.colId;\r\n    }\r\n    get rowspan() {\r\n        return Number(this.domNode.getAttribute('rowspan'));\r\n    }\r\n    set rowspan(value) {\r\n        this.domNode.setAttribute('rowspan', value);\r\n    }\r\n    get colspan() {\r\n        return Number(this.domNode.getAttribute('colspan'));\r\n    }\r\n    set colspan(value) {\r\n        this.domNode.setAttribute('colspan', value);\r\n    }\r\n    get style() {\r\n        return this.domNode.style.cssText;\r\n    }\r\n    set style(value) {\r\n        Object.assign(this.domNode.style, value);\r\n    }\r\n\r\n    getCellInner() {\r\n        return this.descendants(TableCellInnerFormat)[0];\r\n    }\r\n\r\n    optimize() {\r\n        super.optimize();\r\n        const { colId, rowId } = this.domNode.dataset;\r\n        const next = this.next;\r\n        if (\r\n            next != null &&\r\n            next.prev === this &&\r\n            next.statics.blotName === this.statics.blotName &&\r\n            next.domNode.dataset.rowId === rowId &&\r\n            next.domNode.dataset.colId === colId\r\n        ) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n\r\n    deleteAt(index, length) {\r\n        if (index === 0 && length === this.length()) {\r\n            const cell = this.next || this.prev;\r\n            const cellInner = cell && cell.getCellInner();\r\n            if (cellInner) {\r\n                cellInner.colspan += this.colspan;\r\n            }\r\n            return this.remove();\r\n        }\r\n        this.children.forEachAt(index, length, function (child, offset, length) {\r\n            child.deleteAt(offset, length);\r\n        });\r\n    }\r\n}\r\n\r\nTableCellFormat.blotName = blotName.tableCell;\r\nTableCellFormat.tagName = 'td';\r\nTableCellFormat.className = 'ql-table-cell';\r\nTableCellFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport { TableCellFormat };\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nconst Parchment = Quill.import('parchment');\r\nimport { ContainBlot } from '../blot/contain';\r\n\r\nclass TableColFormat extends ContainBlot {\r\n    static create(value) {\r\n        const { width, tableId, colId, full } = value;\r\n        const node = super.create();\r\n        node.setAttribute('width', width);\r\n        full && node.setAttribute('data-full', full);\r\n        node.dataset.tableId = tableId;\r\n        node.dataset.colId = colId;\r\n        node.setAttribute('contenteditable', false);\r\n        return node;\r\n    }\r\n\r\n    get width() {\r\n        const width = this.domNode.getAttribute('width');\r\n        if (isNaN(width) && !width.endsWith('%')) return null;\r\n        return parseFloat(width);\r\n    }\r\n    set width(value) {\r\n        return this.domNode.setAttribute('width', value);\r\n    }\r\n\r\n    get colId() {\r\n        return this.domNode.dataset.colId;\r\n    }\r\n\r\n    get full() {\r\n        return this.domNode.hasAttribute('data-full');\r\n    }\r\n\r\n    format() {\r\n        return;\r\n    }\r\n\r\n    formats() {\r\n        const { tableId, colId } = this.domNode.dataset;\r\n        return {\r\n            [this.statics.blotName]: {\r\n                tableId,\r\n                colId,\r\n                width: this.domNode.getAttribute('width'),\r\n                full: this.domNode.hasAttribute('data-full'),\r\n            },\r\n        };\r\n    }\r\n\r\n    optimize() {\r\n        super.optimize();\r\n\r\n        const parent = this.parent;\r\n        if (parent != null && parent.statics.blotName != blotName.tableColGroup) {\r\n            const mark = Parchment.create('block');\r\n            this.parent.insertBefore(mark, this.next);\r\n\r\n            const tableWrapper = Parchment.create(blotName.tableWrapper, this.domNode.dataset.tableId);\r\n            const table = Parchment.create(blotName.table, this.domNode.dataset.tableId);\r\n\r\n            this.full && (table.full = true);\r\n\r\n            const tableColgroup = Parchment.create(blotName.tableColGroup);\r\n\r\n            tableColgroup.appendChild(this);\r\n            table.appendChild(tableColgroup);\r\n            tableWrapper.appendChild(table);\r\n\r\n            tableWrapper.replace(mark);\r\n        }\r\n        const next = this.next;\r\n        const { tableId: ttableId, colId: tcolId } = this.domNode.dataset;\r\n        if (\r\n            next != null &&\r\n            next.statics.blotName === this.statics.blotName &&\r\n            next.domNode.tagName === this.domNode.tagName &&\r\n            next.domNode.dataset.tableId === ttableId &&\r\n            next.domNode.dataset.colId === tcolId\r\n        ) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n}\r\nTableColFormat.blotName = blotName.tableCol;\r\nTableColFormat.tagName = 'col';\r\nTableColFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport { TableColFormat };\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableColgroupFormat extends Container {\r\n    optimize() {\r\n        super.optimize();\r\n        const next = this.next;\r\n        if (\r\n            next != null &&\r\n            next.prev === this &&\r\n            next.statics.blotName === this.statics.blotName &&\r\n            next.domNode.tagName === this.domNode.tagName\r\n        ) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n\r\n    findCol(index) {\r\n        const next = this.children.iterator();\r\n        let i = 0;\r\n        let cur;\r\n        while ((cur = next())) {\r\n            if (i === index) {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        return cur;\r\n    }\r\n}\r\nTableColgroupFormat.blotName = blotName.tableColGroup;\r\nTableColgroupFormat.tagName = 'colgroup';\r\nTableColgroupFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport { TableColgroupFormat };\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nimport { TableCellInnerFormat } from './TableCellInnerFormat';\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableRowFormat extends Container {\r\n    static create(value) {\r\n        const node = super.create();\r\n        node.dataset.rowId = value;\r\n        return node;\r\n    }\r\n\r\n    optimize() {\r\n        super.optimize();\r\n        const next = this.next;\r\n        if (\r\n            next != null &&\r\n            next.prev === this &&\r\n            next.statics.blotName === this.statics.blotName &&\r\n            next.domNode.dataset.rowId === this.domNode.dataset.rowId\r\n        ) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n\r\n    get rowId() {\r\n        return this.domNode.dataset.rowId;\r\n    }\r\n\r\n    foreachCellInner(func) {\r\n        const next = this.children.iterator();\r\n        let i = 0;\r\n        let cur;\r\n        while ((cur = next())) {\r\n            const [tableCell] = cur.descendants(TableCellInnerFormat);\r\n            if (func(tableCell, i++)) break;\r\n        }\r\n    }\r\n}\r\n\r\nTableRowFormat.blotName = blotName.tableRow;\r\nTableRowFormat.tagName = 'tr';\r\nTableRowFormat.className = 'ql-table-row';\r\nTableRowFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport { TableRowFormat };\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nimport { TableRowFormat } from './TableRowFormat';\r\nimport { TableColFormat } from './TableColFormat';\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableFormat extends Container {\r\n    constructor(domNode, value) {\r\n        super(domNode, value);\r\n\r\n        this.formatTableWidth();\r\n    }\r\n\r\n    static create(value) {\r\n        const node = super.create();\r\n\r\n        node.dataset.tableId = value;\r\n        node.classList.add('ql-table');\r\n        node.setAttribute('cellpadding', 0);\r\n        node.setAttribute('cellspacing', 0);\r\n\r\n        return node;\r\n    }\r\n\r\n    colWidthFillTable() {\r\n        if (this.full) return;\r\n        const colgroup = this.children.head;\r\n        if (!colgroup || colgroup.statics.blotName !== blotName.tableColGroup) return;\r\n\r\n        const colsWidth = colgroup.children.reduce((sum, col) => col.width + sum, 0);\r\n        if (colsWidth === 0 || isNaN(colsWidth) || this.full) return null;\r\n        this.domNode.style.width = colsWidth + 'px';\r\n        return colsWidth;\r\n    }\r\n\r\n    formatTableWidth() {\r\n        setTimeout(() => {\r\n            this.colWidthFillTable();\r\n        }, 0);\r\n    }\r\n\r\n    get tableId() {\r\n        return this.domNode.dataset.tableId;\r\n    }\r\n    get full() {\r\n        return this.domNode.hasAttribute('data-full');\r\n    }\r\n    set full(value) {\r\n        this.domNode[value ? 'setAttribute' : 'removeAttribute']('data-full', '');\r\n    }\r\n\r\n    getRows() {\r\n        return this.descendants(TableRowFormat);\r\n    }\r\n    getRowIds() {\r\n        return this.getRows().map((d) => d.rowId);\r\n    }\r\n\r\n    getCols() {\r\n        return this.descendants(TableColFormat);\r\n    }\r\n    getColIds() {\r\n        return this.getCols().map((d) => d.colId);\r\n    }\r\n\r\n    optimize() {\r\n        super.optimize();\r\n        let next = this.next;\r\n        if (\r\n            next != null &&\r\n            next.prev === this &&\r\n            next.statics.blotName === this.statics.blotName &&\r\n            next.domNode.tagName === this.domNode.tagName &&\r\n            next.domNode.dataset.tableId === this.domNode.dataset.tableId\r\n        ) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n}\r\n\r\nTableFormat.blotName = blotName.table;\r\nTableFormat.tagName = 'table';\r\nTableFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport { TableFormat };\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableWrapperFormat extends Container {\r\n    static create(value) {\r\n        const node = super.create();\r\n\r\n        node.dataset.tableId = value;\r\n\r\n        node.addEventListener(\r\n            'dragstart',\r\n            (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            },\r\n            true\r\n        );\r\n        // 不允许拖拽进 table\r\n        node.ondrop = (e) => {\r\n            e.preventDefault();\r\n        };\r\n        // 修改拖拽进入时的鼠标样式\r\n        node.ondragover = (e) => {\r\n            e.preventDefault();\r\n            e.dataTransfer.dropEffect = 'none';\r\n        };\r\n        return node;\r\n    }\r\n\r\n    get tableId() {\r\n        return this.domNode.dataset.tableId;\r\n    }\r\n\r\n    insertBefore(blot, ref) {\r\n        if (blot.statics.blotName == this.statics.blotName) {\r\n            // 合并\r\n            super.insertBefore(blot.children.head, ref);\r\n        } else if (this.statics.allowedChildren.find((child) => child.blotName === blot.statics.blotName)) {\r\n            // 允许子 blot\r\n            super.insertBefore(blot, ref);\r\n        } else {\r\n            // 非允许子 blot, ref 为 null 是插入头, 否则插入尾\r\n            if (ref) {\r\n                this.prev ? this.prev.insertBefore(blot, null) : this.parent.insertBefore(blot, this);\r\n            } else {\r\n                this.next ? this.next.insertBefore(blot, ref) : this.parent.appendChild(blot);\r\n            }\r\n        }\r\n    }\r\n\r\n    optimize() {\r\n        super.optimize();\r\n        let next = this.next;\r\n        if (\r\n            next != null &&\r\n            next.prev === this &&\r\n            next.statics.blotName === this.statics.blotName &&\r\n            next.domNode.tagName === this.domNode.tagName &&\r\n            next.domNode.dataset.tableId === this.domNode.dataset.tableId\r\n        ) {\r\n            next.moveChildren(this);\r\n            next.remove();\r\n        }\r\n    }\r\n\r\n    deleteAt(index, length) {\r\n        super.deleteAt(index, length);\r\n        // 删除 table 时隐藏当前 table 的 tooltip\r\n        document.querySelector(`.ql-table-tooltip[data-table-id=\"${this.tableId}\"]`)?.classList?.add('ql-hidden');\r\n    }\r\n}\r\nTableWrapperFormat.blotName = blotName.tableWrapper;\r\nTableWrapperFormat.tagName = 'p';\r\nTableWrapperFormat.className = 'ql-table-wrapper';\r\nTableWrapperFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport { TableWrapperFormat };\r\n","import Quill from 'quill';\r\nimport { blotName } from '../../assets/const';\r\nconst Parchment = Quill.import('parchment');\r\nconst ListItem = Quill.import('formats/list/item');\r\n\r\nclass ListItemRewrite extends ListItem {\r\n    replaceWith(name, value) {\r\n        this.parent.isolate(this.offset(this.parent), this.length());\r\n        if (name === this.parent.statics.blotName) {\r\n            this.parent.replaceWith(name, value);\r\n            return this;\r\n        } else {\r\n            if (name === blotName.tableCellInner) {\r\n                let replacement = typeof name === 'string' ? Parchment.create(name, value) : name;\r\n                replacement.replace(this.parent);\r\n                this.attributes.copy(replacement);\r\n                return replacement;\r\n            }\r\n            return super.replaceWith(name, value);\r\n        }\r\n    }\r\n}\r\nexport { ListItemRewrite };\r\n","// 以 ql-better-table 的 table-selection.js 为修改基础\r\n\r\nimport Quill from 'quill';\r\nimport { TableCellFormat } from '../format';\r\nimport { css, getRelativeRect, computeBoundaryFromRects } from '../utils';\r\n\r\nlet PRIMARY_COLOR = '#0589f3';\r\nconst ERROR_LIMIT = 2;\r\n\r\n/*\r\n\toptions = {\r\n\t\tprimaryColor: Hex color code\r\n\t}\r\n*/\r\nexport class TableSelection {\r\n    constructor(table, quill, options = {}) {\r\n        if (!table) return null;\r\n        this.table = table;\r\n        this.quill = quill;\r\n        this.options = options;\r\n        this.optionsMerge();\r\n\r\n        this.boundary = {};\r\n        // 选中的 cell\r\n        this.selectedTds = [];\r\n        this.dragging = false;\r\n        this.selectingHandler = this.mouseDownHandler.bind(this);\r\n        this.cellSelect = null; // selection 显示边框\r\n        this.scrollHandler = [];\r\n        this.helpLinesInitial();\r\n\r\n        const resizeObserver = new ResizeObserver((entries) => {\r\n            this.clearSelection();\r\n        });\r\n        resizeObserver.observe(this.quill.root);\r\n\r\n        this.quill.root.addEventListener('mousedown', this.selectingHandler, false);\r\n        this.closeHandler = this.clearSelection.bind(this);\r\n        this.quill.on(Quill.events.TEXT_CHANGE, this.closeHandler);\r\n    }\r\n\r\n    optionsMerge() {\r\n        this.options?.primaryColor && (PRIMARY_COLOR = this.options.primaryColor);\r\n    }\r\n\r\n    addScrollEvent(dom, handle) {\r\n        dom.addEventListener('scroll', handle);\r\n        this.scrollHandler.push([dom, handle]);\r\n    }\r\n\r\n    clearScrollEvent() {\r\n        for (let i = 0; i < this.scrollHandler.length; i++) {\r\n            let [dom, handle] = this.scrollHandler[i];\r\n            dom.removeEventListener('scroll', handle);\r\n        }\r\n        this.scrollHandler = [];\r\n    }\r\n\r\n    // 初始化边框 dom\r\n    helpLinesInitial() {\r\n        this.cellSelect = this.quill.addContainer('ql-table-selection_line');\r\n        css(this.cellSelect, {\r\n            'border-color': PRIMARY_COLOR,\r\n        });\r\n    }\r\n\r\n    mouseDownHandler(e) {\r\n        if (e.button !== 0 || !e.target.closest('.ql-table')) return;\r\n        const startTableId = e.target.closest('.ql-table').dataset.tableId;\r\n\r\n        const mouseMoveHandler = (e) => {\r\n            // 根据 tableId 判断是否跨表格，跨表格不计算\r\n            if (\r\n                e.button !== 0 ||\r\n                !e.target.closest('.ql-table') ||\r\n                e.target.closest('.ql-table').dataset.tableId !== startTableId\r\n            )\r\n                return;\r\n\r\n            const endTd = e.target.closest('td[data-row-id]');\r\n            const endTdRect = getRelativeRect(endTd.getBoundingClientRect(), this.quill.root.parentNode);\r\n            this.boundary = computeBoundaryFromRects(startTdRect, endTdRect);\r\n            this.correctBoundary();\r\n            this.selectedTds = this.computeSelectedTds();\r\n            this.repositionHelpLines();\r\n\r\n            if (startTd !== endTd) {\r\n                this.quill.blur();\r\n            }\r\n        };\r\n\r\n        const mouseUpHandler = (e) => {\r\n            document.body.removeEventListener('mousemove', mouseMoveHandler, false);\r\n            document.body.removeEventListener('mouseup', mouseUpHandler, false);\r\n            this.dragging = false;\r\n        };\r\n\r\n        document.body.addEventListener('mousemove', mouseMoveHandler, false);\r\n        document.body.addEventListener('mouseup', mouseUpHandler, false);\r\n\r\n        const startTd = e.target.closest('td[data-row-id]');\r\n        const startTdRect = getRelativeRect(startTd.getBoundingClientRect(), this.quill.root.parentNode);\r\n        this.dragging = true;\r\n        this.boundary = computeBoundaryFromRects(startTdRect, startTdRect);\r\n        this.correctBoundary();\r\n        this.selectedTds = this.computeSelectedTds();\r\n        this.repositionHelpLines();\r\n\r\n        this.addScrollEvent(this.table.parentNode, () => {\r\n            // 处理 boundary, 使滚动时 left 等跟随滚动\r\n            this.repositionHelpLines();\r\n        });\r\n\r\n        const srcollHide = () => {\r\n            this.clearSelection();\r\n            this.quill.root.removeEventListener('scroll', srcollHide);\r\n        };\r\n        this.quill.root.addEventListener('scroll', srcollHide);\r\n    }\r\n\r\n    computeSelectedTds() {\r\n        const tableContainer = Quill.find(this.table);\r\n        // 选中范围计算任然使用 tableCell, tableCellInner 可滚动, width 会影响\r\n        const tableCells = tableContainer.descendants(TableCellFormat);\r\n\r\n        return tableCells.reduce((selectedCells, tableCell) => {\r\n            let { x, y, width, height } = getRelativeRect(\r\n                tableCell.domNode.getBoundingClientRect(),\r\n                this.quill.root.parentNode\r\n            );\r\n            let isCellIncluded =\r\n                x + ERROR_LIMIT >= this.boundary.x &&\r\n                x - ERROR_LIMIT + width <= this.boundary.x1 &&\r\n                y + ERROR_LIMIT >= this.boundary.y &&\r\n                y - ERROR_LIMIT + height <= this.boundary.y1;\r\n\r\n            if (isCellIncluded) {\r\n                selectedCells.push(tableCell.getCellInner());\r\n            }\r\n\r\n            return selectedCells;\r\n        }, []);\r\n    }\r\n\r\n    correctBoundary() {\r\n        // 边框计算任然使用 tableCell, 有 padding 会影响\r\n        const tableContainer = Quill.find(this.table);\r\n        const tableCells = tableContainer.descendants(TableCellFormat);\r\n\r\n        tableCells.forEach((tableCell) => {\r\n            const { x, y, width, height } = getRelativeRect(\r\n                tableCell.domNode.getBoundingClientRect(),\r\n                this.quill.root.parentNode\r\n            );\r\n\r\n            const isCellIntersected =\r\n                ((x + ERROR_LIMIT >= this.boundary.x && x + ERROR_LIMIT <= this.boundary.x1) ||\r\n                    (x - ERROR_LIMIT + width >= this.boundary.x && x - ERROR_LIMIT + width <= this.boundary.x1)) &&\r\n                ((y + ERROR_LIMIT >= this.boundary.y && y + ERROR_LIMIT <= this.boundary.y1) ||\r\n                    (y - ERROR_LIMIT + height >= this.boundary.y && y - ERROR_LIMIT + height <= this.boundary.y1));\r\n\r\n            if (isCellIntersected) {\r\n                this.boundary = computeBoundaryFromRects(this.boundary, { x, y, width, height });\r\n            }\r\n        });\r\n        this.scrollX = this.table.parentNode.scrollLeft;\r\n    }\r\n    // 边框样式显示\r\n    repositionHelpLines() {\r\n        const tableViewScrollLeft = this.table.parentNode.scrollLeft;\r\n        const scrollTop = this.quill.root.parentNode.scrollTop;\r\n\r\n        css(this.cellSelect, {\r\n            display: 'block',\r\n            left: `${this.boundary.x + (this.scrollX - tableViewScrollLeft) - 1}px`,\r\n            top: `${scrollTop * 2 + this.boundary.y}px`,\r\n            width: `${this.boundary.width + 1}px`,\r\n            height: `${this.boundary.height + 1}px`,\r\n        });\r\n    }\r\n\r\n    clearSelection() {\r\n        this.boundary = {};\r\n        this.selectedTds = [];\r\n\r\n        this.cellSelect &&\r\n            css(this.cellSelect, {\r\n                display: 'none',\r\n            });\r\n        this.clearScrollEvent();\r\n    }\r\n\r\n    destroy() {\r\n        this.clearSelection();\r\n        this.cellSelect.remove();\r\n        this.cellSelect = null;\r\n        this.clearScrollEvent();\r\n\r\n        this.quill.root.removeEventListener('mousedown', this.selectingHandler, false);\r\n        this.quill.off(Quill.events.TEXT_CHANGE, this.closeHandler);\r\n\r\n        return null;\r\n    }\r\n}\r\n","import Quill from 'quill';\r\nimport { TableWrapperFormat } from '../format';\r\nimport { css, getRelativeRect } from '../utils';\r\nimport { blotName, toolName, CELL_MIN_WIDTH, CELL_MIN_PRE } from '../assets/const';\r\nlet TIP_HEIGHT = 12;\r\n/*\r\n\toptions = {\r\n\t\ttipHeight: 12,\t// tooltip height\r\n\t\tdisableToolNames: [],\t// 表格内禁用项， toolbar 的 name\r\n\t}\r\n*/\r\nexport class TableTooltip {\r\n    constructor(quill, options = {}) {\r\n        this.quill = quill;\r\n        this.options = options;\r\n        this.optionsMerge();\r\n\r\n        this.tableDisableToolHandlers = {};\r\n        this.tableWrapper = null;\r\n        this.table = null;\r\n        this.curTableId = '';\r\n        this.focusTableChange = false;\r\n        this.tableCols = [];\r\n        this.scrollHandler = [];\r\n\r\n        this.root = this.quill.addContainer('ql-table-tooltip');\r\n        this.root.style.height = TIP_HEIGHT + 'px';\r\n\r\n        const resizeObserver = new ResizeObserver((entries) => {\r\n            this.hide();\r\n            this.focusTableChange = true;\r\n            this.curTableId = '';\r\n        });\r\n        resizeObserver.observe(this.quill.root);\r\n\r\n        this.isMobile = 'ontouchstart' in window;\r\n        this.handledEvents = this.isMobile\r\n            ? { down: 'touchstart', move: 'touchmove', up: 'touchend' }\r\n            : { down: 'mousedown', move: 'mousemove', up: 'mouseup' };\r\n\r\n        this.hide();\r\n        this.listen();\r\n    }\r\n\r\n    optionsMerge() {\r\n        this.options?.tipHeight && (TIP_HEIGHT = this.options.tipHeight);\r\n        TableTooltip.disableToolNames = Array.from(\r\n            new Set([...TableTooltip.disableToolNames, ...(this.options?.disableToolNames || [])])\r\n        );\r\n    }\r\n\r\n    listen() {\r\n        this.quill.on(Quill.events.EDITOR_CHANGE, (eventName) => {\r\n            if (eventName === Quill.events.TEXT_CHANGE) {\r\n                return this.hide();\r\n            }\r\n            const range = this.quill.getSelection();\r\n            if (range == null) return;\r\n            const [tableWrapper] = this.quill.scroll.descendant(TableWrapperFormat, range.index);\r\n            if (tableWrapper !== null) {\r\n                // 此时在 table 内, 禁用部分功能\r\n                this.disableFromTable();\r\n\r\n                this.tableWrapper = tableWrapper;\r\n                this.table = tableWrapper.children.head;\r\n                // 找到 tbody\r\n                let tbody = tableWrapper.children.tail;\r\n                while (tbody && tbody.statics.blotName !== blotName.tableBody) {\r\n                    tbody = tbody.children?.tail;\r\n                }\r\n\r\n                const tableCols = tableWrapper.children.head?.children?.head;\r\n                if (tableCols.statics.blotName === blotName.tableColGroup && tableCols.children.length) {\r\n                    this.tableCols = tableCols.children.map((col) => col);\r\n                } else {\r\n                    this.tableCols = [];\r\n                }\r\n\r\n                let curTableId = tableWrapper.children.head.tableId;\r\n                if (this.curTableId !== curTableId) {\r\n                    this.clearScrollEvent();\r\n                    this.focusTableChange = true;\r\n                    // 表格滚动同步事件\r\n                    this.addScrollEvent(\r\n                        this.tableWrapper.domNode,\r\n                        this.scrollSync.bind(this, this.tableWrapper.domNode)\r\n                    );\r\n                }\r\n                this.curTableId = curTableId;\r\n\r\n                this.show();\r\n                this.position();\r\n                return;\r\n            }\r\n            this.hide();\r\n        });\r\n    }\r\n\r\n    disableFromTable() {\r\n        this.toggleDisableToolbarTools('add');\r\n\r\n        const toolbar = this.quill.getModule('toolbar');\r\n        // 防止重复触发覆盖保存事件\r\n        if (toolbar.disableByTable) return;\r\n        toolbar.disableByTable = true;\r\n\r\n        // 去除 toolbar 对应 module 的 handler 事件, 保存在 tableDisableToolHandlers\r\n        for (const toolName of TableTooltip.disableToolNames) {\r\n            this.tableDisableToolHandlers[toolName] = toolbar.handlers[toolName];\r\n            // 不要设置为 null\r\n            toolbar.handlers[toolName] = () => {};\r\n        }\r\n    }\r\n\r\n    enableFromTable() {\r\n        this.toggleDisableToolbarTools('remove');\r\n\r\n        const toolbar = this.quill.getModule('toolbar');\r\n        // 根据 tableDisableToolHandlers 恢复 handler\r\n        for (const toolName in this.tableDisableToolHandlers) {\r\n            toolbar.handlers[toolName] = this.tableDisableToolHandlers[toolName];\r\n        }\r\n        this.tableDisableToolHandlers = {};\r\n        toolbar.disableByTable = false;\r\n    }\r\n\r\n    /**\r\n     * Toggles the disable state of toolbar tools.\r\n     *\r\n     * @param {'add' | 'remove'} type - The type of toggle action to perform.\r\n     */\r\n    toggleDisableToolbarTools(type) {\r\n        const toolbar = this.quill.getModule('toolbar');\r\n        toolbar.controls.map(([name, btn]) => {\r\n            if (TableTooltip.disableToolNames.includes(name)) {\r\n                if (btn.tagName.toLowerCase() === 'select') {\r\n                    toolbar.container\r\n                        .querySelector(`.ql-picker.${btn.className}`)\r\n                        ?.classList[type]('ql-disabled-table');\r\n                } else {\r\n                    btn.classList[type]('ql-disabled-table');\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    scrollSync(dom, e) {\r\n        this.root.scrollLeft = dom.scrollLeft;\r\n    }\r\n\r\n    addScrollEvent(dom, handle) {\r\n        dom.addEventListener('scroll', handle);\r\n        this.scrollHandler.push([dom, handle]);\r\n    }\r\n\r\n    clearScrollEvent() {\r\n        for (let i = 0; i < this.scrollHandler.length; i++) {\r\n            const [dom, handle] = this.scrollHandler[i];\r\n            dom.removeEventListener('scroll', handle);\r\n        }\r\n        this.scrollHandler = [];\r\n    }\r\n\r\n    position = () => {\r\n        const rect = getRelativeRect(this.table.domNode.getBoundingClientRect(), this.quill.root);\r\n        const tableTop = this.table.domNode.offsetTop;\r\n        const rootScrollTop = this.quill.root.scrollTop;\r\n        css(this.root, {\r\n            top: `${tableTop - rootScrollTop - TIP_HEIGHT}px`,\r\n            left: rect.x + 'px', // table 距离 editor 的 padding\r\n        });\r\n    };\r\n\r\n    show() {\r\n        // 若没有 colgroup col 元素，不显示\r\n        if (!this.tableCols.length) {\r\n            return;\r\n        }\r\n\r\n        if (this.focusTableChange) {\r\n            const tableWrapperRect = this.tableWrapper.domNode.getBoundingClientRect();\r\n            // 加 tableId 用于 table 删除时隐藏 tooltip\r\n            this.root.dataset.tableId = this.tableWrapper.tableId;\r\n            this.root.innerHTML = [...this.tableCols]\r\n                .map((col) => {\r\n                    let width = col.width + (this.table.full ? '%' : 'px');\r\n                    if (!col.width) {\r\n                        width = col.domNode.getBoundingClientRect().width + 'px';\r\n                    }\r\n                    return `<div class=\"ql-table-col-header\" style=\"width: ${width}\">\r\n            \t\t\t<div class=\"ql-table-col-separator\" style=\"height: ${tableWrapperRect.height + TIP_HEIGHT - 3}px\"></div>\r\n            \t\t</div>`; // -3 为 border-width: 2, top: 1\r\n                })\r\n                .join('');\r\n\r\n            this.focusTableChange = false;\r\n            Object.assign(this.root.style, {\r\n                width: tableWrapperRect.width + 'px',\r\n            });\r\n\r\n            this.bindDrag();\r\n        }\r\n        setTimeout(() => {\r\n            this.scrollSync(this.tableWrapper.domNode);\r\n        }, 0);\r\n        this.root.classList.remove('ql-hidden');\r\n\r\n        const srcollHide = () => {\r\n            this.hide();\r\n            this.quill.root.removeEventListener('scroll', srcollHide);\r\n        };\r\n        this.quill.root.addEventListener('scroll', srcollHide);\r\n    }\r\n\r\n    hide() {\r\n        this.root.classList.add('ql-hidden');\r\n        this.enableFromTable();\r\n    }\r\n\r\n    bindDrag() {\r\n        let tipColBreak = null;\r\n        let curColIndex = -1;\r\n        let tableColHeads = Array.from(this.root.getElementsByClassName('ql-table-col-header'));\r\n        let tableColHeadSeparators = Array.from(this.root.getElementsByClassName('ql-table-col-separator'));\r\n        const appendTo = document.body;\r\n        // 设置每个 drag 下标对应 col 下标，最右会多一个 drag, 与 better-table 的类似\r\n        // 根据当前的 col left 配合 clientX 计算, 使保证最小宽度\r\n        const handleMousemove = (e) => {\r\n            // getBoundingClientRect 的 top/bottom/left/right, 这是根据视口距离\r\n            const rect = tableColHeads[curColIndex].getBoundingClientRect();\r\n            const tableWidth = this.table.domNode.getBoundingClientRect().width;\r\n            let resX = this.isMobile ? e.changedTouches[0].clientX : e.clientX;\r\n\r\n            if (this.table.full) {\r\n                // 拖拽的最大宽度是当前 col 宽度 + next col 宽度, 最后一个 col 最大宽度是当前宽度\r\n                const minWidth = (CELL_MIN_PRE / 100) * tableWidth;\r\n                const maxRange =\r\n                    resX > rect.right\r\n                        ? tableColHeads[curColIndex + 1]\r\n                            ? tableColHeads[curColIndex + 1].getBoundingClientRect().right - minWidth\r\n                            : rect.right - minWidth\r\n                        : Infinity;\r\n                const minRange = rect.x + minWidth;\r\n\r\n                resX = Math.min(Math.max(resX, minRange), maxRange);\r\n            } else {\r\n                if (resX - rect.x < CELL_MIN_WIDTH) {\r\n                    resX = rect.x + CELL_MIN_WIDTH;\r\n                }\r\n            }\r\n            resX = Math.floor(resX);\r\n            tipColBreak.style.left = resX + 'px';\r\n            tipColBreak.dataset.w = resX - rect.x;\r\n        };\r\n        const handleMouseup = (e) => {\r\n            let w = parseInt(tipColBreak.dataset.w);\r\n            // table full 时处理不同\r\n            if (this.table.full) {\r\n                // 在调整一个后把所有 col 都变成百分比\r\n                let pre = (w / this.table.domNode.getBoundingClientRect().width) * 100;\r\n                let oldWidthPre = this.tableCols[curColIndex].width;\r\n                if (pre < oldWidthPre) {\r\n                    // 缩小时若不是最后一个, 则把减少的量加在后面一个\r\n                    // 若是最后一个则把减少的量加在前面一个\r\n                    pre = Math.max(CELL_MIN_PRE, pre);\r\n                    const last = oldWidthPre - pre;\r\n                    if (this.tableCols[curColIndex + 1]) {\r\n                        this.tableCols[curColIndex + 1].width = `${this.tableCols[curColIndex + 1].width + last}%`;\r\n                    } else if (this.tableCols[curColIndex - 1]) {\r\n                        this.tableCols[curColIndex - 1].width = `${this.tableCols[curColIndex - 1].width + last}%`;\r\n                    } else {\r\n                        pre = 100;\r\n                    }\r\n                    this.tableCols[curColIndex].width = `${pre}%`;\r\n                } else {\r\n                    // 增大时若不是最后一个, 则与后面一个的宽度合并, 最大不能超过合并的宽度, 增加的量来自后面一个的减少量\r\n                    // 若是最后一个则不处理\r\n                    if (this.tableCols[curColIndex + 1]) {\r\n                        const totalWidthNextPre = oldWidthPre + this.tableCols[curColIndex + 1].width;\r\n                        pre = Math.min(totalWidthNextPre - CELL_MIN_PRE, pre);\r\n                        this.tableCols[curColIndex].width = `${pre}%`;\r\n                        this.tableCols[curColIndex + 1].width = `${totalWidthNextPre - pre}%`;\r\n                    }\r\n                }\r\n            } else {\r\n                this.table.domNode.style.width =\r\n                    parseFloat(this.table.domNode.style.width) -\r\n                    parseFloat(tableColHeads[curColIndex].style.width) +\r\n                    w +\r\n                    'px';\r\n                tableColHeads[curColIndex].style.width = `${w}px`;\r\n                this.tableCols[curColIndex].width = `${w}px`;\r\n            }\r\n            this.table.formatTableWidth();\r\n\r\n            appendTo.removeChild(tipColBreak);\r\n            tipColBreak = null;\r\n            curColIndex = -1;\r\n            document.removeEventListener(this.handledEvents.up, handleMouseup);\r\n            document.removeEventListener(this.handledEvents.move, handleMousemove);\r\n\r\n            const tableModule = this.quill.getModule(toolName.table);\r\n            tableModule.hideTableTools();\r\n        };\r\n        const handleMousedown = (i, e) => {\r\n            document.addEventListener(this.handledEvents.up, handleMouseup);\r\n            document.addEventListener(this.handledEvents.move, handleMousemove);\r\n            curColIndex = i;\r\n\r\n            const divDom = document.createElement('div');\r\n            divDom.classList.add('ql-table-drag-line');\r\n\r\n            const tableRect = this.tableWrapper.domNode.getBoundingClientRect();\r\n            css(divDom, {\r\n                top: `${tableRect.y - TIP_HEIGHT}px`,\r\n                left: `${this.isMobile ? e.changedTouches[0].clientX : e.clientX}px`,\r\n                height: `${tableRect.height + TIP_HEIGHT}px`,\r\n            });\r\n            appendTo.appendChild(divDom);\r\n\r\n            if (tipColBreak) appendTo.removeChild(tipColBreak);\r\n            tipColBreak = divDom;\r\n        };\r\n        tableColHeadSeparators.map((el, i) => {\r\n            el.addEventListener(this.handledEvents.down, handleMousedown.bind(this, i));\r\n            // 防止拖拽使触发 drag 导致可以使此元素被插入表格\r\n            el.addEventListener('dragstart', (e) => {\r\n                e.preventDefault();\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\n// 在 table 内时禁用的 tool 的 name\r\nTableTooltip.disableToolNames = [toolName.table];\r\n","// col 最小百分比宽度\r\nexport const CELL_MIN_PRE = 3;\r\n// col 最小 px 宽度\r\nexport const CELL_MIN_WIDTH = 26;\r\n","import Quill from 'quill';\r\nconst Parchment = Quill.import('parchment');\r\nconst Delta = Quill.import('delta');\r\nconst BlockEmbed = Quill.import('blots/block/embed');\r\nconst Block = Quill.import('blots/block');\r\nconst Container = Quill.import('blots/container');\r\nconst icons = Quill.import('ui/icons');\r\n\r\nimport { TableTooltip, TableSelection, TableOperationMenu } from './module';\r\nimport { ContainBlot } from './blot/contain';\r\nimport {\r\n    TableCellFormat,\r\n    TableRowFormat,\r\n    TableFormat,\r\n    TableWrapperFormat,\r\n    TableBodyFormat,\r\n    TableColgroupFormat,\r\n    TableColFormat,\r\n    TableCellInnerFormat,\r\n    ListItemRewrite,\r\n} from './format';\r\n\r\nContainBlot.allowedChildren = [Block, BlockEmbed, Container];\r\n\r\nTableWrapperFormat.allowedChildren = [TableFormat];\r\n\r\nTableFormat.allowedChildren = [TableBodyFormat, TableColgroupFormat];\r\nTableFormat.requiredContainer = TableWrapperFormat;\r\n\r\nTableBodyFormat.allowedChildren = [TableRowFormat];\r\nTableBodyFormat.requiredContainer = TableFormat;\r\n\r\nTableColgroupFormat.allowedChildren = [TableColFormat];\r\nTableColgroupFormat.requiredContainer = TableFormat;\r\n\r\nTableRowFormat.allowedChildren = [TableCellFormat];\r\nTableRowFormat.requiredContainer = TableBodyFormat;\r\n\r\nTableCellFormat.allowedChildren = [TableCellInnerFormat];\r\n\r\nTableCellInnerFormat.defaultChild = 'block';\r\n\r\nexport { ListItemRewrite };\r\n\r\nQuill.register(\r\n    {\r\n        [`formats/${ContainBlot.blotName}`]: ContainBlot,\r\n\r\n        [`formats/${TableCellInnerFormat.blotName}`]: TableCellInnerFormat,\r\n        [`formats/${TableCellFormat.blotName}`]: TableCellFormat,\r\n        [`formats/${TableRowFormat.blotName}`]: TableRowFormat,\r\n        [`formats/${TableBodyFormat.blotName}`]: TableBodyFormat,\r\n        [`formats/${TableFormat.blotName}`]: TableFormat,\r\n        [`formats/${TableWrapperFormat.blotName}`]: TableWrapperFormat,\r\n\r\n        [`formats/${TableColgroupFormat.blotName}`]: TableColgroupFormat,\r\n        [`formats/${TableColFormat.blotName}`]: TableColFormat,\r\n    },\r\n    true\r\n);\r\n\r\nimport { isFunction, randomId, showTableSelector } from './utils';\r\nimport { CREATE_TABLE, CELL_MIN_PRE, blotName, moduleName, toolName, CELL_MIN_WIDTH } from './assets/const';\r\nimport TableSvg from './assets/icons/table.svg';\r\n\r\nclass TableModule {\r\n    constructor(quill, options) {\r\n        this.quill = quill;\r\n        this.options = options;\r\n\r\n        this.controlItem = null;\r\n        this.tableInsertSelectCloseHandler = null;\r\n\r\n        const toolbar = this.quill.getModule('toolbar');\r\n        if (toolbar) {\r\n            const control = toolbar.controls.find(([name]) => name === TableModule.toolName);\r\n            if (control) {\r\n                this.controlItem = control[1].parentNode.querySelector('.ql-table.ql-picker');\r\n                // 使用 button 时会在点击后立刻聚焦输入, 若有横向滚动条会时视口锁定到 focus, 使用 select 就不会\r\n                if (this.controlItem) {\r\n                    const label = this.controlItem.getElementsByClassName('ql-picker-label')?.[0];\r\n                    label.innerHTML = TableSvg;\r\n                } else {\r\n                    this.controlItem = control[1];\r\n                }\r\n                this.buildCustomSelect(this.options.customSelect, control[1].tagName.toLowerCase());\r\n                toolbar.addHandler(TableModule.toolName, this.handleSelectDisplay.bind(this));\r\n            }\r\n        }\r\n        this.pasteTableHandler();\r\n\r\n        // 绑定 table 的选择事件\r\n        this.quill.root.addEventListener(\r\n            'click',\r\n            (evt) => {\r\n                const path = evt.path || (evt.composedPath && evt.composedPath());\r\n                if (!path || path.length <= 0) return;\r\n\r\n                const tableNode = path.filter((node) => {\r\n                    return (\r\n                        node.tagName && node.tagName.toUpperCase() === 'TABLE' && node.classList.contains('ql-table')\r\n                    );\r\n                })?.[0];\r\n                // 结束位置位处于表格内不显示\r\n                if (tableNode) {\r\n                    if (this.table === tableNode) return;\r\n                    if (this.table) this.hideTableTools();\r\n                    this.showTableTools(tableNode, quill, this.options.selection);\r\n                } else if (this.table) {\r\n                    this.hideTableTools();\r\n                }\r\n            },\r\n            false\r\n        );\r\n        // 绑定 table 的右键插入、删除事件\r\n        this.quill.root.addEventListener('contextmenu', (evt) => {\r\n            if (!this.table) return true;\r\n            evt.preventDefault();\r\n\r\n            const path = evt.path || (evt.composedPath && evt.composedPath());\r\n            if (!path || path.length <= 0) return;\r\n\r\n            const tableNode = path.filter(\r\n                (node) => node.tagName && node.tagName.toUpperCase() === 'TABLE' && node.classList.contains('ql-table')\r\n            )[0];\r\n            // 如果没有选中任何单元格，不显示右键菜单\r\n            if (tableNode && this.tableSelection?.selectedTds?.length) {\r\n                if (this.tableOperationMenu) this.tableOperationMenu = this.tableOperationMenu.destroy();\r\n\r\n                const rowNode = path.filter(\r\n                    (node) => node.tagName && node.tagName.toUpperCase() === 'TR' && node.getAttribute('data-row-id')\r\n                )[0];\r\n\r\n                const cellNode = path.filter(\r\n                    (node) => node.tagName && node.tagName.toUpperCase() === 'TD' && node.getAttribute('data-row-id')\r\n                )[0];\r\n\r\n                this.tableOperationMenu = new TableOperationMenu(\r\n                    {\r\n                        table: tableNode,\r\n                        row: rowNode,\r\n                        cell: cellNode,\r\n                        left: evt.clientX,\r\n                        top: evt.clientY,\r\n                    },\r\n                    quill,\r\n                    this.options.operationMenu\r\n                );\r\n            }\r\n        });\r\n\r\n        this.quill.theme.TableTooltip = new TableTooltip(this.quill, this.options.TableTooltip);\r\n    }\r\n\r\n    showTableTools(table, quill, options) {\r\n        this.table = table;\r\n        this.tableSelection = new TableSelection(table, quill, options);\r\n    }\r\n\r\n    hideTableTools() {\r\n        this.tableSelection && this.tableSelection.destroy();\r\n        this.tableOperationMenu && this.tableOperationMenu.destroy();\r\n        if (this.quill.theme.TableTooltip) {\r\n            this.quill.theme.TableTooltip.curTableId = null;\r\n            this.quill.theme.TableTooltip.hide();\r\n        }\r\n        this.tableSelection = null;\r\n        this.tableOperationMenu = null;\r\n        this.table = null;\r\n    }\r\n\r\n    // 粘贴表格处理\r\n    // 需要带上 col 的 width, 处理 px 和 %\r\n    pasteTableHandler() {\r\n        let tableId = randomId();\r\n        let rowId = randomId();\r\n        let colIds = [];\r\n        let cellCount = 0;\r\n\r\n        // 重新生成 table 里的所有 id, cellFormat 和 colFormat 进行 table 的添加\r\n        // addMatcher 匹配的是标签字符串, 不是 blotName, 只是这些 blotName 设置的是标签字符串\r\n        this.quill.clipboard.addMatcher(blotName.table, (node, delta) => {\r\n            const hasCol = !!delta.ops[0].insert?.col;\r\n            let colDelta;\r\n            // 粘贴表格若原本存在 col, 仅改变 id, 否则重新生成\r\n            const { width: originTableWidth } = node.getBoundingClientRect();\r\n            let isFull = this.options.fullWidth;\r\n            if (hasCol) isFull = !!delta.ops[0].insert?.col?.full;\r\n            const defaultColWidth = isFull\r\n                ? Math.max(100 / colIds.length, CELL_MIN_PRE) + '%'\r\n                : Math.max(originTableWidth / colIds.length, CELL_MIN_WIDTH) + 'px';\r\n\r\n            if (!hasCol) {\r\n                colDelta = colIds.reduce((colDelta, id) => {\r\n                    colDelta.insert({\r\n                        [blotName.tableCol]: {\r\n                            colId: id,\r\n                            tableId,\r\n                            width: defaultColWidth,\r\n                            full: isFull,\r\n                        },\r\n                    });\r\n                    return colDelta;\r\n                }, new Delta());\r\n            } else {\r\n                for (let i = 0; i < delta.ops.length; i++) {\r\n                    if (!delta.ops[i].insert[blotName.tableCol]) {\r\n                        break;\r\n                    }\r\n                    delta.ops[i].insert[blotName.tableCol].tableId = tableId;\r\n                    delta.ops[i].insert[blotName.tableCol].colId = colIds[i];\r\n                    delta.ops[i].insert[blotName.tableCol].full = isFull;\r\n                    if (!delta.ops[i].insert[blotName.tableCol].width) {\r\n                        delta.ops[i].insert[blotName.tableCol].width = defaultColWidth;\r\n                    } else {\r\n                        delta.ops[i].insert[blotName.tableCol].width =\r\n                            parseFloat(delta.ops[i].insert[blotName.tableCol].width) + (isFull ? '%' : 'px');\r\n                    }\r\n                }\r\n            }\r\n            tableId = randomId();\r\n            colIds = [];\r\n            cellCount = 0;\r\n            return colDelta ? colDelta.concat(delta) : delta;\r\n        });\r\n\r\n        this.quill.clipboard.addMatcher(blotName.tableRow, (node, delta) => {\r\n            rowId = randomId();\r\n            cellCount = 0;\r\n            return delta;\r\n        });\r\n\r\n        this.quill.clipboard.addMatcher(blotName.tableCell, (node, delta) => {\r\n            const rowspan = node.getAttribute('rowspan') || 1;\r\n            const colspan = node.getAttribute('colspan') || 1;\r\n            const colIndex = +cellCount + +colspan - 1;\r\n            if (!colIds[colIndex]) {\r\n                for (let i = colIndex; i >= 0; i--) {\r\n                    if (!colIds[i]) colIds[i] = randomId();\r\n                }\r\n            }\r\n            const colId = colIds[colIndex];\r\n            cellCount += 1;\r\n\r\n            if (delta.slice(delta.length() - 1).ops[0]?.insert !== '\\n') {\r\n                delta.insert('\\n');\r\n            }\r\n\r\n            return delta.compose(\r\n                new Delta().retain(delta.length(), {\r\n                    [blotName.tableCellInner]: {\r\n                        tableId,\r\n                        rowId,\r\n                        colId,\r\n                        rowspan,\r\n                        colspan,\r\n                        style: node.getAttribute('style'),\r\n                    },\r\n                })\r\n            );\r\n        });\r\n    }\r\n\r\n    async buildCustomSelect(customSelect, tagName) {\r\n        const dom = document.createElement('div');\r\n        dom.classList.add('ql-custom-select');\r\n        const selector = customSelect && isFunction(customSelect) ? await customSelect() : this.createSelect();\r\n        dom.appendChild(selector);\r\n\r\n        let appendTo = this.controlItem;\r\n        if (tagName === 'select') {\r\n            appendTo = this.controlItem.querySelector('.ql-picker-options');\r\n        }\r\n        if (!appendTo) return;\r\n        selector.addEventListener(CREATE_TABLE, (e) => {\r\n            const { row, col } = e.detail;\r\n            if (!row || !col) return;\r\n            this.insertTable(row, col);\r\n        });\r\n        appendTo.appendChild(dom);\r\n    }\r\n\r\n    async handleSelectDisplay() {\r\n        this.controlItem.classList.add('ql-expanded');\r\n        this.controlItem.dataset.active = true;\r\n        window.removeEventListener('click', this.tableInsertSelectCloseHandler);\r\n        this.tableInsertSelectCloseHandler = (e) => {\r\n            const path = (e.composedPath && e.composedPath()) || e.path;\r\n            const i = path.findIndex((el) => el === this.controlItem);\r\n            if (i > 2 || i === -1) {\r\n                this.closeSelecte();\r\n            }\r\n        };\r\n        window.addEventListener('click', this.tableInsertSelectCloseHandler);\r\n    }\r\n\r\n    createSelect() {\r\n        return showTableSelector();\r\n    }\r\n\r\n    closeSelecte() {\r\n        this.controlItem.classList.remove('ql-expanded');\r\n        this.controlItem.dataset.active = false;\r\n        window.removeEventListener('click', this.tableInsertSelectCloseHandler);\r\n    }\r\n\r\n    // 以上为 toolbar table 按钮的选择生成器相关\r\n    // 以下为 table module 生成表格相关功能函数\r\n\r\n    insertTable(rows, columns) {\r\n        if (rows >= 100 || columns >= 100) {\r\n            throw new Error('Both rows and columns must be less than 100.');\r\n        }\r\n\r\n        this.quill.focus();\r\n        this.range = this.quill.getSelection();\r\n        const range = this.range;\r\n        if (range == null) return;\r\n        const currentBlot = this.quill.getLeaf(range.index)[0];\r\n\r\n        if (isForbidInTable(currentBlot)) {\r\n            throw new Error('Not supported nesting of ' + currentBlot.type + ' type object within a table.');\r\n        }\r\n\r\n        setTimeout(() => {\r\n            let delta = new Delta().retain(range.index);\r\n            delta.insert('\\n');\r\n            const tableId = randomId();\r\n            const colId = new Array(columns).fill(0).map(() => randomId());\r\n\r\n            let { width, paddingLeft, paddingRight } = getComputedStyle(this.quill.root);\r\n            width = parseInt(width);\r\n            paddingLeft = parseInt(paddingLeft);\r\n            paddingRight = parseInt(paddingRight);\r\n            width = width - paddingLeft - paddingRight;\r\n\r\n            delta = new Array(columns).fill('\\n').reduce((memo, text, i) => {\r\n                memo.insert(text, {\r\n                    [blotName.tableCol]: {\r\n                        width: !this.options.fullWidth ? `${Math.floor(width / columns)}px` : `${(1 / columns) * 100}%`,\r\n                        tableId,\r\n                        colId: colId[i],\r\n                        full: this.options.fullWidth,\r\n                    },\r\n                });\r\n                return memo;\r\n            }, delta);\r\n\r\n            // 直接生成 delta 的数据格式并插入\r\n            delta = new Array(rows).fill(0).reduce((memo) => {\r\n                const rowId = randomId();\r\n                return new Array(columns).fill('\\n').reduce((memo, text, i) => {\r\n                    memo.insert(text, {\r\n                        [blotName.tableCellInner]: {\r\n                            tableId,\r\n                            rowId,\r\n                            colId: colId[i],\r\n                            rowspan: 1,\r\n                            colspan: 1,\r\n                        },\r\n                    });\r\n                    return memo;\r\n                }, memo);\r\n            }, delta);\r\n            // console.log(columns, rows);\r\n            this.quill.updateContents(delta, Quill.sources.USER);\r\n            this.quill.setSelection(range.index + columns + columns * rows + 1, Quill.sources.API);\r\n            this.quill.focus();\r\n\r\n            this.closeSelecte();\r\n        }, 0);\r\n    }\r\n\r\n    findTable(blot) {\r\n        let cur = blot;\r\n        while (cur.statics.blotName !== blotName.table && cur !== null) {\r\n            cur = cur.parent;\r\n        }\r\n        return cur;\r\n    }\r\n\r\n    /*\r\n        基准行\r\n            向上: 选中 cell 的第一行\r\n            向下: 选中 cell 的最后一行\r\n        有无跨行单元格跨过选中基准行\r\n            找到所有 colId, 根据若遍历行内的某 colId 跨行至基准行, 则添加至新的 cell 中, 否则:\r\n                向上: 从当前行向前查找所有 cell, 若 cell rowspan + index > 基准行 index, 则此 cell rowspan + 1\r\n                向下: 从当前行向后查找所有 cell, 若 cell rowspan - index < 基准行 index, 则此 cell rowspan + 1\r\n            直到所有 colId 都遍历完, 则生成新的 cell 并插入到当前行的下方/上方\r\n     */\r\n    appendRow(isDown) {\r\n        const selectTds = this.tableSelection.selectedTds;\r\n        if (!selectTds.length) return;\r\n        const table = this.findTable(selectTds[0]);\r\n        const findTd = selectTds[isDown ? selectTds.length - 1 : 0];\r\n        let baseTr = Quill.find(findTd.domNode.parentNode.parentNode);\r\n        if (isDown) {\r\n            let baseTrRowspan = findTd.rowspan;\r\n            while (baseTrRowspan > 1) {\r\n                baseTr = baseTr.next;\r\n                baseTrRowspan -= 1;\r\n            }\r\n        }\r\n\r\n        const colIds = table.getColIds();\r\n        // 用于判断有哪些 col 已被遍历\r\n        const allColIds = new Set(colIds);\r\n        let foreachTr = isDown ? baseTr : baseTr.prev;\r\n        let newCellColId = new Array();\r\n        let indexDiff = 0;\r\n        // 第一行向上插入时 baseTr 是 null, 不需要判断\r\n        if (!foreachTr) {\r\n            allColIds.clear();\r\n            newCellColId = colIds;\r\n        }\r\n        while (allColIds.size) {\r\n            indexDiff += 1;\r\n            if (!foreachTr) {\r\n                break;\r\n            }\r\n            foreachTr.foreachCellInner((cell) => {\r\n                if (!allColIds.has(cell.colId)) return;\r\n                // 找到当前 cell 跨列的所有 colId\r\n                let curCellColIds = [cell.colId];\r\n                if (cell.colspan > 1) {\r\n                    let index = colIds.findIndex((id) => id === cell.colId);\r\n                    if (index === -1) {\r\n                        index = 0;\r\n                    }\r\n                    curCellColIds = colIds.slice(index, index + cell.colspan);\r\n                }\r\n                // 若跨行过基准行, 则更新 rowspan\r\n                if (cell.rowspan > indexDiff) {\r\n                    cell.rowspan += 1;\r\n                } else {\r\n                    // 未包含基准行, 要添加所有的包含的 col\r\n                    newCellColId.push(...curCellColIds);\r\n                }\r\n                curCellColIds.map((id) => allColIds.delete(id));\r\n            });\r\n            foreachTr = foreachTr.prev;\r\n        }\r\n        // 生成新的 cell\r\n        const tableId = table.tableId;\r\n        const newRowId = randomId();\r\n        const newRow = Parchment.create(blotName.tableRow, newRowId);\r\n        const insertColId = new Set(newCellColId);\r\n        // 保持 colId 顺序\r\n        for (let i = 0; i < colIds.length; i++) {\r\n            if (!insertColId.size) break;\r\n            if (insertColId.has(colIds[i])) {\r\n                const td = Parchment.create(blotName.tableCell, {\r\n                    rowId: newRowId,\r\n                    colId: colIds[i],\r\n                    rowspan: 1,\r\n                    colspan: 1,\r\n                });\r\n                const tdInner = Parchment.create(blotName.tableCellInner, {\r\n                    tableId,\r\n                    rowId: newRowId,\r\n                    colId: colIds[i],\r\n                    rowspan: 1,\r\n                    colspan: 1,\r\n                });\r\n                const block = Parchment.create('block');\r\n                block.appendChild(Parchment.create('break'));\r\n                tdInner.appendChild(block);\r\n                td.appendChild(tdInner);\r\n                newRow.appendChild(td);\r\n                insertColId.delete(colIds[i]);\r\n            }\r\n        }\r\n\r\n        baseTr.parent.insertBefore(newRow, isDown ? baseTr.next : baseTr);\r\n    }\r\n\r\n    /*\r\n        第一种情况选中行中没有跨行, 或跨行没有超出选中范围. \r\n            直接删除\r\n        第二种情况选中行内有跨行, 且跨行结束行在选中范围外.\r\n            遍历选中行, 找到所有跨行超出范围的 cell 记录 colId 与超出 rowspan, 之后在选中最后一行的后一行插入对应的 cell\r\n        第三种情况选中行之前有跨行, 且跨行结束行在选中范围内. \r\n            从选中行前一行开始遍历 cell, 找到所有的 col, 若 cell 跨行进入了选中范围(rowsapn - index > 0), rowspan = index\r\n        第四种情况选中行之前有跨行, 且跨行范围包含选中范围.\r\n            选中行前一行开始遍历 cell, 找到所有的 col, 若 cell 跨行进入了选中范围(rowsapn - index > 0), rowspan = rowspan - deleteTrs.length\r\n            \r\n    */\r\n    removeRow() {\r\n        if (!this.tableSelection.selectedTds.length) return;\r\n        const selectTds = this.tableSelection.selectedTds;\r\n        let [rowIds, rows] = selectTds.reduce(\r\n            (pre, td) => {\r\n                if (!pre[0].has(td.rowId)) {\r\n                    pre[0].add(td.rowId);\r\n                    pre[1].push(td.parent.parent);\r\n                }\r\n                return pre;\r\n            },\r\n            [new Set(), []]\r\n        );\r\n        rowIds = Array.from(rowIds);\r\n\r\n        const afterCell = new Map();\r\n        rows.map((tr) => {\r\n            tr.foreachCellInner((cell) => {\r\n                const rowIndexInSelected = rowIds.findIndex((id) => id === cell.rowId);\r\n                if (cell.rowspan > rowIds.length - rowIndexInSelected) {\r\n                    afterCell.set(cell.colId, {\r\n                        cell,\r\n                        rowspan: cell.rowspan - rowIds.length + rowIndexInSelected,\r\n                    });\r\n                }\r\n            });\r\n            tr.remove();\r\n        });\r\n\r\n        const table = this.findTable(selectTds[0]);\r\n        const tableId = table.tableId;\r\n        // 需要添加的跨行 cell\r\n        if (afterCell.size) {\r\n            const nextRow = rows[rows.length - 1].next;\r\n\r\n            const colIds = table.getColIds();\r\n            // 标记插入位置\r\n            let lastTd = null;\r\n            for (let i = 0; i < colIds.length; ) {\r\n                const td = nextRow.domNode.querySelector(`td[data-col-id=\"${colIds[i]}\"]`);\r\n                if (td) {\r\n                    const tdBlot = Quill.find(td);\r\n                    i += tdBlot.colspan;\r\n                    lastTd = tdBlot.next;\r\n                } else {\r\n                    const { cell, rowspan } = afterCell.get(colIds[i]);\r\n                    const newTd = Parchment.create(blotName.tableCell, {\r\n                        rowId: nextRow.rowId,\r\n                        colId: colIds[i],\r\n                        rowspan,\r\n                        colspan: cell.colspan,\r\n                    });\r\n                    const newTdInner = Parchment.create(blotName.tableCellInner, {\r\n                        tableId,\r\n                        rowId: nextRow.rowId,\r\n                        colId: colIds[i],\r\n                        rowspan,\r\n                        colspan: cell.colspan,\r\n                    });\r\n                    cell.moveChildren(newTdInner);\r\n                    newTd.appendChild(newTdInner);\r\n                    nextRow.insertBefore(newTd, lastTd);\r\n                    i += cell.colspan;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n        基准列\r\n            向左: 选中 cell 的第一列 id, index\r\n            向右: 选中 cell 的最后一列 id, index\r\n        找到所有 rowId, 开始遍历行内 cell 至(向右: 基准行 colId)(向左: 基准行前一行 colId) \r\n            有无单元格跨列超过基准列\r\n                // 因为 colspan 最少为 1, 判断时需要 + 1\r\n                向右: 若 colspan + i > 1 + index, 则 colspan + 1 \r\n                向左: 若 colspan + i > 1 + index, 则 colspan + 1 \r\n                colspan + 1 后判断是否跨行, 若跨行则之后 rowspan 行不进行循环\r\n                break\r\n            无 \r\n                找到 index 所在 cell，insertBefore\r\n    */\r\n    appendCol(isRight) {\r\n        if (!this.tableSelection.selectedTds.length) return;\r\n        const selectTds = this.tableSelection.selectedTds;\r\n        const table = this.findTable(selectTds[0]);\r\n        const cols = table.getCols();\r\n        const colIds = table.getColIds();\r\n        const rows = table.getRows();\r\n        const newColId = randomId();\r\n\r\n        let baseColId;\r\n        if (isRight) {\r\n            const lastTd = selectTds[selectTds.length - 1];\r\n            const i = colIds.findIndex((id) => id === lastTd.colId);\r\n            baseColId = colIds[i + lastTd.colspan - 1];\r\n        } else {\r\n            baseColId = selectTds[0].colId;\r\n        }\r\n        // 找到对应 col 下标，同时插入 col 元素\r\n        const baseColIndex = cols.findIndex((col) => {\r\n            if (col.colId === baseColId) {\r\n                const newCol = Parchment.create(blotName.tableCol, {\r\n                    width: !this.options.fullWidth ? '160px' : '6%',\r\n                    full: this.options.fullWidth,\r\n                    tableId: table.tableId,\r\n                    colId: newColId,\r\n                });\r\n                let beforeTarget = isRight ? col.next : col;\r\n                col.parent.insertBefore(newCol, beforeTarget);\r\n                if (this.options.fullWidth) {\r\n                    if (!beforeTarget) {\r\n                        beforeTarget = isRight ? col : col.prev;\r\n                    }\r\n                    beforeTarget.width = Math.max(beforeTarget.width - 6, CELL_MIN_PRE) + '%';\r\n                }\r\n            }\r\n            return col.colId === baseColId;\r\n        });\r\n        table.formatTableWidth();\r\n\r\n        const stopIndex = isRight ? baseColIndex + 1 : baseColIndex;\r\n        let skipRow = 0;\r\n        rows.map((tr) => {\r\n            let colspanIncrease = false;\r\n            let beforeCell = null;\r\n            tr.foreachCellInner((cell) => {\r\n                // 之前行有跨行且跨列的 cell 处理过, 直接跳过\r\n                if (skipRow > 0) {\r\n                    skipRow -= 1;\r\n                    colspanIncrease = true;\r\n                    return true;\r\n                }\r\n                const colIndexInSelected = colIds.findIndex((id) => id === cell.colId);\r\n                if (cell.colspan + colIndexInSelected > stopIndex) {\r\n                    beforeCell = cell.parent;\r\n\r\n                    // 当前 cell 跨列且不是终止位\r\n                    if (cell.colspan !== 1 && colIndexInSelected !== stopIndex) {\r\n                        cell.colspan += 1;\r\n                        colspanIncrease = true;\r\n                        skipRow = cell.rowspan - 1;\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n                if (colIndexInSelected >= stopIndex) {\r\n                    return true;\r\n                }\r\n            });\r\n\r\n            if (!colspanIncrease) {\r\n                const newTd = Parchment.create(blotName.tableCell, {\r\n                    rowId: tr.rowId,\r\n                    colId: newColId,\r\n                    rowspan: 1,\r\n                    colspan: 1,\r\n                });\r\n                const newTdInner = Parchment.create(blotName.tableCellInner, {\r\n                    tableId: table.tableId,\r\n                    rowId: tr.rowId,\r\n                    colId: newColId,\r\n                    rowspan: 1,\r\n                    colspan: 1,\r\n                });\r\n                newTd.appendChild(newTdInner);\r\n                tr.insertBefore(newTd, beforeCell);\r\n            }\r\n        });\r\n    }\r\n\r\n    /*\r\n        找到需要删除的所有 colId\r\n            获取所有 colIds, 遍历选中 cell, 找到 cell 在 colIds 下标, while cell 的 colspan, 将对应 colId 加入 set. 同时保存第一个 col 的 index (first)和最后一个 col 的 index(last)\r\n        遍历所有 row, 遍历 row 中的 cell, 直到 cell i == index\r\n            if i > first && i + colspan > last\r\n                cell.colspan - (last - i + 1)\r\n            if i < first && i + colsapn > last\r\n                cell.colspan - (last - first + 1)\r\n            if i < first && i + colspan > first && i + colspan <= last\r\n                cell.colspan - (i + colspan - first)\r\n            if i >= first && i + colspan <= last\r\n                cell.remove\r\n    */\r\n    removeCol() {\r\n        if (!this.tableSelection.selectedTds.length) return;\r\n        const tds = this.tableSelection.selectedTds;\r\n        const table = this.findTable(this.tableSelection.selectedTds[0]);\r\n        const colIds = table.getColIds();\r\n\r\n        const [firstSelectColIndex, lastSelectColIndex] = tds.reduce(\r\n            (n, cellInner) => {\r\n                const i = colIds.findIndex((id) => id === cellInner.colId);\r\n                return [Math.min(n[0], i), Math.max(n[1], i + cellInner.colspan - 1)];\r\n            },\r\n            [Infinity, -Infinity]\r\n        );\r\n\r\n        const rows = table.getRows();\r\n        rows.map((row) => {\r\n            let i = 0;\r\n            row.foreachCellInner((cell) => {\r\n                if (i > lastSelectColIndex) return true;\r\n                const colspan = cell.colspan;\r\n                if (i + colspan - 1 > lastSelectColIndex) {\r\n                    cell.colspan -= lastSelectColIndex - Math.max(i, firstSelectColIndex) + 1;\r\n                } else if (i < firstSelectColIndex && i + colspan - 1 >= firstSelectColIndex) {\r\n                    cell.colspan -= i + colspan - firstSelectColIndex;\r\n                } else if (i >= firstSelectColIndex) {\r\n                    cell.remove();\r\n                }\r\n\r\n                i += colspan;\r\n            });\r\n        });\r\n\r\n        const cols = table.getCols();\r\n        for (let i = 0; i < cols.length; i++) {\r\n            if (i >= firstSelectColIndex && i <= lastSelectColIndex) {\r\n                cols[i].remove();\r\n            }\r\n            if (i > lastSelectColIndex) {\r\n                break;\r\n            }\r\n        }\r\n        table.formatTableWidth();\r\n    }\r\n\r\n    removeTable() {\r\n        const selectTds = this.tableSelection.selectedTds;\r\n        if (!selectTds.length) return;\r\n        this.findTable(selectTds[0]).remove();\r\n    }\r\n\r\n    mergeCells() {\r\n        if (!this.tableSelection.selectedTds.length) return;\r\n        const selectTds = this.tableSelection.selectedTds;\r\n\r\n        // 计算需要合并的单元格的行列数\r\n        const counts = selectTds.reduce(\r\n            (pre, cellInner) => {\r\n                // 此单元格所在列需要跨的行数\r\n                const colId = cellInner.colId;\r\n                if (!pre[0][colId]) pre[0][colId] = 0;\r\n                pre[0][colId] += cellInner.rowspan;\r\n                // 此单元格所在行需要跨的列数\r\n                const rowId = cellInner.rowId;\r\n                if (!pre[1][rowId]) pre[1][rowId] = 0;\r\n                pre[1][rowId] += cellInner.colspan;\r\n                return pre;\r\n            },\r\n            [{}, {}]\r\n        );\r\n        // counts[0] 记录的是 colId 对应的跨行数\r\n        // counts[1] 记录的是 rowId 对应的跨列数\r\n        const rowCount = Math.max(...Object.values(counts[0]));\r\n        const colCount = Math.max(...Object.values(counts[1]));\r\n\r\n        // console.log(counts);\r\n        // console.log('row', rowCount);\r\n        // console.log('col', colCount);\r\n        // 注意清除 block 的 cache.detla\r\n        // 若不清除 cache.detla 导致显示正常但在获取 quill.getContents() 时会有原 cellInner 未改变的情况\r\n        // 防止这种情况直接 clone\r\n        const mergedCell = selectTds[0].clone();\r\n        selectTds[0].parent.appendChild(mergedCell);\r\n        mergedCell.colspan = colCount;\r\n        mergedCell.rowspan = rowCount;\r\n        for (let i = 0; i < selectTds.length; i++) {\r\n            selectTds[i].moveChildren(mergedCell);\r\n            selectTds[i].remove();\r\n        }\r\n        const table = this.findTable(selectTds[0]);\r\n        // 当合并后的单元格跨列等于 table 的列数, row 可以合并为 1\r\n        const tableColLength = table.getColIds().length;\r\n        if (tableColLength === colCount) {\r\n            mergedCell.rowspan = 1;\r\n        }\r\n        // 当合并后的单元格跨行等于 table 的行数, col 可以合并为 1\r\n        const tableRowLength = table.getRowIds().length;\r\n        if (tableRowLength <= rowCount) {\r\n            // 最终将 colspan 合并为 1, 所以要删除 colspan - 1 个 col\r\n            // 遍历到合并单元格的 colId 后开始进行删除\r\n            const tableCols = table.descendants(TableColFormat);\r\n            let deleteCount = mergedCell.colspan - 1;\r\n            let startDeleteIndex = null;\r\n            for (let i = 0; i < tableCols.length; i++) {\r\n                if (deleteCount <= 0) break;\r\n                // 先删再判断, 防止删除合并后的最后一个单元格\r\n                if (startDeleteIndex !== null) {\r\n                    // 若合并 col 中存在 width 为 null, 则合并后的 col 为 null\r\n                    if (tableCols[startDeleteIndex].width === null || tableCols[i].width === null) {\r\n                        tableCols[startDeleteIndex].width = null;\r\n                    } else {\r\n                        tableCols[startDeleteIndex].width += tableCols[i].width;\r\n                    }\r\n                    tableCols[i].remove();\r\n                    deleteCount -= 1;\r\n                }\r\n                if (tableCols[i].colId === mergedCell.colId) {\r\n                    startDeleteIndex = i;\r\n                }\r\n            }\r\n            mergedCell.colspan = 1;\r\n        }\r\n    }\r\n\r\n    setStyle(styles, cells) {\r\n        if (!cells.length) return;\r\n        cells.map((cellInner) => (cellInner.style = styles));\r\n    }\r\n}\r\n\r\n// 不可插入至表格的 blot\r\nexport const tableCantInsert = [blotName.tableCell];\r\nexport const isForbidInTableBlot = (blot) => {\r\n    return tableCantInsert.includes(blot.statics.blotName);\r\n};\r\n\r\nexport const isForbidInTable = (current) => {\r\n    return current && current.parent\r\n        ? isForbidInTableBlot(current.parent)\r\n            ? true\r\n            : isForbidInTable(current.parent)\r\n        : false;\r\n};\r\n\r\nTableModule.moduleName = moduleName.table;\r\nTableModule.toolName = toolName.table;\r\n\r\nTableModule.createEventName = CREATE_TABLE;\r\nicons[TableModule.toolName] = TableSvg;\r\n\r\nexport const rewirteFormats = () =>\r\n    Quill.register(\r\n        {\r\n            [`formats/list/item`]: ListItemRewrite,\r\n        },\r\n        true\r\n    );\r\nexport default TableModule;\r\n"],"names":["CREATE_TABLE","blotName","moduleName","toolName","randomId","Math","random","toString","slice","zindex","dialog","_ref","arguments","length","undefined","child","_ref$target","target","document","body","_ref$beforeClose","beforeClose","appendTo","createElement","classList","add","style","zIndex","overlay","appendChild","content","onclick","e","stopPropagation","originOverflow","getComputedStyle","overflow","close","remove","createInputItem","label","options","type","value","inputItem","inputLabel","innerText","inputInput","input","key","setAttribute","max","min","addEventListener","onfocus","onblur","errorTip","msg","contains","querySelector","removeError","item","showTableCreator","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","row","col","box","inputContent","_createInputItem","rowItem","rowInput","rowErrorTip","_createInputItem2","colItem","colInput","colErrorTip","control","confirmBtn","cancelBtn","_args2","wrap","_context2","prev","next","abrupt","Promise","resolve","reject","_callee","_context","Number","isNaN","stop","apply","this","css","domNode","rules","prop","getRelativeRect","targetRect","container","containerRect","getBoundingClientRect","x","scrollLeft","y","scrollTop","x1","width","y1","height","computeBoundaryFromRects","startRect","endRect","isFunction","val","MENU_ITEMS_DEFAULT","insertColumnLeft","text","handler","tableModule","quill","getModule","appendCol","hideTableTools","insertColumnRight","insertRowTop","appendRow","insertRowBottom","groupEnd","removeCol","removeRow","removeTable","mergeCell","mergeCells","setBackgroundColor","subTitle","tempCells","tableSelection","selectedTds","setStyle","backgroundColor","marginLeft","clearBackgroundColor","setBorderColor","borderColor","clearBorderColor","TableOperationMenu","constructor","params","table","menuItems","optionsMerge","boundary","destroyHandler","destroy","bind","menuInitial","_this$options","_this$options$items","_this$options2","_this$options$items2","_this$options3","replaceItems","items","Object","assign","setMenuPosition","_ref6","left","top","menuRect","resLeft","resTop","concat","_ref7","cell","name","position","subTitleCreator","menuItemCreator","dividingCreator","dividing","title","removeEventListener","_ref8","iconSrc","node","iconSpan","innerHTML","textSpan","nodes","call","Array","isArray","map","sub","Container","Quill","import","Parchment","TableBodyFormat","optimize","super","statics","tagName","moveChildren","deleteAt","index","parent","children","forEachAt","offset","scope","Scope","BLOCK_BLOT","ContainBlot","create","insertBefore","blot","ref","head","format","tail","replace","defaultChild","TableCellInnerFormat","tableId","rowId","colId","rowspan","colspan","dataset","_style","clearDeltaCache","forEach","cache","cloneTarget","clone","formats","_this$domNode$dataset","_this$domNode$dataset2","tableWrapper","tableBody","tr","td","className","TableCellFormat","cssText","getAttribute","getCellInner","descendants","_this$domNode$dataset3","cellInner","TableColFormat","full","endsWith","parseFloat","hasAttribute","_this$domNode$dataset4","tableColgroup","_this$domNode$dataset5","ttableId","tcolId","TableColgroupFormat","findCol","cur","iterator","i","TableRowFormat","foreachCellInner","func","_slicedToArray","TableFormat","formatTableWidth","colWidthFillTable","colgroup","colsWidth","reduce","sum","setTimeout","getRows","getRowIds","d","getCols","getColIds","TableWrapperFormat","preventDefault","ondrop","ondragover","dataTransfer","dropEffect","allowedChildren","find","_document$querySelect","ListItem","ListItemRewrite","replaceWith","isolate","replacement","attributes","copy","PRIMARY_COLOR","TableSelection","dragging","selectingHandler","mouseDownHandler","cellSelect","scrollHandler","helpLinesInitial","ResizeObserver","entries","clearSelection","observe","root","closeHandler","on","events","TEXT_CHANGE","_this$options4","primaryColor","addScrollEvent","dom","handle","push","clearScrollEvent","_this$scrollHandler$i","addContainer","button","closest","startTableId","mouseMoveHandler","endTd","endTdRect","parentNode","startTdRect","correctBoundary","computeSelectedTds","repositionHelpLines","startTd","blur","mouseUpHandler","srcollHide","selectedCells","tableCell","_getRelativeRect","_getRelativeRect2","scrollX","tableViewScrollLeft","display","off","TIP_HEIGHT","TableTooltip","_defineProperty","rect","tableTop","offsetTop","rootScrollTop","tableDisableToolHandlers","curTableId","focusTableChange","tableCols","hide","isMobile","window","handledEvents","down","move","up","listen","_this$options5","_this$options6","tipHeight","disableToolNames","from","Set","EDITOR_CHANGE","eventName","range","getSelection","scroll","descendant","_tableWrapper$childre","disableFromTable","tbody","_tbody$children","scrollSync","show","toggleDisableToolbarTools","toolbar","disableByTable","_step","_iterator","_createForOfIteratorHelper","s","n","done","handlers","err","f","enableFromTable","controls","_ref9","_toolbar$container$qu","_ref10","btn","includes","toLowerCase","_this$scrollHandler$i2","tableWrapperRect","join","bindDrag","tipColBreak","curColIndex","tableColHeads","getElementsByClassName","tableColHeadSeparators","handleMousemove","tableWidth","resX","changedTouches","clientX","minWidth","CELL_MIN_PRE","maxRange","right","Infinity","minRange","floor","w","handleMouseup","parseInt","pre","oldWidthPre","last","totalWidthNextPre","removeChild","handleMousedown","divDom","tableRect","el","Delta","BlockEmbed","Block","icons","requiredContainer","register","TableModule","controlItem","tableInsertSelectCloseHandler","_ref11","_this$controlItem$get","TableSvg","buildCustomSelect","customSelect","addHandler","handleSelectDisplay","pasteTableHandler","evt","_path$filter","path","composedPath","tableNode","filter","toUpperCase","showTableTools","selection","_this$tableSelection","tableOperationMenu","rowNode","cellNode","clientY","operationMenu","theme","colIds","cellCount","clipboard","addMatcher","delta","_delta$ops$0$insert","_delta$ops$0$insert2","colDelta","hasCol","ops","insert","originTableWidth","isFull","fullWidth","defaultColWidth","id","blotName_tableCol","_delta$slice$ops$","colIndex","compose","retain","blotName_tableCellInner","_this","_callee3","selector","_context3","t0","sent","createSelect","_e$detail","detail","insertTable","_this2","_callee4","_context4","active","findIndex","closeSelecte","showTableSelector","selectDom","selectBlock","r","c","selectItem","selectCustom","sendTableData","_ref4","dispatchEvent","CustomEvent","updateSelectBlockItems","_selectDom$dataset","querySelectorAll","childs","_e$target$dataset","removeAttribute","_selectDom$dataset2","then","_ref5","rows","columns","Error","focus","currentBlot","getLeaf","isForbidInTable","fill","_getComputedStyle","paddingLeft","paddingRight","memo","updateContents","sources","USER","setSelection","API","findTable","isDown","selectTds","findTd","baseTr","baseTrRowspan","allColIds","foreachTr","newCellColId","indexDiff","clear","size","has","curCellColIds","delete","newRowId","newRow","insertColId","tdInner","block","_selectTds$reduce","_selectTds$reduce2","rowIds","afterCell","Map","rowIndexInSelected","set","nextRow","lastTd","tdBlot","_afterCell$get","get","newTd","newTdInner","isRight","baseColId","cols","newColId","baseColIndex","newCol","beforeTarget","stopIndex","skipRow","colspanIncrease","beforeCell","colIndexInSelected","tds","_tds$reduce","_tds$reduce2","firstSelectColIndex","lastSelectColIndex","counts","rowCount","values","colCount","mergedCell","deleteCount","startDeleteIndex","styles","cells","tableCantInsert","isForbidInTableBlot","current","createEventName","rewirteFormats"],"mappings":"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"}